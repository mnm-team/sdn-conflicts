


2022-06-05 18:34:56.779808
number of nodes in rule graph = 0
number of edges in rule graph = 0

self.ft = 
Number of rules: [0, {}]

self.lc_cfl_rules = 
Number of local conflicts by dpid: [0, {}]
Number of local conflicts by class: [0, {}]

self.hc_cfl_rules = 
1:{}
2:{}
3:{}
Number of rules causing hidden conflicts by control app: {}

self.dt_cfl_rules = 
1:[]
2:[]
3:[]
4:[]
Number of distributed conflicts by class: {'drop': 0, 'loop': 0}

2022-06-05 18:35:06.237743
New rule is coming, number of existing rules: [0, {}]
Time difference (ms) in checking local conflicts and adding new rule (1,0,1) to the rule database = 0.110626220703125

2022-06-05 18:35:06.301939
New rule is coming, number of existing rules: [1, {1: 1}]
Time difference (ms) in checking local conflicts and adding new rule (1,0,2) to the rule database = 0.28228759765625

2022-06-05 18:35:06.380379
New rule is coming, number of existing rules: [2, {1: 2}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,1) to the rule database = 0.12230873107910156

2022-06-05 18:35:06.457025
New rule is coming, number of existing rules: [3, {1: 2, 3: 1}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,2) to the rule database = 0.8692741394042969

2022-06-05 18:35:06.536396
New rule is coming, number of existing rules: [4, {1: 2, 3: 2}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,1) to the rule database = 1.7778873443603516

2022-06-05 18:35:06.600346
New rule is coming, number of existing rules: [5, {1: 2, 3: 2, 4: 1}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,2) to the rule database = 0.16021728515625

2022-06-05 18:35:06.672258
New rule is coming, number of existing rules: [6, {1: 2, 3: 2, 4: 2}]
Time difference (ms) in checking local conflicts and adding new rule (5,0,1) to the rule database = 0.10180473327636719

2022-06-05 18:35:06.772651
New rule is coming, number of existing rules: [7, {1: 2, 3: 2, 4: 2, 5: 1}]
Time difference (ms) in checking local conflicts and adding new rule (5,0,2) to the rule database = 0.1437664031982422

2022-06-05 18:35:06.836319
New rule is coming, number of existing rules: [8, {1: 2, 3: 2, 4: 2, 5: 2}]
Time difference (ms) in checking local conflicts and adding new rule (6,0,1) to the rule database = 0.11587142944335938

2022-06-05 18:35:06.902745
New rule is coming, number of existing rules: [9, {1: 2, 3: 2, 4: 2, 5: 2, 6: 1}]
Time difference (ms) in checking local conflicts and adding new rule (6,0,2) to the rule database = 4.9839019775390625

2022-06-05 18:35:06.968544
New rule is coming, number of existing rules: [10, {1: 2, 3: 2, 4: 2, 5: 2, 6: 2}]
Time difference (ms) in checking local conflicts and adding new rule (2,0,1) to the rule database = 0.11301040649414062

2022-06-05 18:35:07.076031
New rule is coming, number of existing rules: [11, {1: 2, 2: 1, 3: 2, 4: 2, 5: 2, 6: 2}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,3) to the rule database = 0.4761219024658203

2022-06-05 18:35:07.138595
New rule is coming, number of existing rules: [12, {1: 2, 2: 1, 3: 3, 4: 2, 5: 2, 6: 2}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,3) to the rule database = 0.2613067626953125

2022-06-05 18:35:07.210116
New rule is coming, number of existing rules: [13, {1: 2, 2: 1, 3: 3, 4: 3, 5: 2, 6: 2}]
Time difference (ms) in checking local conflicts and adding new rule (5,0,3) to the rule database = 0.34880638122558594

2022-06-05 18:35:07.272379
New rule is coming, number of existing rules: [14, {1: 2, 2: 1, 3: 3, 4: 3, 5: 3, 6: 2}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,4) to the rule database = 0.2827644348144531

2022-06-05 18:35:07.317407
New rule is coming, number of existing rules: [15, {1: 2, 2: 1, 3: 4, 4: 3, 5: 3, 6: 2}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,5) to the rule database = 0.5738735198974609

2022-06-05 18:35:07.388587
New rule is coming, number of existing rules: [16, {1: 2, 2: 1, 3: 5, 4: 3, 5: 3, 6: 2}]
Time difference (ms) in checking local conflicts and adding new rule (5,0,4) to the rule database = 0.2562999725341797


2022-06-05 18:35:17.805497
Number of existing rules: [17, {1: 2, 2: 1, 3: 5, 4: 3, 5: 4, 6: 2}]
number of nodes in rule graph = 0
number of edges in rule graph = 0
number of rules to be removed = 0
number of rules to be added = 17
Time difference (ms) in checking hidden conflicts for rule (1,0,2) = 0.017404556274414062
Time difference (ms) in adding rule (1,0,2) to the rule graph = 14.658927917480469
Time difference (ms) in checking hidden conflicts for rule (3,0,1) = 0.013113021850585938
Time difference (ms) in adding rule (3,0,1) to the rule graph = 6.880044937133789
Time difference (ms) in checking hidden conflicts for rule (3,0,2) = 0.011920928955078125
Time difference (ms) in adding rule (3,0,2) to the rule graph = 12.40992546081543
Time difference (ms) in checking hidden conflicts for rule (4,0,1) = 0.011444091796875
Time difference (ms) in adding rule (4,0,1) to the rule graph = 2.932310104370117
Time difference (ms) in checking hidden conflicts for rule (4,0,2) = 0.010967254638671875
Time difference (ms) in adding rule (4,0,2) to the rule graph = 7.513523101806641
Time difference (ms) in checking hidden conflicts for rule (5,0,1) = 0.011444091796875
Time difference (ms) in checking hidden conflicts for rule (5,0,2) = 0.010251998901367188
Time difference (ms) in checking hidden conflicts for rule (6,0,1) = 0.010013580322265625
Time difference (ms) in adding rule (6,0,1) to the rule graph = 0.29754638671875
Time difference (ms) in checking hidden conflicts for rule (6,0,2) = 0.01049041748046875
Time difference (ms) in adding rule (6,0,2) to the rule graph = 0.3151893615722656
Time difference (ms) in checking hidden conflicts for rule (2,0,1) = 0.4558563232421875
Time difference (ms) in adding rule (2,0,1) to the rule graph = 0.92315673828125
Time difference (ms) in checking hidden conflicts for rule (3,0,3) = 0.010728836059570312
Time difference (ms) in adding rule (3,0,3) to the rule graph = 6.596803665161133
Time difference (ms) in checking hidden conflicts for rule (4,0,3) = 0.010728836059570312
Time difference (ms) in adding rule (4,0,3) to the rule graph = 17.613887786865234
Time difference (ms) in checking hidden conflicts for rule (5,0,3) = 0.010967254638671875
Time difference (ms) in adding rule (5,0,3) to the rule graph = 18.029451370239258
Time difference (ms) in checking hidden conflicts for rule (3,0,4) = 0.011205673217773438
Time difference (ms) in adding rule (3,0,4) to the rule graph = 30.172348022460938
Time difference (ms) in checking hidden conflicts for rule (3,0,5) = 0.012159347534179688
Time difference (ms) in adding rule (3,0,5) to the rule graph = 8.188962936401367
Time difference (ms) in checking hidden conflicts for rule (5,0,4) = 0.011682510375976562
Time difference (ms) in adding rule (5,0,4) to the rule graph = 2.2547245025634766
Time difference (ms) after this round of updating the rule graph = 128.78680229187012
Avarage time difference (ms) in removing 0 rules from rule graph = 0
Avarage time difference (ms) in adding 10 rules to rule graph = 7.014131546020508


2022-06-05 18:35:27.985768
number of nodes in rule graph = 18
number of edges in rule graph = 16
((3, 0, 2), (2, 0, -3)) {((1, 0, 2), (3, 0, 2)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), -1), ((5, 0, 2), (3, 0, 2)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), -1)}
((4, 0, 1), (2, 0, -3)) {((4, 0, 1),): ((1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1)}
((5, 0, 1), (4, 0, 2)) {((5, 0, 1), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 4)}
((3, 0, 3), (4, 0, 3)) {((3, 0, 3), (4, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((5, 0, 4), (5, 0, -1)) {((3, 0, 5), (5, 0, 4)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), -1)}
((4, 0, 3), (4, 0, -4)) {((3, 0, 3), (4, 0, 3), (5, 0, 3), (3, 0, 4), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), -1)}
((4, 0, 3), (5, 0, 3)) {((3, 0, 4), (4, 0, 3), (5, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((4, 0, 3), (5, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((3, 0, 3), (4, 0, 3), (5, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((5, 0, 2), (3, 0, 2)) {((5, 0, 2), (3, 0, 2)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), 2)}
((3, 0, 4), (4, 0, 3)) {((3, 0, 3), (4, 0, 3), (5, 0, 3), (3, 0, 4), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((3, 0, 4), (4, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((5, 0, 3), (3, 0, 4)) {((5, 0, 3), (3, 0, 4)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((3, 0, 4), (4, 0, 3), (5, 0, 3), (3, 0, 4), (3, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((3, 0, 3), (4, 0, 3), (5, 0, 3), (3, 0, 4)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((2, 0, 1), (2, 0, -2)) {((2, 0, 1),): ((1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1), -1)}
((3, 0, 1), (4, 0, 2)) {((1, 0, 2), (3, 0, 1), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 4), ((3, 0, 1), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 4)}
((4, 0, 2), (2, 0, -3)) {((1, 0, 2), (3, 0, 1), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1), ((5, 0, 1), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1)}
((1, 0, 2), (3, 0, 2)) {((1, 0, 2), (3, 0, 2)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), 2)}
((1, 0, 2), (3, 0, 1)) {((1, 0, 2), (3, 0, 1)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 3)}
((3, 0, 5), (5, 0, 4)) {((3, 0, 5), (5, 0, 4)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), 2)}

self.ft = 
1:{0: {1: (512, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.1.1', 'in_port': 1, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [2], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
2:{0: {1: (512, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.1.1', 'in_port': 1}), [OFPActionSetField(ipv4_src='172.16.1.2'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1), ('172.16.1.2', -1, -1, -1, -1, -1, {2}))}}
3:{0: {1: (512, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.1.1', 'in_port': 1, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [4], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [2], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 3: (512, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.1.4', 'in_port': 1, 'ipv4_dst': '172.16.1.5'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 4: (514, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.1.4', 'in_port': 5, 'ipv4_dst': '172.16.1.5'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (5, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 5: (512, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.1.2', 'in_port': 1, 'ipv4_dst': '172.16.1.6'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [5], (1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5}))}}
4:{0: {1: (512, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.1.1', 'in_port': 1, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [2], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 2: (513, 4, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [2], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 3: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.1.4', 'in_port': 4, 'ipv4_dst': '172.16.1.5'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [5], (4, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5}))}}
5:{0: {1: (512, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.1.1', 'in_port': 1}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [4], (1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=1,type=0)], [3], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {1})), 3: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.1.4', 'in_port': 2, 'ipv4_dst': '172.16.1.5'}), [OFPActionOutput(len=16,max_len=65509,port=1,type=0)], [3], (2, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {1})), 4: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.1.2', 'in_port': 1, 'ipv4_dst': '172.16.1.6'}), [], [], (1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
6:{0: {1: (512, 4, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.1.1', 'in_port': 1, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3}))}}
Number of rules: [17, {1: 2, 2: 1, 3: 5, 4: 3, 5: 4, 6: 2}]

self.lc_cfl_rules = 
1:{0: {1: [(2, 'class Shadowing2 (local conflicts)', (2, 3, 1))], 2: []}}
3:{0: {2: [(1, 'class Generalization1 (local conflicts)', (1, 3, 1))]}}
4:{0: {1: [(2, 'class Redundancy (local conflicts)', (2, 3, 0))], 2: []}}
5:{0: {2: [(1, 'class Correlation3 (local conflicts)', (0, 4, 1))]}}
6:{0: {2: [(1, 'class Overlap (local conflicts)', (1, 3, 0))]}}
Number of local conflicts by dpid: [5, {1: {'sha2': 1}, 3: {'gen1': 1}, 4: {'red': 1}, 5: {'cor3': 1}, 6: {'ove': 1}}]
Number of local conflicts by class: [5, {'ove': 1, 'cor3': 1, 'sha2': 1, 'gen1': 1, 'red': 1}]

self.hc_cfl_rules = 
1:{'eplb': [((2, 0, 1), [[1], 2048, [6, 17], ['172.16.1.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]])]}
2:{}
3:{}
Number of rules causing hidden conflicts by control app: {'eplb': 1}

self.dt_cfl_rules = 
1:[(((3, 0, 3), (4, 0, 3), (5, 0, 3), (3, 0, 4), (4, 0, 3), (4, 0, -4)), (-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1))]
2:[(((3, 0, 5), (5, 0, 4)), (-1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1))]
3:[(((2, 0, 1),), (1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1))]
4:[]
Number of distributed conflicts by class: {'drop': 1, 'loop': 1}