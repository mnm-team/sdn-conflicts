


2022-06-05 19:01:17.759033
number of nodes in rule graph = 0
number of edges in rule graph = 0

self.ft = 
Number of rules: [0, {}]

self.lc_cfl_rules = 
Number of local conflicts by dpid: [0, {}]
Number of local conflicts by class: [0, {}]

self.hc_cfl_rules = 
1:{}
2:{}
3:{}
Number of rules causing hidden conflicts by control app: {}

self.dt_cfl_rules = 
1:[]
2:[]
3:[]
4:[]
Number of distributed conflicts by class: {'drop': 0, 'loop': 0}

2022-06-05 19:01:25.512479
New rule is coming, number of existing rules: [0, {}]
Time difference (ms) in checking local conflicts and adding new rule (8,0,1) to the rule database = 0.14138221740722656

2022-06-05 19:01:25.585514
New rule is coming, number of existing rules: [1, {8: 1}]
Time difference (ms) in checking local conflicts and adding new rule (8,0,2) to the rule database = 2.3424625396728516

2022-06-05 19:01:25.660971
New rule is coming, number of existing rules: [2, {8: 2}]
Time difference (ms) in checking local conflicts and adding new rule (8,0,3) to the rule database = 7.946491241455078

2022-06-05 19:01:25.741441
New rule is coming, number of existing rules: [3, {8: 3}]
Time difference (ms) in checking local conflicts and adding new rule (7,0,1) to the rule database = 1.6880035400390625

2022-06-05 19:01:25.813402
New rule is coming, number of existing rules: [4, {8: 3, 7: 1}]
Time difference (ms) in checking local conflicts and adding new rule (7,0,2) to the rule database = 6.196737289428711

2022-06-05 19:01:25.884659
New rule is coming, number of existing rules: [5, {8: 3, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (20,0,1) to the rule database = 0.12421607971191406

2022-06-05 19:01:25.969614
New rule is coming, number of existing rules: [6, {8: 3, 20: 1, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (20,0,2) to the rule database = 0.19288063049316406

2022-06-05 19:01:26.035782
New rule is coming, number of existing rules: [7, {8: 3, 20: 2, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (2,0,1) to the rule database = 0.12159347534179688

2022-06-05 19:01:26.101850
New rule is coming, number of existing rules: [8, {8: 3, 2: 1, 20: 2, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (8,0,4) to the rule database = 0.4189014434814453

2022-06-05 19:01:26.179802
New rule is coming, number of existing rules: [9, {8: 4, 2: 1, 20: 2, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (20,0,3) to the rule database = 3.020048141479492

2022-06-05 19:01:26.241253
New rule is coming, number of existing rules: [10, {8: 4, 2: 1, 20: 3, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (9,0,1) to the rule database = 0.051021575927734375


2022-06-05 19:01:36.785839
Number of existing rules: [11, {8: 4, 9: 1, 2: 1, 20: 3, 7: 2}]
number of nodes in rule graph = 0
number of edges in rule graph = 0
number of rules to be removed = 0
number of rules to be added = 11
Time difference (ms) in checking hidden conflicts for rule (8,0,1) = 0.01811981201171875
Time difference (ms) in adding rule (8,0,1) to the rule graph = 59.50617790222168
Time difference (ms) in checking hidden conflicts for rule (8,0,2) = 0.013113021850585938
Time difference (ms) in adding rule (8,0,2) to the rule graph = 19.757509231567383
Time difference (ms) in checking hidden conflicts for rule (8,0,3) = 0.011920928955078125
Time difference (ms) in adding rule (8,0,3) to the rule graph = 4.135847091674805
Time difference (ms) in checking hidden conflicts for rule (7,0,1) = 0.011205673217773438
Time difference (ms) in checking hidden conflicts for rule (7,0,2) = 0.01049041748046875
Time difference (ms) in checking hidden conflicts for rule (20,0,1) = 0.010251998901367188
Time difference (ms) in adding rule (20,0,1) to the rule graph = 17.304182052612305
Time difference (ms) in checking hidden conflicts for rule (20,0,2) = 0.013113021850585938
Time difference (ms) in adding rule (20,0,2) to the rule graph = 25.65598487854004
Time difference (ms) in checking hidden conflicts for rule (2,0,1) = 0.35500526428222656
Time difference (ms) in adding rule (2,0,1) to the rule graph = 0.3495216369628906
Time difference (ms) in checking hidden conflicts for rule (8,0,4) = 0.011920928955078125
Time difference (ms) in adding rule (8,0,4) to the rule graph = 10.583877563476562
Time difference (ms) in checking hidden conflicts for rule (20,0,3) = 0.011205673217773438
Time difference (ms) in checking hidden conflicts for rule (9,0,1) = 0.010967254638671875
Time difference (ms) in adding rule (9,0,1) to the rule graph = 1.367807388305664
Time difference (ms) after this round of updating the rule graph = 138.66090774536133
Avarage time difference (ms) in removing 0 rules from rule graph = 0
Avarage time difference (ms) in adding 8 rules to rule graph = 17.332613468170166


2022-06-05 19:01:46.957055
number of nodes in rule graph = 14
number of edges in rule graph = 17
((20, 0, 3), (20, 0, -4)) {((20, 0, 3), (8, 0, 4), (20, 0, 3), (20, 0, -4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), -1)}
((20, 0, 3), (8, 0, 4)) {((20, 0, 3), (8, 0, 4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2), ((8, 0, 4), (20, 0, 3), (8, 0, 4), (8, 0, -4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2)}
((8, 0, 1), (20, 0, 1)) {((7, 0, 1), (8, 0, 1), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2), ((7, 0, 2), (8, 0, 1), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2), ((8, 0, 1), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2)}
((8, 0, 1), (20, 0, 2)) {((7, 0, 2), (8, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((8, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 1), (8, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((8, 0, 3), (20, 0, 1)) {((7, 0, 2), (8, 0, 3), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2), ((7, 0, 1), (8, 0, 3), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((8, 0, 3), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((8, 0, 3), (20, 0, 2)) {((7, 0, 1), (8, 0, 3), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((8, 0, 3), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 2), (8, 0, 3), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((9, 0, 1), (9, 0, -1)) {((9, 0, 1),): ((1, 2048, 0, '172.16.7.21', '172.16.2.9', -1, -1, -1, -1), -1)}
((7, 0, 1), (8, 0, 1)) {((7, 0, 1), (8, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((7, 0, 1), (8, 0, 2)) {((7, 0, 1), (8, 0, 2)): ((-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((7, 0, 1), (8, 0, 3)) {((7, 0, 1), (8, 0, 3)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((8, 0, 4), (20, 0, 3)) {((8, 0, 4), (20, 0, 3)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2), ((20, 0, 3), (8, 0, 4), (20, 0, 3), (20, 0, -4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2)}
((7, 0, 2), (8, 0, 1)) {((7, 0, 2), (8, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((7, 0, 2), (8, 0, 2)) {((7, 0, 2), (8, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 2)}
((7, 0, 2), (8, 0, 3)) {((7, 0, 2), (8, 0, 3)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2)}
((2, 0, 1), (2, 0, -2)) {((2, 0, 1),): ((1, 2048, 0, ('172.16.42.0', '255.255.255.0'), -1, -1, -1, -1, -1), -1)}
((8, 0, 2), (20, 0, 1)) {((7, 0, 1), (8, 0, 2), (20, 0, 1)): ((-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((7, 0, 2), (8, 0, 2), (20, 0, 1)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 2), ((8, 0, 2), (20, 0, 1)): ((-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((8, 0, 2), (20, 0, 2)) {((8, 0, 2), (20, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 1), (8, 0, 2), (20, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 2), (8, 0, 2), (20, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 3)}

self.ft = 
8:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 4, 'eth_type': 2048, 'ipv4_src': ('172.16.2.0', '255.255.255.0'), 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=8,type=0)], [20], (4, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {8})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.2.7', 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [20], (-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 3: (514, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': ('172.16.2.0', '255.255.255.0'), 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [20], (-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 4: (512, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.42.8', 'ipv4_dst': '172.16.47.21'}), [OFPActionOutput(len=16,max_len=65509,port=8,type=0)], [20], (-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {8}))}}
9:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.7.21', 'ipv4_dst': '172.16.2.9'}), [], [], (1, 2048, 0, '172.16.7.21', '172.16.2.9', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
2:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': ('172.16.42.0', '255.255.255.0')}), [OFPActionSetField(ipv4_src='172.16.2.7'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, ('172.16.42.0', '255.255.255.0'), -1, -1, -1, -1, -1), ('172.16.2.7', -1, -1, -1, -1, -1, {2}))}}
20:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': ('172.16.2.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (1, 2048, 0, ('172.16.2.0', '255.255.255.0'), -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.42.8', 'ipv4_dst': '172.16.47.21'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [8], (1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2}))}}
7:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (2, 2048, 0, -1, ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [8], (2, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
Number of rules: [11, {8: 4, 9: 1, 2: 1, 20: 3, 7: 2}]

self.lc_cfl_rules = 
8:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))], 3: [(1, 'class Generalization1 (local conflicts)', (1, 3, 1)), (2, 'class Redundancy (local conflicts)', (0, 3, 0))]}}
20:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: []}}
7:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
Number of local conflicts by dpid: [5, {8: {'cor1': 1, 'gen1': 1, 'red': 1}, 20: {'ove': 1}, 7: {'sha1': 1}}]
Number of local conflicts by class: [5, {'sha1': 1, 'cor1': 1, 'ove': 1, 'gen1': 1, 'red': 1}]

self.hc_cfl_rules = 
1:{'eplb': [((2, 0, 1), [[1], 2048, [6, 17], [('172.16.42.0', '255.255.255.0')], ['192.168.1.2'], [-1], [-1], [-1], [-1]])]}
2:{}
3:{}
Number of rules causing hidden conflicts by control app: {'eplb': 1}

self.dt_cfl_rules = 
1:[(((20, 0, 3), (8, 0, 4), (20, 0, 3), (20, 0, -4)), (-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1))]
2:[(((9, 0, 1),), (1, 2048, 0, '172.16.7.21', '172.16.2.9', -1, -1, -1, -1))]
3:[(((2, 0, 1),), (1, 2048, 0, ('172.16.42.0', '255.255.255.0'), -1, -1, -1, -1, -1))]
4:[]
Number of distributed conflicts by class: {'drop': 1, 'loop': 1}

2022-06-05 19:02:26.549190
New rule is coming, number of existing rules: [11, {8: 4, 9: 1, 2: 1, 20: 3, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (16,0,1) to the rule database = 0.1201629638671875

2022-06-05 19:02:26.622618
New rule is coming, number of existing rules: [12, {16: 1, 2: 1, 20: 3, 7: 2, 8: 4, 9: 1}]
Time difference (ms) in checking local conflicts and adding new rule (16,0,2) to the rule database = 0.8344650268554688

2022-06-05 19:02:26.688368
New rule is coming, number of existing rules: [13, {16: 2, 2: 1, 20: 3, 7: 2, 8: 4, 9: 1}]
Time difference (ms) in checking local conflicts and adding new rule (16,0,3) to the rule database = 0.9434223175048828

2022-06-05 19:02:26.740807
New rule is coming, number of existing rules: [14, {16: 3, 2: 1, 20: 3, 7: 2, 8: 4, 9: 1}]
Time difference (ms) in checking local conflicts and adding new rule (17,0,1) to the rule database = 0.10657310485839844

2022-06-05 19:02:26.802958
New rule is coming, number of existing rules: [15, {16: 3, 17: 1, 2: 1, 20: 3, 7: 2, 8: 4, 9: 1}]
Time difference (ms) in checking local conflicts and adding new rule (17,0,2) to the rule database = 0.41174888610839844

2022-06-05 19:02:26.867993
New rule is coming, number of existing rules: [16, {16: 3, 17: 2, 2: 1, 20: 3, 7: 2, 8: 4, 9: 1}]
Time difference (ms) in checking local conflicts and adding new rule (20,0,4) to the rule database = 0.3712177276611328

2022-06-05 19:02:26.972190
New rule is coming, number of existing rules: [17, {16: 3, 17: 2, 2: 1, 20: 4, 7: 2, 8: 4, 9: 1}]
Time difference (ms) in checking local conflicts and adding new rule (2,0,2) to the rule database = 0.2262592315673828

2022-06-05 19:02:27.036551
New rule is coming, number of existing rules: [18, {16: 3, 17: 2, 2: 2, 20: 4, 7: 2, 8: 4, 9: 1}]
Time difference (ms) in checking local conflicts and adding new rule (17,0,3) to the rule database = 0.32520294189453125

2022-06-05 19:02:27.084529
New rule is coming, number of existing rules: [19, {16: 3, 17: 3, 2: 2, 20: 4, 7: 2, 8: 4, 9: 1}]
Time difference (ms) in checking local conflicts and adding new rule (20,0,5) to the rule database = 0.2694129943847656

2022-06-05 19:02:27.154142
New rule is coming, number of existing rules: [20, {16: 3, 17: 3, 2: 2, 20: 5, 7: 2, 8: 4, 9: 1}]
Time difference (ms) in checking local conflicts and adding new rule (21,0,1) to the rule database = 0.06580352783203125


2022-06-05 19:02:38.055206
Number of existing rules: [21, {16: 3, 17: 3, 2: 2, 20: 5, 21: 1, 7: 2, 8: 4, 9: 1}]
number of nodes in rule graph = 14
number of edges in rule graph = 17
number of rules to be removed = 0
number of rules to be added = 10
Time difference (ms) in checking hidden conflicts for rule (16,0,1) = 0.018835067749023438
Time difference (ms) in adding rule (16,0,1) to the rule graph = 18.244028091430664
Time difference (ms) in checking hidden conflicts for rule (16,0,2) = 0.015735626220703125
Time difference (ms) in adding rule (16,0,2) to the rule graph = 0.4143714904785156
Time difference (ms) in checking hidden conflicts for rule (16,0,3) = 0.014543533325195312
Time difference (ms) in adding rule (16,0,3) to the rule graph = 3.01361083984375
Time difference (ms) in checking hidden conflicts for rule (17,0,1) = 0.01430511474609375
Time difference (ms) in adding rule (17,0,1) to the rule graph = 9.451150894165039
Time difference (ms) in checking hidden conflicts for rule (17,0,2) = 0.013589859008789062
Time difference (ms) in adding rule (17,0,2) to the rule graph = 8.193254470825195
Time difference (ms) in checking hidden conflicts for rule (20,0,4) = 0.01239776611328125
Time difference (ms) in adding rule (20,0,4) to the rule graph = 16.556739807128906
Time difference (ms) in checking hidden conflicts for rule (2,0,2) = 0.14829635620117188
Time difference (ms) in adding rule (2,0,2) to the rule graph = 2.062559127807617
Time difference (ms) in checking hidden conflicts for rule (17,0,3) = 0.011444091796875
Time difference (ms) in adding rule (17,0,3) to the rule graph = 4.349231719970703
Time difference (ms) in checking hidden conflicts for rule (20,0,5) = 0.010967254638671875
Time difference (ms) in checking hidden conflicts for rule (21,0,1) = 0.010967254638671875
Time difference (ms) in adding rule (21,0,1) to the rule graph = 8.501768112182617
Time difference (ms) after this round of updating the rule graph = 70.78671455383301
Avarage time difference (ms) in removing 0 rules from rule graph = 0
Avarage time difference (ms) in adding 9 rules to rule graph = 7.865190505981445


2022-06-05 19:02:48.186281
number of nodes in rule graph = 24
number of edges in rule graph = 28
((20, 0, 3), (20, 0, -4)) {((20, 0, 3), (8, 0, 4), (20, 0, 3), (20, 0, -4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), -1)}
((20, 0, 3), (8, 0, 4)) {((20, 0, 3), (8, 0, 4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2), ((8, 0, 4), (20, 0, 3), (8, 0, 4), (8, 0, -4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2)}
((20, 0, 2), (21, 0, -3)) {((16, 0, 1), (17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), -1), ((16, 0, 1), (17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), -1)}
((2, 0, 2), (2, 0, -2)) {((2, 0, 2),): ((1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), -1)}
((7, 0, 1), (8, 0, 1)) {((7, 0, 1), (8, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((7, 0, 1), (8, 0, 2)) {((7, 0, 1), (8, 0, 2)): ((-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((7, 0, 1), (8, 0, 3)) {((7, 0, 1), (8, 0, 3)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((8, 0, 4), (20, 0, 3)) {((8, 0, 4), (20, 0, 3)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2), ((20, 0, 3), (8, 0, 4), (20, 0, 3), (20, 0, -4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2)}
((21, 0, 1), (21, 0, -1)) {((20, 0, 4), (21, 0, 1)): ((-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), -1)}
((7, 0, 2), (8, 0, 1)) {((7, 0, 2), (8, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((7, 0, 2), (8, 0, 2)) {((7, 0, 2), (8, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 2)}
((7, 0, 2), (8, 0, 3)) {((7, 0, 2), (8, 0, 3)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2)}
((8, 0, 3), (20, 0, 1)) {((7, 0, 2), (8, 0, 3), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2), ((7, 0, 1), (8, 0, 3), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((8, 0, 3), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((8, 0, 3), (20, 0, 2)) {((7, 0, 1), (8, 0, 3), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((8, 0, 3), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 2), (8, 0, 3), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((8, 0, 2), (20, 0, 1)) {((7, 0, 1), (8, 0, 2), (20, 0, 1)): ((-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((7, 0, 2), (8, 0, 2), (20, 0, 1)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 2), ((8, 0, 2), (20, 0, 1)): ((-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((8, 0, 2), (20, 0, 2)) {((8, 0, 2), (20, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 1), (8, 0, 2), (20, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 2), (8, 0, 2), (20, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 3)}
((17, 0, 1), (20, 0, 2)) {((16, 0, 1), (17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), 3)}
((8, 0, 1), (20, 0, 1)) {((7, 0, 1), (8, 0, 1), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2), ((7, 0, 2), (8, 0, 1), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2), ((8, 0, 1), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2)}
((8, 0, 1), (20, 0, 2)) {((7, 0, 2), (8, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((8, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 1), (8, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((9, 0, 1), (9, 0, -1)) {((9, 0, 1),): ((1, 2048, 0, '172.16.7.21', '172.16.2.9', -1, -1, -1, -1), -1)}
((17, 0, 2), (20, 0, 2)) {((16, 0, 1), (17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), 3)}
((20, 0, 5), (17, 0, 3)) {((17, 0, 3), (20, 0, 5), (17, 0, 3), (17, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2), ((20, 0, 5), (17, 0, 3)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2)}
((20, 0, 5), (20, 0, -4)) {((20, 0, 5), (17, 0, 3), (20, 0, 5), (20, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), -1)}
((17, 0, 3), (20, 0, 5)) {((20, 0, 5), (17, 0, 3), (20, 0, 5), (20, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2), ((17, 0, 3), (20, 0, 5)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2)}
((20, 0, 4), (21, 0, 1)) {((20, 0, 4), (21, 0, 1)): ((-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), 2)}
((2, 0, 1), (2, 0, -2)) {((2, 0, 1),): ((1, 2048, 0, ('172.16.42.0', '255.255.255.0'), -1, -1, -1, -1, -1), -1)}
((16, 0, 1), (17, 0, 2)) {((16, 0, 1), (17, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((16, 0, 1), (17, 0, 1)) {((16, 0, 1), (17, 0, 1)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 4)}

self.ft = 
16:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 4, 'eth_type': 2048, 'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [17], (4, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.5.16', 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [19], (-1, 2048, 0, '172.16.5.16', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 3: (514, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [19], (-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6}))}}
17:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [20], (2, 2048, 0, -1, ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [20], (2, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 3: (512, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.35.17', 'ipv4_dst': '172.16.37.21'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [20], (-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
2:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': ('172.16.42.0', '255.255.255.0')}), [OFPActionSetField(ipv4_src='172.16.2.7'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, ('172.16.42.0', '255.255.255.0'), -1, -1, -1, -1, -1), ('172.16.2.7', -1, -1, -1, -1, -1, {2})), 2: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': ('172.16.5.0', '255.255.255.0')}), [OFPActionSetField(ipv4_src='172.16.5.16'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), ('172.16.5.16', -1, -1, -1, -1, -1, {2}))}}
20:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': ('172.16.2.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (1, 2048, 0, ('172.16.2.0', '255.255.255.0'), -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.42.8', 'ipv4_dst': '172.16.47.21'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [8], (1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 4: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 5: (513, 2, OFPMatch(oxm_fields={'in_port': 5, 'eth_type': 2048, 'ipv4_src': '172.16.35.17', 'ipv4_dst': '172.16.37.21'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [17], (5, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6}))}}
21:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.5.18', 'ipv4_dst': '172.16.7.21'}), [], [], (1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
7:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (2, 2048, 0, -1, ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [8], (2, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
8:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 4, 'eth_type': 2048, 'ipv4_src': ('172.16.2.0', '255.255.255.0'), 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=8,type=0)], [20], (4, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {8})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.2.7', 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [20], (-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 3: (514, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': ('172.16.2.0', '255.255.255.0'), 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [20], (-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 4: (512, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.42.8', 'ipv4_dst': '172.16.47.21'}), [OFPActionOutput(len=16,max_len=65509,port=8,type=0)], [20], (-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {8}))}}
9:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.7.21', 'ipv4_dst': '172.16.2.9'}), [], [], (1, 2048, 0, '172.16.7.21', '172.16.2.9', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
Number of rules: [21, {16: 3, 17: 3, 2: 2, 20: 5, 21: 1, 7: 2, 8: 4, 9: 1}]

self.lc_cfl_rules = 
8:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))], 3: [(1, 'class Generalization1 (local conflicts)', (1, 3, 1)), (2, 'class Redundancy (local conflicts)', (0, 3, 0))]}}
16:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))], 3: [(1, 'class Generalization1 (local conflicts)', (1, 3, 1)), (2, 'class Redundancy (local conflicts)', (0, 3, 0))]}}
20:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: [], 4: [(2, 'class Overlap (local conflicts)', (1, 4, 0))]}}
17:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
7:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
Number of local conflicts by dpid: [10, {8: {'cor1': 1, 'gen1': 1, 'red': 1}, 16: {'cor1': 1, 'gen1': 1, 'red': 1}, 7: {'sha1': 1}, 20: {'ove': 2}, 17: {'sha1': 1}}]
Number of local conflicts by class: [10, {'sha1': 2, 'cor1': 2, 'ove': 2, 'gen1': 2, 'red': 2}]

self.hc_cfl_rules = 
1:{'eplb': [((2, 0, 1), [[1], 2048, [6, 17], [('172.16.42.0', '255.255.255.0')], ['192.168.1.2'], [-1], [-1], [-1], [-1]]), ((2, 0, 2), [[1], 2048, [6, 17], [('172.16.5.0', '255.255.255.0')], ['192.168.1.2'], [-1], [-1], [-1], [-1]])]}
2:{}
3:{}
Number of rules causing hidden conflicts by control app: {'eplb': 2}

self.dt_cfl_rules = 
1:[(((20, 0, 3), (8, 0, 4), (20, 0, 3), (20, 0, -4)), (-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1)), (((20, 0, 5), (17, 0, 3), (20, 0, 5), (20, 0, -4)), (-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1))]
2:[(((9, 0, 1),), (1, 2048, 0, '172.16.7.21', '172.16.2.9', -1, -1, -1, -1)), (((20, 0, 4), (21, 0, 1)), (-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1))]
3:[(((2, 0, 1),), (1, 2048, 0, ('172.16.42.0', '255.255.255.0'), -1, -1, -1, -1, -1)), (((2, 0, 2),), (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1))]
4:[]
Number of distributed conflicts by class: {'drop': 2, 'loop': 2}

2022-06-05 19:02:57.055726
New rule is coming, number of existing rules: [21, {16: 3, 17: 3, 2: 2, 20: 5, 21: 1, 7: 2, 8: 4, 9: 1}]
Time difference (ms) in checking local conflicts and adding new rule (1,0,1) to the rule database = 0.11467933654785156

2022-06-05 19:02:57.129273
New rule is coming, number of existing rules: [22, {16: 3, 17: 3, 2: 2, 20: 5, 21: 1, 7: 2, 8: 4, 9: 1, 1: 1}]
Time difference (ms) in checking local conflicts and adding new rule (1,0,2) to the rule database = 0.3223419189453125

2022-06-05 19:02:57.203618
New rule is coming, number of existing rules: [23, {16: 3, 17: 3, 2: 2, 20: 5, 21: 1, 7: 2, 8: 4, 9: 1, 1: 2}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,1) to the rule database = 0.12230873107910156

2022-06-05 19:02:57.283310
New rule is coming, number of existing rules: [24, {16: 3, 17: 3, 2: 2, 3: 1, 20: 5, 21: 1, 7: 2, 8: 4, 9: 1, 1: 2}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,2) to the rule database = 0.7154941558837891

2022-06-05 19:02:57.342948
New rule is coming, number of existing rules: [25, {16: 3, 17: 3, 2: 2, 3: 2, 20: 5, 21: 1, 7: 2, 8: 4, 9: 1, 1: 2}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,1) to the rule database = 0.12373924255371094

2022-06-05 19:02:57.424394
New rule is coming, number of existing rules: [26, {16: 3, 17: 3, 2: 2, 3: 2, 20: 5, 21: 1, 7: 2, 8: 4, 9: 1, 1: 2, 4: 1}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,2) to the rule database = 0.1735687255859375

2022-06-05 19:02:57.497597
New rule is coming, number of existing rules: [27, {16: 3, 17: 3, 2: 2, 3: 2, 20: 5, 21: 1, 7: 2, 8: 4, 9: 1, 1: 2, 4: 2}]
Time difference (ms) in checking local conflicts and adding new rule (6,0,1) to the rule database = 0.125885009765625

2022-06-05 19:02:57.560616
New rule is coming, number of existing rules: [28, {1: 2, 2: 2, 3: 2, 4: 2, 6: 1, 7: 2, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (6,0,2) to the rule database = 1.0936260223388672

2022-06-05 19:02:57.629450
New rule is coming, number of existing rules: [29, {1: 2, 2: 2, 3: 2, 4: 2, 6: 2, 7: 2, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (7,0,3) to the rule database = 0.14090538024902344

2022-06-05 19:02:57.682766
New rule is coming, number of existing rules: [30, {1: 2, 2: 2, 3: 2, 4: 2, 6: 2, 7: 3, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (7,0,4) to the rule database = 0.3514289855957031

2022-06-05 19:02:57.757769
New rule is coming, number of existing rules: [31, {1: 2, 2: 2, 3: 2, 4: 2, 6: 2, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (2,0,3) to the rule database = 1.5952587127685547

2022-06-05 19:02:57.801739
New rule is coming, number of existing rules: [32, {1: 2, 2: 3, 3: 2, 4: 2, 6: 2, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,3) to the rule database = 6.180047988891602

2022-06-05 19:02:57.849047
New rule is coming, number of existing rules: [33, {1: 2, 2: 3, 3: 3, 4: 2, 6: 2, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,3) to the rule database = 0.9043216705322266

2022-06-05 19:02:57.889282
New rule is coming, number of existing rules: [34, {1: 2, 2: 3, 3: 3, 4: 3, 6: 2, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,4) to the rule database = 0.1690387725830078


2022-06-05 19:03:08.233719
Number of existing rules: [35, {1: 2, 2: 3, 3: 3, 4: 4, 6: 2, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
number of nodes in rule graph = 24
number of edges in rule graph = 28
number of rules to be removed = 0
number of rules to be added = 14
Time difference (ms) in checking hidden conflicts for rule (1,0,1) = 0.016689300537109375
Time difference (ms) in adding rule (1,0,1) to the rule graph = 22.5372314453125
Time difference (ms) in checking hidden conflicts for rule (1,0,2) = 0.012636184692382812
Time difference (ms) in adding rule (1,0,2) to the rule graph = 17.197370529174805
Time difference (ms) in checking hidden conflicts for rule (3,0,1) = 0.010967254638671875
Time difference (ms) in adding rule (3,0,1) to the rule graph = 6.121158599853516
Time difference (ms) in checking hidden conflicts for rule (3,0,2) = 0.011205673217773438
Time difference (ms) in adding rule (3,0,2) to the rule graph = 8.581876754760742
Time difference (ms) in checking hidden conflicts for rule (4,0,1) = 0.011444091796875
Time difference (ms) in adding rule (4,0,1) to the rule graph = 2.6900768280029297
Time difference (ms) in checking hidden conflicts for rule (4,0,2) = 0.011205673217773438
Time difference (ms) in adding rule (4,0,2) to the rule graph = 7.032155990600586
Time difference (ms) in checking hidden conflicts for rule (6,0,1) = 0.010967254638671875
Time difference (ms) in adding rule (6,0,1) to the rule graph = 4.073143005371094
Time difference (ms) in checking hidden conflicts for rule (6,0,2) = 0.011205673217773438
Time difference (ms) in adding rule (6,0,2) to the rule graph = 2.0110607147216797
Time difference (ms) in checking hidden conflicts for rule (7,0,3) = 0.010967254638671875
Time difference (ms) in adding rule (7,0,3) to the rule graph = 8.622169494628906
Time difference (ms) in checking hidden conflicts for rule (7,0,4) = 0.011205673217773438
Time difference (ms) in adding rule (7,0,4) to the rule graph = 7.99250602722168
Time difference (ms) in checking hidden conflicts for rule (2,0,3) = 0.3807544708251953
Time difference (ms) in checking hidden conflicts for rule (3,0,3) = 0.011444091796875
Time difference (ms) in adding rule (3,0,3) to the rule graph = 18.05567741394043
Time difference (ms) in checking hidden conflicts for rule (4,0,3) = 0.010967254638671875
Time difference (ms) in checking hidden conflicts for rule (4,0,4) = 0.011444091796875
Time difference (ms) in adding rule (4,0,4) to the rule graph = 7.479190826416016
Time difference (ms) after this round of updating the rule graph = 112.39361763000488
Avarage time difference (ms) in removing 0 rules from rule graph = 0
Avarage time difference (ms) in adding 10 rules to rule graph = 8.685874938964844


2022-06-05 19:03:18.404579
number of nodes in rule graph = 42
number of edges in rule graph = 47
((3, 0, 2), (4, 0, 2)) {((3, 0, 2), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 4), ((2, 0, 3), (3, 0, 2), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.2', '172.16.22.7', -1, -1, -1, -1), 4), ((1, 0, 2), (3, 0, 2), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 4)}
((20, 0, 3), (20, 0, -4)) {((20, 0, 3), (8, 0, 4), (20, 0, 3), (20, 0, -4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), -1)}
((20, 0, 3), (8, 0, 4)) {((20, 0, 3), (8, 0, 4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2), ((8, 0, 4), (20, 0, 3), (8, 0, 4), (8, 0, -4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2)}
((2, 0, 3), (3, 0, 2)) {((2, 0, 3), (3, 0, 2)): ((-1, 2048, 0, '172.16.1.2', ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((20, 0, 2), (21, 0, -3)) {((16, 0, 1), (17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), -1), ((16, 0, 1), (17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), -1)}
((6, 0, 1), (7, 0, 4)) {((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 4)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3), ((6, 0, 1), (7, 0, 4)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 3)}
((6, 0, 1), (7, 0, 3)) {((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 3)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 2), ((6, 0, 1), (7, 0, 3)): ((-1, 2048, 0, '172.16.21.1', ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((2, 0, 2), (2, 0, -2)) {((2, 0, 2),): ((1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), -1)}
((7, 0, 1), (8, 0, 1)) {((7, 0, 1), (8, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((7, 0, 1), (8, 0, 2)) {((7, 0, 1), (8, 0, 2)): ((-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((7, 0, 1), (8, 0, 3)) {((7, 0, 1), (8, 0, 3)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((8, 0, 4), (20, 0, 3)) {((8, 0, 4), (20, 0, 3)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2), ((20, 0, 3), (8, 0, 4), (20, 0, 3), (20, 0, -4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2)}
((4, 0, 3), (4, 0, -4)) {((4, 0, 3), (3, 0, 3), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), -1)}
((4, 0, 3), (3, 0, 3)) {((4, 0, 3), (3, 0, 3)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2), ((3, 0, 3), (4, 0, 3), (3, 0, 3), (3, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2)}
((21, 0, 1), (21, 0, -1)) {((20, 0, 4), (21, 0, 1)): ((-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), -1)}
((7, 0, 2), (8, 0, 1)) {((7, 0, 2), (8, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((7, 0, 2), (8, 0, 2)) {((7, 0, 2), (8, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 2)}
((7, 0, 2), (8, 0, 3)) {((7, 0, 2), (8, 0, 3)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2)}
((8, 0, 3), (20, 0, 1)) {((7, 0, 2), (8, 0, 3), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2), ((7, 0, 1), (8, 0, 3), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((8, 0, 3), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((8, 0, 3), (20, 0, 2)) {((7, 0, 1), (8, 0, 3), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((8, 0, 3), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 2), (8, 0, 3), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((4, 0, 4), (4, 0, -1)) {((4, 0, 4),): ((1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1), -1)}
((4, 0, 2), (8, 0, -3)) {((2, 0, 3), (3, 0, 2), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.2', '172.16.22.7', -1, -1, -1, -1), -1), ((1, 0, 2), (3, 0, 2), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), -1), ((1, 0, 1), (4, 0, 2)): ((-1, 2048, 0, ('172.16.21.0', '255.255.255.0'), '172.16.22.7', -1, -1, -1, -1), -1)}
((1, 0, 1), (4, 0, 1)) {((1, 0, 1), (4, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((1, 0, 1), (4, 0, 2)) {((1, 0, 1), (4, 0, 2)): ((-1, 2048, 0, ('172.16.21.0', '255.255.255.0'), '172.16.22.7', -1, -1, -1, -1), 4)}
((8, 0, 2), (20, 0, 1)) {((7, 0, 1), (8, 0, 2), (20, 0, 1)): ((-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((7, 0, 2), (8, 0, 2), (20, 0, 1)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 2), ((8, 0, 2), (20, 0, 1)): ((-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((8, 0, 2), (20, 0, 2)) {((8, 0, 2), (20, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 1), (8, 0, 2), (20, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 2), (8, 0, 2), (20, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 3)}
((6, 0, 2), (8, 0, -3)) {((1, 0, 2), (3, 0, 1), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((4, 0, 1), (8, 0, -3)) {((1, 0, 1), (4, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((17, 0, 1), (20, 0, 2)) {((16, 0, 1), (17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), 3)}
((7, 0, 3), (7, 0, -2)) {((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 3)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((8, 0, 1), (20, 0, 1)) {((7, 0, 1), (8, 0, 1), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2), ((7, 0, 2), (8, 0, 1), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2), ((8, 0, 1), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2)}
((8, 0, 1), (20, 0, 2)) {((7, 0, 2), (8, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((8, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 1), (8, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((9, 0, 1), (9, 0, -1)) {((9, 0, 1),): ((1, 2048, 0, '172.16.7.21', '172.16.2.9', -1, -1, -1, -1), -1)}
((17, 0, 2), (20, 0, 2)) {((16, 0, 1), (17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), 3)}
((3, 0, 3), (4, 0, 3)) {((3, 0, 3), (4, 0, 3)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2), ((4, 0, 3), (3, 0, 3), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2)}
((20, 0, 5), (17, 0, 3)) {((17, 0, 3), (20, 0, 5), (17, 0, 3), (17, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2), ((20, 0, 5), (17, 0, 3)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2)}
((20, 0, 5), (20, 0, -4)) {((20, 0, 5), (17, 0, 3), (20, 0, 5), (20, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), -1)}
((7, 0, 4), (7, 0, -2)) {((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 4)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((17, 0, 3), (20, 0, 5)) {((20, 0, 5), (17, 0, 3), (20, 0, 5), (20, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2), ((17, 0, 3), (20, 0, 5)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2)}
((20, 0, 4), (21, 0, 1)) {((20, 0, 4), (21, 0, 1)): ((-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), 2)}
((2, 0, 1), (2, 0, -2)) {((2, 0, 1),): ((1, 2048, 0, ('172.16.42.0', '255.255.255.0'), -1, -1, -1, -1, -1), -1)}
((3, 0, 1), (6, 0, 1)) {((3, 0, 1), (6, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 4), ((1, 0, 2), (3, 0, 1), (6, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 4)}
((3, 0, 1), (6, 0, 2)) {((1, 0, 2), (3, 0, 1), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3), ((3, 0, 1), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((1, 0, 2), (3, 0, 2)) {((1, 0, 2), (3, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 2)}
((1, 0, 2), (3, 0, 1)) {((1, 0, 2), (3, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((16, 0, 1), (17, 0, 2)) {((16, 0, 1), (17, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((16, 0, 1), (17, 0, 1)) {((16, 0, 1), (17, 0, 1)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 4)}

self.ft = 
1:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': ('172.16.21.0', '255.255.255.0'), 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [4], (1, 2048, 0, ('172.16.21.0', '255.255.255.0'), ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
2:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': ('172.16.42.0', '255.255.255.0')}), [OFPActionSetField(ipv4_src='172.16.2.7'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, ('172.16.42.0', '255.255.255.0'), -1, -1, -1, -1, -1), ('172.16.2.7', -1, -1, -1, -1, -1, {2})), 2: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': ('172.16.5.0', '255.255.255.0')}), [OFPActionSetField(ipv4_src='172.16.5.16'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), ('172.16.5.16', -1, -1, -1, -1, -1, {2})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.2.1'}), [OFPActionSetField(ipv4_src='172.16.1.2'), OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (1, 2048, 0, '172.16.2.1', -1, -1, -1, -1, -1), ('172.16.1.2', -1, -1, -1, -1, -1, {4}))}}
3:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.21.1', 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [6], (1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, -1, ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 3, 'eth_type': 2048, 'ipv4_src': '172.16.22.1', 'ipv4_dst': '172.16.23.7'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (3, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
4:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.21.1', 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [8], (1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 4, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [8], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 4, 'eth_type': 2048, 'ipv4_src': '172.16.22.1', 'ipv4_dst': '172.16.23.7'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [3], (4, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 4: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.21.2', 'ipv4_dst': ('172.16.24.0', '255.255.255.0')}), [], [], (1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
6:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [7], (1, 2048, 0, -1, ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3}))}}
7:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (2, 2048, 0, -1, ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [8], (2, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.21.1'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.21.1', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 4: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2}))}}
8:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 4, 'eth_type': 2048, 'ipv4_src': ('172.16.2.0', '255.255.255.0'), 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=8,type=0)], [20], (4, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {8})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.2.7', 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [20], (-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 3: (514, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': ('172.16.2.0', '255.255.255.0'), 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [20], (-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 4: (512, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.42.8', 'ipv4_dst': '172.16.47.21'}), [OFPActionOutput(len=16,max_len=65509,port=8,type=0)], [20], (-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {8}))}}
9:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.7.21', 'ipv4_dst': '172.16.2.9'}), [], [], (1, 2048, 0, '172.16.7.21', '172.16.2.9', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
16:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 4, 'eth_type': 2048, 'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [17], (4, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.5.16', 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [19], (-1, 2048, 0, '172.16.5.16', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 3: (514, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [19], (-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6}))}}
17:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [20], (2, 2048, 0, -1, ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [20], (2, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 3: (512, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.35.17', 'ipv4_dst': '172.16.37.21'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [20], (-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
20:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': ('172.16.2.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (1, 2048, 0, ('172.16.2.0', '255.255.255.0'), -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.42.8', 'ipv4_dst': '172.16.47.21'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [8], (1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 4: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 5: (513, 2, OFPMatch(oxm_fields={'in_port': 5, 'eth_type': 2048, 'ipv4_src': '172.16.35.17', 'ipv4_dst': '172.16.37.21'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [17], (5, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6}))}}
21:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.5.18', 'ipv4_dst': '172.16.7.21'}), [], [], (1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
Number of rules: [35, {1: 2, 2: 3, 3: 3, 4: 4, 6: 2, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]

self.lc_cfl_rules = 
16:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))], 3: [(1, 'class Generalization1 (local conflicts)', (1, 3, 1)), (2, 'class Redundancy (local conflicts)', (0, 3, 0))]}}
17:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
3:{0: {2: [(1, 'class Generalization1 (local conflicts)', (1, 3, 1))]}}
20:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: [], 4: [(2, 'class Overlap (local conflicts)', (1, 4, 0))]}}
1:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))]}}
6:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
7:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))], 3: [(4, 'class Overlap (local conflicts)', (2, 4, 0))], 4: []}}
8:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))], 3: [(1, 'class Generalization1 (local conflicts)', (1, 3, 1)), (2, 'class Redundancy (local conflicts)', (0, 3, 0))]}}
4:{0: {1: [(2, 'class Redundancy (local conflicts)', (2, 3, 0))], 2: []}}
Number of local conflicts by dpid: [15, {16: {'cor1': 1, 'gen1': 1, 'red': 1}, 17: {'sha1': 1}, 3: {'gen1': 1}, 20: {'ove': 2}, 6: {'sha1': 1}, 1: {'cor1': 1}, 8: {'cor1': 1, 'gen1': 1, 'red': 1}, 4: {'red': 1}, 7: {'sha1': 1, 'ove': 1}}]
Number of local conflicts by class: [15, {'sha1': 3, 'cor1': 3, 'ove': 3, 'gen1': 3, 'red': 3}]

self.hc_cfl_rules = 
1:{'eplb': [((2, 0, 1), [[1], 2048, [6, 17], [('172.16.42.0', '255.255.255.0')], ['192.168.1.2'], [-1], [-1], [-1], [-1]]), ((2, 0, 2), [[1], 2048, [6, 17], [('172.16.5.0', '255.255.255.0')], ['192.168.1.2'], [-1], [-1], [-1], [-1]]), ((2, 0, 3), [[1], 2048, [6, 17], ['172.16.2.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]])]}
2:{}
3:{}
Number of rules causing hidden conflicts by control app: {'eplb': 3}

self.dt_cfl_rules = 
1:[(((20, 0, 3), (8, 0, 4), (20, 0, 3), (20, 0, -4)), (-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1)), (((20, 0, 5), (17, 0, 3), (20, 0, 5), (20, 0, -4)), (-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1)), (((4, 0, 3), (3, 0, 3), (4, 0, 3), (4, 0, -4)), (-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1))]
2:[(((9, 0, 1),), (1, 2048, 0, '172.16.7.21', '172.16.2.9', -1, -1, -1, -1)), (((20, 0, 4), (21, 0, 1)), (-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1)), (((4, 0, 4),), (1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1))]
3:[(((2, 0, 1),), (1, 2048, 0, ('172.16.42.0', '255.255.255.0'), -1, -1, -1, -1, -1)), (((2, 0, 2),), (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1)), (((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 3)), (-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1)), (((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 4)), (-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1))]
4:[]
Number of distributed conflicts by class: {'drop': 3, 'loop': 3}

2022-06-05 19:03:39.136494
New rule is coming, number of existing rules: [35, {1: 2, 2: 3, 3: 3, 4: 4, 6: 2, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (1,0,3) to the rule database = 0.47326087951660156

2022-06-05 19:03:39.204030
New rule is coming, number of existing rules: [36, {1: 3, 2: 3, 3: 3, 4: 4, 6: 2, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (1,0,4) to the rule database = 0.3600120544433594

2022-06-05 19:03:39.268466
New rule is coming, number of existing rules: [37, {1: 4, 2: 3, 3: 3, 4: 4, 6: 2, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,4) to the rule database = 2.3877620697021484

2022-06-05 19:03:39.338678
New rule is coming, number of existing rules: [38, {1: 4, 2: 3, 3: 4, 4: 4, 6: 2, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,5) to the rule database = 5.956888198852539

2022-06-05 19:03:39.416004
New rule is coming, number of existing rules: [39, {1: 4, 2: 3, 3: 5, 4: 4, 6: 2, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,5) to the rule database = 0.4737377166748047

2022-06-05 19:03:39.486684
New rule is coming, number of existing rules: [40, {1: 4, 2: 3, 3: 5, 4: 5, 6: 2, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,6) to the rule database = 0.5424022674560547

2022-06-05 19:03:39.560400
New rule is coming, number of existing rules: [41, {1: 4, 2: 3, 3: 5, 4: 6, 6: 2, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (5,0,1) to the rule database = 0.09989738464355469

2022-06-05 19:03:39.624293
New rule is coming, number of existing rules: [42, {1: 4, 2: 3, 3: 5, 4: 6, 5: 1, 6: 2, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (5,0,2) to the rule database = 0.15616416931152344

2022-06-05 19:03:39.697056
New rule is coming, number of existing rules: [43, {1: 4, 2: 3, 3: 5, 4: 6, 5: 2, 6: 2, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (6,0,3) to the rule database = 0.3681182861328125

2022-06-05 19:03:39.781824
New rule is coming, number of existing rules: [44, {1: 4, 2: 3, 3: 5, 4: 6, 5: 2, 6: 3, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (6,0,4) to the rule database = 2.186298370361328

2022-06-05 19:03:39.865543
New rule is coming, number of existing rules: [45, {1: 4, 2: 3, 3: 5, 4: 6, 5: 2, 6: 4, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (2,0,4) to the rule database = 7.88116455078125

2022-06-05 19:03:39.932210
New rule is coming, number of existing rules: [46, {1: 4, 2: 4, 3: 5, 4: 6, 5: 2, 6: 4, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,6) to the rule database = 0.4551410675048828

2022-06-05 19:03:39.979806
New rule is coming, number of existing rules: [47, {1: 4, 2: 4, 3: 6, 4: 6, 5: 2, 6: 4, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,7) to the rule database = 0.25844573974609375

2022-06-05 19:03:40.013450
New rule is coming, number of existing rules: [48, {1: 4, 2: 4, 3: 6, 4: 7, 5: 2, 6: 4, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (5,0,3) to the rule database = 0.1430511474609375

2022-06-05 19:03:40.055061
New rule is coming, number of existing rules: [49, {1: 4, 2: 4, 3: 6, 4: 7, 5: 3, 6: 4, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,7) to the rule database = 0.25391578674316406

2022-06-05 19:03:40.101074
New rule is coming, number of existing rules: [50, {1: 4, 2: 4, 3: 7, 4: 7, 5: 3, 6: 4, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,8) to the rule database = 1.363515853881836

2022-06-05 19:03:40.149025
New rule is coming, number of existing rules: [51, {1: 4, 2: 4, 3: 8, 4: 7, 5: 3, 6: 4, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (5,0,4) to the rule database = 0.17499923706054688


2022-06-05 19:03:50.512761
Number of existing rules: [52, {1: 4, 2: 4, 3: 8, 4: 7, 5: 4, 6: 4, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]
number of nodes in rule graph = 42
number of edges in rule graph = 47
number of rules to be removed = 0
number of rules to be added = 17
Time difference (ms) in checking hidden conflicts for rule (1,0,4) = 0.0209808349609375
Time difference (ms) in adding rule (1,0,4) to the rule graph = 13.350486755371094
Time difference (ms) in checking hidden conflicts for rule (3,0,4) = 0.014543533325195312
Time difference (ms) in adding rule (3,0,4) to the rule graph = 15.84625244140625
Time difference (ms) in checking hidden conflicts for rule (3,0,5) = 0.012636184692382812
Time difference (ms) in adding rule (3,0,5) to the rule graph = 15.645503997802734
Time difference (ms) in checking hidden conflicts for rule (4,0,5) = 0.011682510375976562
Time difference (ms) in adding rule (4,0,5) to the rule graph = 4.326820373535156
Time difference (ms) in checking hidden conflicts for rule (4,0,6) = 0.011205673217773438
Time difference (ms) in adding rule (4,0,6) to the rule graph = 24.791717529296875
Time difference (ms) in checking hidden conflicts for rule (5,0,1) = 0.011682510375976562
Time difference (ms) in checking hidden conflicts for rule (5,0,2) = 0.010251998901367188
Time difference (ms) in checking hidden conflicts for rule (6,0,3) = 0.011444091796875
Time difference (ms) in adding rule (6,0,3) to the rule graph = 5.684852600097656
Time difference (ms) in checking hidden conflicts for rule (6,0,4) = 0.011205673217773438
Time difference (ms) in adding rule (6,0,4) to the rule graph = 7.269382476806641
Time difference (ms) in checking hidden conflicts for rule (2,0,4) = 2.191305160522461
Time difference (ms) in adding rule (2,0,4) to the rule graph = 0.9768009185791016
Time difference (ms) in checking hidden conflicts for rule (3,0,6) = 0.010967254638671875
Time difference (ms) in adding rule (3,0,6) to the rule graph = 14.725923538208008
Time difference (ms) in checking hidden conflicts for rule (4,0,7) = 0.011205673217773438
Time difference (ms) in adding rule (4,0,7) to the rule graph = 13.294458389282227
Time difference (ms) in checking hidden conflicts for rule (5,0,3) = 0.010728836059570312
Time difference (ms) in adding rule (5,0,3) to the rule graph = 8.978605270385742
Time difference (ms) in checking hidden conflicts for rule (3,0,7) = 0.010967254638671875
Time difference (ms) in adding rule (3,0,7) to the rule graph = 8.147716522216797
Time difference (ms) in checking hidden conflicts for rule (3,0,8) = 0.011205673217773438
Time difference (ms) in adding rule (3,0,8) to the rule graph = 5.782127380371094
Time difference (ms) in checking hidden conflicts for rule (5,0,4) = 0.011205673217773438
Time difference (ms) in adding rule (5,0,4) to the rule graph = 5.507707595825195
Time difference (ms) after this round of updating the rule graph = 144.32835578918457
Avarage time difference (ms) in removing 0 rules from rule graph = 0
Avarage time difference (ms) in adding 10 rules to rule graph = 11.591219902038574


2022-06-05 19:04:00.729075
number of nodes in rule graph = 60
number of edges in rule graph = 67
((3, 0, 2), (4, 0, 2)) {((3, 0, 2), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 4), ((2, 0, 3), (3, 0, 2), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.2', '172.16.22.7', -1, -1, -1, -1), 4), ((1, 0, 2), (3, 0, 2), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 4)}
((8, 0, 3), (20, 0, 1)) {((7, 0, 2), (8, 0, 3), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2), ((7, 0, 1), (8, 0, 3), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((8, 0, 3), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((8, 0, 3), (20, 0, 2)) {((7, 0, 1), (8, 0, 3), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((8, 0, 3), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 2), (8, 0, 3), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((3, 0, 3), (4, 0, 3)) {((3, 0, 3), (4, 0, 3)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2), ((4, 0, 3), (3, 0, 3), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2)}
((6, 0, 1), (7, 0, 4)) {((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 4)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3), ((6, 0, 1), (7, 0, 4)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 3)}
((6, 0, 1), (7, 0, 3)) {((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 3)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 2), ((6, 0, 1), (7, 0, 3)): ((-1, 2048, 0, '172.16.21.1', ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((3, 0, 4), (4, 0, 6)) {((1, 0, 4), (3, 0, 4), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 4), ((3, 0, 4), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 4)}
((8, 0, 4), (20, 0, 3)) {((8, 0, 4), (20, 0, 3)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2), ((20, 0, 3), (8, 0, 4), (20, 0, 3), (20, 0, -4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2)}
((4, 0, 3), (4, 0, -4)) {((4, 0, 3), (3, 0, 3), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), -1)}
((4, 0, 3), (3, 0, 3)) {((4, 0, 3), (3, 0, 3)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2), ((3, 0, 3), (4, 0, 3), (3, 0, 3), (3, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2)}
((21, 0, 1), (21, 0, -1)) {((20, 0, 4), (21, 0, 1)): ((-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), -1)}
((3, 0, 5), (2, 0, -3)) {((1, 0, 4), (3, 0, 5)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), -1), ((2, 0, 3), (3, 0, 5)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.3', -1, -1, -1, -1), -1), ((5, 0, 2), (3, 0, 5)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), -1)}
((6, 0, 3), (8, 0, -3)) {((6, 0, 3),): ((1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1)}
((4, 0, 2), (8, 0, -3)) {((2, 0, 3), (3, 0, 2), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.2', '172.16.22.7', -1, -1, -1, -1), -1), ((5, 0, 1), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.1', '172.16.22.7', -1, -1, -1, -1), -1), ((1, 0, 2), (3, 0, 2), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), -1), ((1, 0, 1), (4, 0, 2)): ((-1, 2048, 0, ('172.16.21.0', '255.255.255.0'), '172.16.22.7', -1, -1, -1, -1), -1)}
((3, 0, 8), (5, 0, 4)) {((3, 0, 8), (5, 0, 4)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), 2)}
((3, 0, 6), (4, 0, 7)) {((3, 0, 6), (4, 0, 7)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((8, 0, 2), (20, 0, 1)) {((7, 0, 1), (8, 0, 2), (20, 0, 1)): ((-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((7, 0, 2), (8, 0, 2), (20, 0, 1)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 2), ((8, 0, 2), (20, 0, 1)): ((-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((8, 0, 2), (20, 0, 2)) {((8, 0, 2), (20, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 1), (8, 0, 2), (20, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 2), (8, 0, 2), (20, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 3)}
((6, 0, 2), (8, 0, -3)) {((1, 0, 2), (3, 0, 1), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((4, 0, 1), (8, 0, -3)) {((1, 0, 1), (4, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((2, 0, 4), (2, 0, -2)) {((2, 0, 4),): ((1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1), -1)}
((7, 0, 3), (7, 0, -2)) {((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 3)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((8, 0, 1), (20, 0, 1)) {((7, 0, 1), (8, 0, 1), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2), ((7, 0, 2), (8, 0, 1), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2), ((8, 0, 1), (20, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2)}
((8, 0, 1), (20, 0, 2)) {((7, 0, 2), (8, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((8, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 1), (8, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((17, 0, 2), (20, 0, 2)) {((16, 0, 1), (17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), 3)}
((6, 0, 4), (8, 0, -3)) {((6, 0, 4),): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), -1)}
((4, 0, 7), (4, 0, -4)) {((3, 0, 6), (4, 0, 7), (5, 0, 3), (3, 0, 7), (4, 0, 7), (4, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), -1)}
((4, 0, 7), (5, 0, 3)) {((3, 0, 6), (4, 0, 7), (5, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((4, 0, 7), (5, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((3, 0, 7), (4, 0, 7), (5, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((17, 0, 3), (20, 0, 5)) {((20, 0, 5), (17, 0, 3), (20, 0, 5), (20, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2), ((17, 0, 3), (20, 0, 5)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2)}
((4, 0, 6), (2, 0, -3)) {((1, 0, 4), (3, 0, 4), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1), ((5, 0, 1), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1)}
((2, 0, 1), (2, 0, -2)) {((2, 0, 1),): ((1, 2048, 0, ('172.16.42.0', '255.255.255.0'), -1, -1, -1, -1, -1), -1)}
((4, 0, 5), (2, 0, -3)) {((4, 0, 5),): ((1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1)}
((17, 0, 1), (20, 0, 2)) {((16, 0, 1), (17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), 3)}
((5, 0, 4), (5, 0, -1)) {((3, 0, 8), (5, 0, 4)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), -1)}
((20, 0, 3), (20, 0, -4)) {((20, 0, 3), (8, 0, 4), (20, 0, 3), (20, 0, -4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), -1)}
((20, 0, 3), (8, 0, 4)) {((20, 0, 3), (8, 0, 4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2), ((8, 0, 4), (20, 0, 3), (8, 0, 4), (8, 0, -4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2)}
((4, 0, 4), (4, 0, -1)) {((4, 0, 4),): ((1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1), -1)}
((2, 0, 3), (3, 0, 2)) {((2, 0, 3), (3, 0, 2)): ((-1, 2048, 0, '172.16.1.2', ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((2, 0, 3), (3, 0, 5)) {((2, 0, 3), (3, 0, 5)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.3', -1, -1, -1, -1), 2)}
((20, 0, 2), (21, 0, -3)) {((16, 0, 1), (17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), -1), ((16, 0, 1), (17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), -1)}
((2, 0, 2), (2, 0, -2)) {((2, 0, 2),): ((1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), -1)}
((7, 0, 1), (8, 0, 1)) {((7, 0, 1), (8, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((7, 0, 1), (8, 0, 2)) {((7, 0, 1), (8, 0, 2)): ((-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((7, 0, 1), (8, 0, 3)) {((7, 0, 1), (8, 0, 3)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((5, 0, 2), (3, 0, 5)) {((5, 0, 2), (3, 0, 5)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), 2)}
((3, 0, 7), (4, 0, 7)) {((3, 0, 6), (4, 0, 7), (5, 0, 3), (3, 0, 7), (4, 0, 7), (4, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((3, 0, 7), (4, 0, 7)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((7, 0, 2), (8, 0, 1)) {((7, 0, 2), (8, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((7, 0, 2), (8, 0, 2)) {((7, 0, 2), (8, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 2)}
((7, 0, 2), (8, 0, 3)) {((7, 0, 2), (8, 0, 3)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2)}
((5, 0, 3), (3, 0, 7)) {((3, 0, 7), (4, 0, 7), (5, 0, 3), (3, 0, 7), (3, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((3, 0, 6), (4, 0, 7), (5, 0, 3), (3, 0, 7)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((5, 0, 3), (3, 0, 7)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((1, 0, 4), (3, 0, 5)) {((1, 0, 4), (3, 0, 5)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), 2)}
((1, 0, 4), (3, 0, 4)) {((1, 0, 4), (3, 0, 4)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 3)}
((1, 0, 1), (4, 0, 1)) {((1, 0, 1), (4, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((1, 0, 1), (4, 0, 2)) {((1, 0, 1), (4, 0, 2)): ((-1, 2048, 0, ('172.16.21.0', '255.255.255.0'), '172.16.22.7', -1, -1, -1, -1), 4)}
((5, 0, 1), (4, 0, 2)) {((5, 0, 1), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.1', '172.16.22.7', -1, -1, -1, -1), 4)}
((5, 0, 1), (4, 0, 6)) {((5, 0, 1), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 4)}
((9, 0, 1), (9, 0, -1)) {((9, 0, 1),): ((1, 2048, 0, '172.16.7.21', '172.16.2.9', -1, -1, -1, -1), -1)}
((20, 0, 5), (17, 0, 3)) {((17, 0, 3), (20, 0, 5), (17, 0, 3), (17, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2), ((20, 0, 5), (17, 0, 3)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2)}
((20, 0, 5), (20, 0, -4)) {((20, 0, 5), (17, 0, 3), (20, 0, 5), (20, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), -1)}
((20, 0, 4), (21, 0, 1)) {((20, 0, 4), (21, 0, 1)): ((-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), 2)}
((3, 0, 1), (6, 0, 1)) {((3, 0, 1), (6, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 4), ((1, 0, 2), (3, 0, 1), (6, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 4)}
((3, 0, 1), (6, 0, 2)) {((1, 0, 2), (3, 0, 1), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3), ((3, 0, 1), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((1, 0, 2), (3, 0, 2)) {((1, 0, 2), (3, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 2)}
((1, 0, 2), (3, 0, 1)) {((1, 0, 2), (3, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((16, 0, 1), (17, 0, 2)) {((16, 0, 1), (17, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((16, 0, 1), (17, 0, 1)) {((16, 0, 1), (17, 0, 1)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 4)}
((7, 0, 4), (7, 0, -2)) {((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 4)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}

self.ft = 
1:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': ('172.16.21.0', '255.255.255.0'), 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [4], (1, 2048, 0, ('172.16.21.0', '255.255.255.0'), ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.1.1', 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [2], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 4: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
2:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': ('172.16.42.0', '255.255.255.0')}), [OFPActionSetField(ipv4_src='172.16.2.7'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, ('172.16.42.0', '255.255.255.0'), -1, -1, -1, -1, -1), ('172.16.2.7', -1, -1, -1, -1, -1, {2})), 2: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': ('172.16.5.0', '255.255.255.0')}), [OFPActionSetField(ipv4_src='172.16.5.16'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), ('172.16.5.16', -1, -1, -1, -1, -1, {2})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.2.1'}), [OFPActionSetField(ipv4_src='172.16.1.2'), OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (1, 2048, 0, '172.16.2.1', -1, -1, -1, -1, -1), ('172.16.1.2', -1, -1, -1, -1, -1, {4})), 4: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.1.1'}), [OFPActionSetField(ipv4_src='172.16.1.2'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1), ('172.16.1.2', -1, -1, -1, -1, -1, {2}))}}
3:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.21.1', 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [6], (1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, -1, ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 3, 'eth_type': 2048, 'ipv4_src': '172.16.22.1', 'ipv4_dst': '172.16.23.7'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (3, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 4: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.1.1', 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [4], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 5: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [2], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 6: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.1.4', 'ipv4_dst': '172.16.1.5'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 7: (514, 2, OFPMatch(oxm_fields={'in_port': 5, 'eth_type': 2048, 'ipv4_src': '172.16.1.4', 'ipv4_dst': '172.16.1.5'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (5, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 8: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.1.2', 'ipv4_dst': '172.16.1.6'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [5], (1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5}))}}
4:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.21.1', 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [8], (1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 4, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [8], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 4, 'eth_type': 2048, 'ipv4_src': '172.16.22.1', 'ipv4_dst': '172.16.23.7'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [3], (4, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 4: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.21.2', 'ipv4_dst': ('172.16.24.0', '255.255.255.0')}), [], [], (1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set())), 5: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.1.1', 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [2], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 6: (513, 4, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [2], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 7: (513, 2, OFPMatch(oxm_fields={'in_port': 4, 'eth_type': 2048, 'ipv4_src': '172.16.1.4', 'ipv4_dst': '172.16.1.5'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [5], (4, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5}))}}
5:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.1.1'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [4], (1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=1,type=0)], [3], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {1})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_src': '172.16.1.4', 'ipv4_dst': '172.16.1.5'}), [OFPActionOutput(len=16,max_len=65509,port=1,type=0)], [3], (2, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {1})), 4: (513, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.1.2', 'ipv4_dst': '172.16.1.6'}), [], [], (1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
6:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [7], (1, 2048, 0, -1, ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 3: (512, 4, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.1.1', 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 4: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3}))}}
7:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (2, 2048, 0, -1, ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [8], (2, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.21.1'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.21.1', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 4: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2}))}}
8:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 4, 'eth_type': 2048, 'ipv4_src': ('172.16.2.0', '255.255.255.0'), 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=8,type=0)], [20], (4, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {8})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.2.7', 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [20], (-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 3: (514, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': ('172.16.2.0', '255.255.255.0'), 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [20], (-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 4: (512, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.42.8', 'ipv4_dst': '172.16.47.21'}), [OFPActionOutput(len=16,max_len=65509,port=8,type=0)], [20], (-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {8}))}}
9:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.7.21', 'ipv4_dst': '172.16.2.9'}), [], [], (1, 2048, 0, '172.16.7.21', '172.16.2.9', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
16:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 4, 'eth_type': 2048, 'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [17], (4, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.5.16', 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [19], (-1, 2048, 0, '172.16.5.16', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 3: (514, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [19], (-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6}))}}
17:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [20], (2, 2048, 0, -1, ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [20], (2, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 3: (512, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_src': '172.16.35.17', 'ipv4_dst': '172.16.37.21'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [20], (-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
20:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': ('172.16.2.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (1, 2048, 0, ('172.16.2.0', '255.255.255.0'), -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.42.8', 'ipv4_dst': '172.16.47.21'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [8], (1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 4: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 5: (513, 2, OFPMatch(oxm_fields={'in_port': 5, 'eth_type': 2048, 'ipv4_src': '172.16.35.17', 'ipv4_dst': '172.16.37.21'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [17], (5, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6}))}}
21:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.5.18', 'ipv4_dst': '172.16.7.21'}), [], [], (1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
Number of rules: [52, {1: 4, 2: 4, 3: 8, 4: 7, 5: 4, 6: 4, 7: 4, 8: 4, 9: 1, 16: 3, 17: 3, 20: 5, 21: 1}]

self.lc_cfl_rules = 
16:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))], 3: [(1, 'class Generalization1 (local conflicts)', (1, 3, 1)), (2, 'class Redundancy (local conflicts)', (0, 3, 0))]}}
17:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
3:{0: {2: [(1, 'class Generalization1 (local conflicts)', (1, 3, 1))], 5: [(4, 'class Generalization1 (local conflicts)', (1, 3, 1))]}}
20:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: [], 4: [(2, 'class Overlap (local conflicts)', (1, 4, 0))]}}
1:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))], 3: [(4, 'class Shadowing2 (local conflicts)', (2, 3, 1))], 4: []}}
6:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))], 4: [(3, 'class Overlap (local conflicts)', (1, 3, 0))]}}
7:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))], 3: [(4, 'class Overlap (local conflicts)', (2, 4, 0))], 4: []}}
8:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))], 3: [(1, 'class Generalization1 (local conflicts)', (1, 3, 1)), (2, 'class Redundancy (local conflicts)', (0, 3, 0))]}}
4:{0: {1: [(2, 'class Redundancy (local conflicts)', (2, 3, 0))], 2: [], 5: [(6, 'class Redundancy (local conflicts)', (2, 3, 0))], 6: []}}
5:{0: {2: [(1, 'class Correlation3 (local conflicts)', (0, 4, 1))]}}
Number of local conflicts by dpid: [20, {16: {'cor1': 1, 'gen1': 1, 'red': 1}, 17: {'sha1': 1}, 3: {'gen1': 2}, 20: {'ove': 2}, 5: {'cor3': 1}, 6: {'sha1': 1, 'ove': 1}, 1: {'sha2': 1, 'cor1': 1}, 8: {'cor1': 1, 'gen1': 1, 'red': 1}, 4: {'red': 2}, 7: {'sha1': 1, 'ove': 1}}]
Number of local conflicts by class: [20, {'sha2': 1, 'sha1': 3, 'cor1': 3, 'gen1': 4, 'ove': 4, 'cor3': 1, 'red': 4}]

self.hc_cfl_rules = 
1:{'eplb': [((2, 0, 1), [[1], 2048, [6, 17], [('172.16.42.0', '255.255.255.0')], ['192.168.1.2'], [-1], [-1], [-1], [-1]]), ((2, 0, 2), [[1], 2048, [6, 17], [('172.16.5.0', '255.255.255.0')], ['192.168.1.2'], [-1], [-1], [-1], [-1]]), ((2, 0, 3), [[1], 2048, [6, 17], ['172.16.2.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]]), ((2, 0, 4), [[1], 2048, [6, 17], ['172.16.1.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]])]}
2:{}
3:{}
Number of rules causing hidden conflicts by control app: {'eplb': 4}

self.dt_cfl_rules = 
1:[(((20, 0, 3), (8, 0, 4), (20, 0, 3), (20, 0, -4)), (-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1)), (((20, 0, 5), (17, 0, 3), (20, 0, 5), (20, 0, -4)), (-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1)), (((4, 0, 3), (3, 0, 3), (4, 0, 3), (4, 0, -4)), (-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1)), (((3, 0, 6), (4, 0, 7), (5, 0, 3), (3, 0, 7), (4, 0, 7), (4, 0, -4)), (-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1))]
2:[(((9, 0, 1),), (1, 2048, 0, '172.16.7.21', '172.16.2.9', -1, -1, -1, -1)), (((20, 0, 4), (21, 0, 1)), (-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1)), (((4, 0, 4),), (1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1)), (((3, 0, 8), (5, 0, 4)), (-1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1))]
3:[(((2, 0, 1),), (1, 2048, 0, ('172.16.42.0', '255.255.255.0'), -1, -1, -1, -1, -1)), (((2, 0, 2),), (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1)), (((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 3)), (-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1)), (((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 4)), (-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1)), (((2, 0, 4),), (1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1))]
4:[]
Number of distributed conflicts by class: {'drop': 4, 'loop': 4}