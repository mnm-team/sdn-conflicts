


2022-06-05 19:42:34.425602
number of nodes in rule graph = 0
number of edges in rule graph = 0

self.ft = 
Number of rules: [0, {}]

self.lc_cfl_rules = 
Number of local conflicts by dpid: [0, {}]
Number of local conflicts by class: [0, {}]

self.hc_cfl_rules = 
1:{}
2:{}
3:{}
Number of rules causing hidden conflicts by control app: {}

self.dt_cfl_rules = 
1:[]
2:[]
3:[]
4:[]
Number of distributed conflicts by class: {'loop': 0, 'drop': 0}

2022-06-05 19:42:38.216148
New rule is coming, number of existing rules: [0, {}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,1) to the rule database = 0.22983551025390625

2022-06-05 19:42:38.276314
New rule is coming, number of existing rules: [1, {3: 1}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,2) to the rule database = 1.1131763458251953

2022-06-05 19:42:38.334156
New rule is coming, number of existing rules: [2, {3: 2}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,3) to the rule database = 7.0037841796875

2022-06-05 19:42:38.392297
New rule is coming, number of existing rules: [3, {3: 3}]
Time difference (ms) in checking local conflicts and adding new rule (21,0,1) to the rule database = 0.08440017700195312

2022-06-05 19:42:38.473232
New rule is coming, number of existing rules: [4, {3: 3, 21: 1}]
Time difference (ms) in checking local conflicts and adding new rule (21,0,2) to the rule database = 0.2613067626953125

2022-06-05 19:42:38.568045
New rule is coming, number of existing rules: [5, {3: 3, 21: 2}]
Time difference (ms) in checking local conflicts and adding new rule (16,0,1) to the rule database = 0.11610984802246094

2022-06-05 19:42:38.628082
New rule is coming, number of existing rules: [6, {16: 1, 3: 3, 21: 2}]
Time difference (ms) in checking local conflicts and adding new rule (16,0,2) to the rule database = 0.18453598022460938

2022-06-05 19:42:38.699901
New rule is coming, number of existing rules: [7, {16: 2, 3: 3, 21: 2}]
Time difference (ms) in checking local conflicts and adding new rule (2,0,1) to the rule database = 0.11157989501953125

2022-06-05 19:42:38.767832
New rule is coming, number of existing rules: [8, {16: 2, 2: 1, 3: 3, 21: 2}]
Time difference (ms) in checking local conflicts and adding new rule (6,0,1) to the rule database = 0.12969970703125

2022-06-05 19:42:38.826433
New rule is coming, number of existing rules: [9, {16: 2, 2: 1, 3: 3, 21: 2, 6: 1}]
Time difference (ms) in checking local conflicts and adding new rule (8,0,1) to the rule database = 0.133514404296875

2022-06-05 19:42:38.907825
New rule is coming, number of existing rules: [10, {16: 2, 2: 1, 3: 3, 21: 2, 6: 1, 8: 1}]
Time difference (ms) in checking local conflicts and adding new rule (13,0,1) to the rule database = 0.09608268737792969

2022-06-05 19:42:38.975785
New rule is coming, number of existing rules: [11, {16: 2, 2: 1, 3: 3, 21: 2, 6: 1, 8: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (16,0,3) to the rule database = 0.2715587615966797

2022-06-05 19:42:39.041558
New rule is coming, number of existing rules: [12, {16: 3, 2: 1, 3: 3, 21: 2, 6: 1, 8: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (18,0,1) to the rule database = 0.05054473876953125


2022-06-05 19:42:49.445557
Number of existing rules: [13, {16: 3, 2: 1, 3: 3, 21: 2, 6: 1, 8: 1, 18: 1, 13: 1}]
number of nodes in rule graph = 0
number of edges in rule graph = 0
number of rules to be removed = 0
number of rules to be added = 13
Time difference (ms) in checking hidden conflicts for rule (3,0,1) = 0.016927719116210938
Time difference (ms) in adding rule (3,0,1) to the rule graph = 1.668691635131836
Time difference (ms) in checking hidden conflicts for rule (3,0,2) = 0.015735626220703125
Time difference (ms) in adding rule (3,0,2) to the rule graph = 0.461578369140625
Time difference (ms) in checking hidden conflicts for rule (3,0,3) = 0.015020370483398438
Time difference (ms) in adding rule (3,0,3) to the rule graph = 0.42247772216796875
Time difference (ms) in checking hidden conflicts for rule (21,0,1) = 0.0152587890625
Time difference (ms) in adding rule (21,0,1) to the rule graph = 0.4429817199707031
Time difference (ms) in checking hidden conflicts for rule (21,0,2) = 0.015020370483398438
Time difference (ms) in adding rule (21,0,2) to the rule graph = 5.255460739135742
Time difference (ms) in checking hidden conflicts for rule (16,0,1) = 0.0152587890625
Time difference (ms) in adding rule (16,0,1) to the rule graph = 2.749919891357422
Time difference (ms) in checking hidden conflicts for rule (16,0,2) = 0.0152587890625
Time difference (ms) in adding rule (16,0,2) to the rule graph = 6.4144134521484375
Time difference (ms) in checking hidden conflicts for rule (2,0,1) = 0.4763603210449219
Time difference (ms) in adding rule (2,0,1) to the rule graph = 0.4100799560546875
Time difference (ms) in checking hidden conflicts for rule (6,0,1) = 0.013828277587890625
Time difference (ms) in adding rule (6,0,1) to the rule graph = 19.09184455871582
Time difference (ms) in checking hidden conflicts for rule (8,0,1) = 0.013113021850585938
Time difference (ms) in checking hidden conflicts for rule (13,0,1) = 0.011682510375976562
Time difference (ms) in checking hidden conflicts for rule (16,0,3) = 0.010967254638671875
Time difference (ms) in checking hidden conflicts for rule (18,0,1) = 0.01239776611328125
Time difference (ms) in adding rule (18,0,1) to the rule graph = 3.591299057006836
Time difference (ms) after this round of updating the rule graph = 40.50874710083008
Avarage time difference (ms) in removing 0 rules from rule graph = 0
Avarage time difference (ms) in adding 10 rules to rule graph = 4.050874710083008


2022-06-05 19:42:59.519604
number of nodes in rule graph = 17
number of edges in rule graph = 12
((8, 0, 1), (13, 0, 1)) {((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2), ((8, 0, 1), (13, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((18, 0, 1), (18, 0, -1)) {((18, 0, 1),): ((1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), -1)}
((16, 0, 3), (6, 0, 1)) {((16, 0, 3), (6, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((16, 0, 3), (16, 0, -4)) {((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1), (16, 0, 3), (16, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), -1)}
((21, 0, 1), (21, 0, -2)) {((21, 0, 1),): ((1, 2048, 0, -1, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), -1)}
((21, 0, 2), (21, 0, -2)) {((21, 0, 2),): ((1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), -1)}
((2, 0, 1), (2, 0, -2)) {((2, 0, 1),): ((1, 2048, 0, '172.16.55.1', -1, -1, -1, -1, -1), -1)}
((3, 0, 1), (6, 0, -3)) {((3, 0, 1),): ((1, 2048, 0, ('172.16.1.0', '255.255.255.0'), '172.16.5.17', -1, -1, -1, -1), -1)}
((13, 0, 1), (16, 0, 3)) {((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1), (16, 0, 3), (16, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2), ((13, 0, 1), (16, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((16, 0, 1), (16, 0, -2)) {((16, 0, 1),): ((1, 2048, 0, ('172.16.1.0', '255.255.255.0'), -1, -1, -1, -1, -1), -1)}
((6, 0, 1), (8, 0, 1)) {((6, 0, 1), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2), ((16, 0, 3), (6, 0, 1), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((16, 0, 2), (16, 0, -2)) {((16, 0, 2),): ((-1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), -1)}

self.ft = 
16:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.1.0', '255.255.255.0'), 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [-2], (1, 2048, 0, ('172.16.1.0', '255.255.255.0'), -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.5.16'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [-2], (-1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 3, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [6], (3, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2}))}}
2:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.55.1', 'eth_type': 2048}), [OFPActionSetField(ipv4_src='172.16.55.2'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.55.1', -1, -1, -1, -1, -1), ('172.16.55.2', -1, -1, -1, -1, -1, {2}))}}
3:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.1.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': '172.16.5.17'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [6], (1, 2048, 0, ('172.16.1.0', '255.255.255.0'), '172.16.5.17', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.3', 'eth_type': 2048, 'ipv4_dst': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, '172.16.1.3', ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (514, 2, OFPMatch(oxm_fields={'ipv4_src': ('172.16.1.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, ('172.16.1.0', '255.255.255.0'), ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
21:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [-2], (1, 2048, 0, -1, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': '172.16.5.16'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [-2], (1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3}))}}
6:{0: {1: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3}))}}
8:{0: {1: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.4', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=10,type=0)], [13], (-1, 2048, 0, '172.16.1.4', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {10}))}}
18:{0: {1: (514, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [], [], (1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
13:{0: {1: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [16], (-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2}))}}
Number of rules: [13, {16: 3, 2: 1, 3: 3, 21: 2, 6: 1, 8: 1, 18: 1, 13: 1}]

self.lc_cfl_rules = 
16:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: []}}
3:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))], 3: [(1, 'class Generalization1 (local conflicts)', (1, 3, 1)), (2, 'class Redundancy (local conflicts)', (0, 3, 0))]}}
21:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
Number of local conflicts by dpid: [5, {16: {'ove': 1}, 3: {'gen1': 1, 'red': 1, 'cor1': 1}, 21: {'sha1': 1}}]
Number of local conflicts by class: [5, {'gen1': 1, 'red': 1, 'ove': 1, 'sha1': 1, 'cor1': 1}]

self.hc_cfl_rules = 
1:{'eplb': [((2, 0, 1), [[1], 2048, [6, 17], ['172.16.55.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]])]}
2:{}
3:{}
Number of rules causing hidden conflicts by control app: {'eplb': 1}

self.dt_cfl_rules = 
1:[(((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1), (16, 0, 3), (16, 0, -4)), (-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1))]
2:[(((18, 0, 1),), (1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1))]
3:[(((21, 0, 1),), (1, 2048, 0, -1, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1)), (((21, 0, 2),), (1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1)), (((16, 0, 1),), (1, 2048, 0, ('172.16.1.0', '255.255.255.0'), -1, -1, -1, -1, -1)), (((16, 0, 2),), (-1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1)), (((2, 0, 1),), (1, 2048, 0, '172.16.55.1', -1, -1, -1, -1, -1))]
4:[]
Number of distributed conflicts by class: {'loop': 1, 'drop': 1}

2022-06-05 19:43:09.723710
New rule is coming, number of existing rules: [13, {16: 3, 2: 1, 3: 3, 21: 2, 6: 1, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (1,0,1) to the rule database = 0.10657310485839844

2022-06-05 19:43:09.785207
New rule is coming, number of existing rules: [14, {16: 3, 1: 1, 2: 1, 3: 3, 21: 2, 6: 1, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (1,0,2) to the rule database = 1.4615058898925781

2022-06-05 19:43:09.848497
New rule is coming, number of existing rules: [15, {16: 3, 1: 2, 2: 1, 3: 3, 21: 2, 6: 1, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,4) to the rule database = 0.3724098205566406

2022-06-05 19:43:09.894392
New rule is coming, number of existing rules: [16, {16: 3, 1: 2, 2: 1, 3: 4, 21: 2, 6: 1, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,5) to the rule database = 0.766754150390625

2022-06-05 19:43:09.973057
New rule is coming, number of existing rules: [17, {16: 3, 1: 2, 2: 1, 3: 5, 21: 2, 6: 1, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,1) to the rule database = 0.1385211944580078

2022-06-05 19:43:10.031840
New rule is coming, number of existing rules: [18, {16: 3, 1: 2, 2: 1, 3: 5, 4: 1, 21: 2, 6: 1, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,2) to the rule database = 0.18358230590820312

2022-06-05 19:43:10.103828
New rule is coming, number of existing rules: [19, {16: 3, 1: 2, 2: 1, 3: 5, 4: 2, 21: 2, 6: 1, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (6,0,2) to the rule database = 0.2560615539550781

2022-06-05 19:43:10.171953
New rule is coming, number of existing rules: [20, {16: 3, 1: 2, 2: 1, 3: 5, 4: 2, 21: 2, 6: 2, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (6,0,3) to the rule database = 1.1539459228515625

2022-06-05 19:43:10.239909
New rule is coming, number of existing rules: [21, {16: 3, 1: 2, 2: 1, 3: 5, 4: 2, 21: 2, 6: 3, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (7,0,1) to the rule database = 0.10085105895996094

2022-06-05 19:43:10.300593
New rule is coming, number of existing rules: [22, {16: 3, 1: 2, 2: 1, 3: 5, 4: 2, 21: 2, 6: 3, 7: 1, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (7,0,2) to the rule database = 0.14400482177734375

2022-06-05 19:43:10.364556
New rule is coming, number of existing rules: [23, {16: 3, 1: 2, 2: 1, 3: 5, 4: 2, 21: 2, 6: 3, 7: 2, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (2,0,2) to the rule database = 0.2262592315673828

2022-06-05 19:43:10.437575
New rule is coming, number of existing rules: [24, {16: 3, 1: 2, 2: 2, 3: 5, 4: 2, 21: 2, 6: 3, 7: 2, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,6) to the rule database = 0.38933753967285156

2022-06-05 19:43:10.503664
New rule is coming, number of existing rules: [25, {16: 3, 1: 2, 2: 2, 3: 6, 4: 2, 21: 2, 6: 3, 7: 2, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,3) to the rule database = 1.1019706726074219

2022-06-05 19:43:10.539074
New rule is coming, number of existing rules: [26, {16: 3, 1: 2, 2: 2, 3: 6, 4: 3, 21: 2, 6: 3, 7: 2, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,4) to the rule database = 0.18143653869628906


2022-06-05 19:43:20.577807
Number of existing rules: [27, {16: 3, 1: 2, 2: 2, 3: 6, 4: 4, 21: 2, 6: 3, 7: 2, 8: 1, 18: 1, 13: 1}]
number of nodes in rule graph = 17
number of edges in rule graph = 12
number of rules to be removed = 0
number of rules to be added = 14
Time difference (ms) in checking hidden conflicts for rule (1,0,1) = 0.017404556274414062
Time difference (ms) in adding rule (1,0,1) to the rule graph = 24.615049362182617
Time difference (ms) in checking hidden conflicts for rule (1,0,2) = 0.013589859008789062
Time difference (ms) in adding rule (1,0,2) to the rule graph = 25.439739227294922
Time difference (ms) in checking hidden conflicts for rule (3,0,4) = 0.011920928955078125
Time difference (ms) in adding rule (3,0,4) to the rule graph = 14.499902725219727
Time difference (ms) in checking hidden conflicts for rule (3,0,5) = 0.011205673217773438
Time difference (ms) in adding rule (3,0,5) to the rule graph = 25.580406188964844
Time difference (ms) in checking hidden conflicts for rule (4,0,1) = 0.011920928955078125
Time difference (ms) in adding rule (4,0,1) to the rule graph = 4.613637924194336
Time difference (ms) in checking hidden conflicts for rule (4,0,2) = 0.011682510375976562
Time difference (ms) in adding rule (4,0,2) to the rule graph = 23.28777313232422
Time difference (ms) in checking hidden conflicts for rule (6,0,2) = 0.011205673217773438
Time difference (ms) in adding rule (6,0,2) to the rule graph = 10.033607482910156
Time difference (ms) in checking hidden conflicts for rule (6,0,3) = 0.011682510375976562
Time difference (ms) in adding rule (6,0,3) to the rule graph = 3.972768783569336
Time difference (ms) in checking hidden conflicts for rule (7,0,1) = 0.011205673217773438
Time difference (ms) in adding rule (7,0,1) to the rule graph = 1.470327377319336
Time difference (ms) in checking hidden conflicts for rule (7,0,2) = 0.010967254638671875
Time difference (ms) in adding rule (7,0,2) to the rule graph = 3.3121109008789062
Time difference (ms) in checking hidden conflicts for rule (2,0,2) = 0.34809112548828125
Time difference (ms) in checking hidden conflicts for rule (3,0,6) = 0.010967254638671875
Time difference (ms) in adding rule (3,0,6) to the rule graph = 13.106346130371094
Time difference (ms) in checking hidden conflicts for rule (4,0,3) = 0.011444091796875
Time difference (ms) in checking hidden conflicts for rule (4,0,4) = 0.010251998901367188
Time difference (ms) in adding rule (4,0,4) to the rule graph = 3.6597251892089844
Time difference (ms) after this round of updating the rule graph = 153.59139442443848
Avarage time difference (ms) in removing 0 rules from rule graph = 0
Avarage time difference (ms) in adding 10 rules to rule graph = 13.68253231048584


2022-06-05 19:43:30.784780
number of nodes in rule graph = 37
number of edges in rule graph = 33
((2, 0, 2), (3, 0, 5)) {((2, 0, 2), (3, 0, 5)): ((-1, 2048, 0, '172.16.1.2', ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((2, 0, 2), (3, 0, 3)) {((2, 0, 2), (3, 0, 3)): ((-1, 2048, 0, '172.16.1.2', ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((6, 0, 1), (8, 0, 1)) {((6, 0, 1), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2), ((16, 0, 3), (6, 0, 1), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((7, 0, 1), (7, 0, -2)) {((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((3, 0, 4), (6, 0, 3)) {((1, 0, 2), (3, 0, 4), (6, 0, 3)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3), ((3, 0, 4), (6, 0, 3)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((3, 0, 4), (6, 0, 2)) {((1, 0, 2), (3, 0, 4), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 4), ((3, 0, 4), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 4)}
((1, 0, 1), (4, 0, 1)) {((1, 0, 1), (4, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((1, 0, 1), (4, 0, 2)) {((1, 0, 1), (4, 0, 2)): ((-1, 2048, 0, ('172.16.21.0', '255.255.255.0'), '172.16.22.7', -1, -1, -1, -1), 4)}
((4, 0, 3), (4, 0, -4)) {((4, 0, 3), (3, 0, 6), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), -1)}
((4, 0, 3), (3, 0, 6)) {((4, 0, 3), (3, 0, 6)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2), ((3, 0, 6), (4, 0, 3), (3, 0, 6), (3, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2)}
((21, 0, 1), (21, 0, -2)) {((21, 0, 1),): ((1, 2048, 0, -1, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), -1)}
((7, 0, 2), (7, 0, -2)) {((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((3, 0, 5), (4, 0, 2)) {((2, 0, 2), (3, 0, 5), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.2', '172.16.22.7', -1, -1, -1, -1), 4), ((3, 0, 5), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 4), ((1, 0, 2), (3, 0, 5), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 4)}
((6, 0, 3), (8, 0, 1)) {((6, 0, 3), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.22.7', -1, -1, -1, -1), 2)}
((4, 0, 2), (8, 0, 1)) {((1, 0, 2), (3, 0, 5), (4, 0, 2), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.22.7', -1, -1, -1, -1), 2), ((4, 0, 2), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.22.7', -1, -1, -1, -1), 2)}
((3, 0, 6), (4, 0, 3)) {((4, 0, 3), (3, 0, 6), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2), ((3, 0, 6), (4, 0, 3)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2)}
((6, 0, 2), (7, 0, 2)) {((6, 0, 2), (7, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 3), ((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((6, 0, 2), (7, 0, 1)) {((6, 0, 2), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 2)}
((4, 0, 1), (8, 0, -3)) {((1, 0, 1), (4, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((8, 0, 1), (13, 0, 1)) {((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2), ((8, 0, 1), (13, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((18, 0, 1), (18, 0, -1)) {((18, 0, 1),): ((1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), -1)}
((3, 0, 3), (4, 0, -3)) {((2, 0, 2), (3, 0, 3)): ((-1, 2048, 0, '172.16.1.2', ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), -1)}
((16, 0, 3), (6, 0, 1)) {((16, 0, 3), (6, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((16, 0, 3), (16, 0, -4)) {((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1), (16, 0, 3), (16, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), -1)}
((4, 0, 4), (4, 0, -1)) {((4, 0, 4),): ((1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1), -1)}
((16, 0, 2), (16, 0, -2)) {((16, 0, 2),): ((-1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), -1)}
((2, 0, 1), (2, 0, -2)) {((2, 0, 1),): ((1, 2048, 0, '172.16.55.1', -1, -1, -1, -1, -1), -1)}
((3, 0, 1), (6, 0, -3)) {((3, 0, 1),): ((1, 2048, 0, ('172.16.1.0', '255.255.255.0'), '172.16.5.17', -1, -1, -1, -1), -1)}
((1, 0, 2), (3, 0, 5)) {((1, 0, 2), (3, 0, 5)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 2)}
((1, 0, 2), (3, 0, 4)) {((1, 0, 2), (3, 0, 4)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((13, 0, 1), (16, 0, 3)) {((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1), (16, 0, 3), (16, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2), ((13, 0, 1), (16, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((16, 0, 1), (16, 0, -2)) {((16, 0, 1),): ((1, 2048, 0, ('172.16.1.0', '255.255.255.0'), -1, -1, -1, -1, -1), -1)}
((21, 0, 2), (21, 0, -2)) {((21, 0, 2),): ((1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), -1)}

self.ft = 
16:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.1.0', '255.255.255.0'), 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [-2], (1, 2048, 0, ('172.16.1.0', '255.255.255.0'), -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.5.16'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [-2], (-1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 3, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [6], (3, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2}))}}
1:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.21.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [4], (1, 2048, 0, ('172.16.21.0', '255.255.255.0'), ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
2:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.55.1', 'eth_type': 2048}), [OFPActionSetField(ipv4_src='172.16.55.2'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.55.1', -1, -1, -1, -1, -1), ('172.16.55.2', -1, -1, -1, -1, -1, {2})), 2: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.2.1', 'eth_type': 2048}), [OFPActionSetField(ipv4_src='172.16.1.2'), OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (1, 2048, 0, '172.16.2.1', -1, -1, -1, -1, -1), ('172.16.1.2', -1, -1, -1, -1, -1, {4}))}}
3:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.1.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': '172.16.5.17'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [6], (1, 2048, 0, ('172.16.1.0', '255.255.255.0'), '172.16.5.17', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.3', 'eth_type': 2048, 'ipv4_dst': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, '172.16.1.3', ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (514, 2, OFPMatch(oxm_fields={'ipv4_src': ('172.16.1.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, ('172.16.1.0', '255.255.255.0'), ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 4: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.21.1', 'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [6], (1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 5: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, -1, ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 6: (512, 2, OFPMatch(oxm_fields={'in_port': 3, 'ipv4_src': '172.16.22.1', 'eth_type': 2048, 'ipv4_dst': '172.16.23.7'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (3, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
4:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.21.1', 'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [8], (1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 4, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [8], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 4, 'ipv4_src': '172.16.22.1', 'eth_type': 2048, 'ipv4_dst': '172.16.23.7'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [3], (4, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 4: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.21.2', 'eth_type': 2048, 'ipv4_dst': ('172.16.24.0', '255.255.255.0')}), [], [], (1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
21:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [-2], (1, 2048, 0, -1, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': '172.16.5.16'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [-2], (1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3}))}}
6:{0: {1: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 2: (512, 4, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [7], (1, 2048, 0, -1, ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 3: (513, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3}))}}
7:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.21.1', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.21.1', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2}))}}
8:{0: {1: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.4', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=10,type=0)], [13], (-1, 2048, 0, '172.16.1.4', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {10}))}}
18:{0: {1: (514, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [], [], (1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
13:{0: {1: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [16], (-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2}))}}
Number of rules: [27, {16: 3, 1: 2, 2: 2, 3: 6, 4: 4, 21: 2, 6: 3, 7: 2, 8: 1, 18: 1, 13: 1}]

self.lc_cfl_rules = 
16:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: []}}
1:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))]}}
3:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))], 3: [(1, 'class Generalization1 (local conflicts)', (1, 3, 1)), (2, 'class Redundancy (local conflicts)', (0, 3, 0))], 5: [(4, 'class Generalization1 (local conflicts)', (1, 3, 1))]}}
4:{0: {1: [(2, 'class Redundancy (local conflicts)', (2, 3, 0))], 2: []}}
21:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
6:{0: {3: [(2, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
7:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: []}}
Number of local conflicts by dpid: [10, {16: {'ove': 1}, 1: {'cor1': 1}, 3: {'gen1': 2, 'red': 1, 'cor1': 1}, 4: {'red': 1}, 21: {'sha1': 1}, 6: {'sha1': 1}, 7: {'ove': 1}}]
Number of local conflicts by class: [10, {'gen1': 2, 'red': 2, 'ove': 2, 'sha1': 2, 'cor1': 2}]

self.hc_cfl_rules = 
1:{'eplb': [((2, 0, 1), [[1], 2048, [6, 17], ['172.16.55.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]]), ((2, 0, 2), [[1], 2048, [6, 17], ['172.16.2.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]])]}
2:{}
3:{}
Number of rules causing hidden conflicts by control app: {'eplb': 2}

self.dt_cfl_rules = 
1:[(((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1), (16, 0, 3), (16, 0, -4)), (-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1)), (((4, 0, 3), (3, 0, 6), (4, 0, 3), (4, 0, -4)), (-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1))]
2:[(((18, 0, 1),), (1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1)), (((4, 0, 4),), (1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1))]
3:[(((21, 0, 1),), (1, 2048, 0, -1, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1)), (((21, 0, 2),), (1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1)), (((16, 0, 1),), (1, 2048, 0, ('172.16.1.0', '255.255.255.0'), -1, -1, -1, -1, -1)), (((16, 0, 2),), (-1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1)), (((2, 0, 1),), (1, 2048, 0, '172.16.55.1', -1, -1, -1, -1, -1)), (((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 1)), (-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1)), (((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 2)), (-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1))]
4:[]
Number of distributed conflicts by class: {'loop': 2, 'drop': 2}

2022-06-05 19:43:45.328212
New rule is coming, number of existing rules: [27, {16: 3, 1: 2, 2: 2, 3: 6, 4: 4, 21: 2, 6: 3, 7: 2, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (16,0,4) to the rule database = 0.4115104675292969

2022-06-05 19:43:45.399627
New rule is coming, number of existing rules: [28, {16: 4, 1: 2, 2: 2, 3: 6, 4: 4, 21: 2, 6: 3, 7: 2, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (16,0,5) to the rule database = 0.8347034454345703

2022-06-05 19:43:45.456184
New rule is coming, number of existing rules: [29, {16: 5, 1: 2, 2: 2, 3: 6, 4: 4, 21: 2, 6: 3, 7: 2, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (16,0,6) to the rule database = 11.974096298217773

2022-06-05 19:43:45.530826
New rule is coming, number of existing rules: [30, {16: 6, 1: 2, 2: 2, 3: 6, 4: 4, 21: 2, 6: 3, 7: 2, 8: 1, 18: 1, 13: 1}]
Time difference (ms) in checking local conflicts and adding new rule (17,0,1) to the rule database = 0.11372566223144531

2022-06-05 19:43:45.591749
New rule is coming, number of existing rules: [31, {1: 2, 2: 2, 3: 6, 4: 4, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 1, 18: 1, 21: 2}]
Time difference (ms) in checking local conflicts and adding new rule (17,0,2) to the rule database = 0.2923011779785156

2022-06-05 19:43:45.650234
New rule is coming, number of existing rules: [32, {1: 2, 2: 2, 3: 6, 4: 4, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 2, 18: 1, 21: 2}]
Time difference (ms) in checking local conflicts and adding new rule (20,0,1) to the rule database = 0.12135505676269531

2022-06-05 19:43:45.723610
New rule is coming, number of existing rules: [33, {1: 2, 2: 2, 3: 6, 4: 4, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 2, 18: 1, 20: 1, 21: 2}]
Time difference (ms) in checking local conflicts and adding new rule (20,0,2) to the rule database = 0.9839534759521484

2022-06-05 19:43:45.780419
New rule is coming, number of existing rules: [34, {1: 2, 2: 2, 3: 6, 4: 4, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 2, 18: 1, 20: 2, 21: 2}]
Time difference (ms) in checking local conflicts and adding new rule (2,0,3) to the rule database = 0.30040740966796875

2022-06-05 19:43:45.851198
New rule is coming, number of existing rules: [35, {1: 2, 2: 3, 3: 6, 4: 4, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 2, 18: 1, 20: 2, 21: 2}]
Time difference (ms) in checking local conflicts and adding new rule (17,0,3) to the rule database = 4.945993423461914

2022-06-05 19:43:45.920185
New rule is coming, number of existing rules: [36, {1: 2, 2: 3, 3: 6, 4: 4, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 2, 21: 2}]
Time difference (ms) in checking local conflicts and adding new rule (20,0,3) to the rule database = 0.2789497375488281

2022-06-05 19:43:45.982442
New rule is coming, number of existing rules: [37, {1: 2, 2: 3, 3: 6, 4: 4, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 2}]
Time difference (ms) in checking local conflicts and adding new rule (21,0,3) to the rule database = 0.28252601623535156


2022-06-05 19:43:56.849168
Number of existing rules: [38, {1: 2, 2: 3, 3: 6, 4: 4, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
number of nodes in rule graph = 37
number of edges in rule graph = 33
number of rules to be removed = 0
number of rules to be added = 11
Time difference (ms) in checking hidden conflicts for rule (16,0,4) = 0.015735626220703125
Time difference (ms) in adding rule (16,0,4) to the rule graph = 13.792037963867188
Time difference (ms) in checking hidden conflicts for rule (16,0,5) = 0.013589859008789062
Time difference (ms) in adding rule (16,0,5) to the rule graph = 3.064870834350586
Time difference (ms) in checking hidden conflicts for rule (16,0,6) = 0.0133514404296875
Time difference (ms) in adding rule (16,0,6) to the rule graph = 2.380847930908203
Time difference (ms) in checking hidden conflicts for rule (17,0,1) = 1.9068717956542969
Time difference (ms) in adding rule (17,0,1) to the rule graph = 13.908863067626953
Time difference (ms) in checking hidden conflicts for rule (17,0,2) = 0.011920928955078125
Time difference (ms) in adding rule (17,0,2) to the rule graph = 3.075122833251953
Time difference (ms) in checking hidden conflicts for rule (20,0,1) = 0.01239776611328125
Time difference (ms) in adding rule (20,0,1) to the rule graph = 13.973474502563477
Time difference (ms) in checking hidden conflicts for rule (20,0,2) = 0.011205673217773438
Time difference (ms) in adding rule (20,0,2) to the rule graph = 4.9114227294921875
Time difference (ms) in checking hidden conflicts for rule (2,0,3) = 0.36263465881347656
Time difference (ms) in adding rule (2,0,3) to the rule graph = 0.3306865692138672
Time difference (ms) in checking hidden conflicts for rule (17,0,3) = 0.011205673217773438
Time difference (ms) in adding rule (17,0,3) to the rule graph = 8.0108642578125
Time difference (ms) in checking hidden conflicts for rule (20,0,3) = 0.010967254638671875
Time difference (ms) in checking hidden conflicts for rule (21,0,3) = 0.01049041748046875
Time difference (ms) in adding rule (21,0,3) to the rule graph = 2.4280548095703125
Time difference (ms) after this round of updating the rule graph = 65.87624549865723
Avarage time difference (ms) in removing 0 rules from rule graph = 0
Avarage time difference (ms) in adding 10 rules to rule graph = 6.587624549865723


2022-06-05 19:44:06.978374
number of nodes in rule graph = 49
number of edges in rule graph = 46
((21, 0, 3), (21, 0, -1)) {((20, 0, 1), (21, 0, 3)): ((-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), -1)}
((3, 0, 3), (4, 0, -3)) {((2, 0, 2), (3, 0, 3)): ((-1, 2048, 0, '172.16.1.2', ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), -1)}
((6, 0, 1), (8, 0, 1)) {((6, 0, 1), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2), ((16, 0, 3), (6, 0, 1), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((3, 0, 4), (6, 0, 3)) {((1, 0, 2), (3, 0, 4), (6, 0, 3)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3), ((3, 0, 4), (6, 0, 3)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((3, 0, 4), (6, 0, 2)) {((1, 0, 2), (3, 0, 4), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 4), ((3, 0, 4), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 4)}
((1, 0, 1), (4, 0, 1)) {((1, 0, 1), (4, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((1, 0, 1), (4, 0, 2)) {((1, 0, 1), (4, 0, 2)): ((-1, 2048, 0, ('172.16.21.0', '255.255.255.0'), '172.16.22.7', -1, -1, -1, -1), 4)}
((4, 0, 3), (4, 0, -4)) {((4, 0, 3), (3, 0, 6), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), -1)}
((4, 0, 3), (3, 0, 6)) {((4, 0, 3), (3, 0, 6)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2), ((3, 0, 6), (4, 0, 3), (3, 0, 6), (3, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2)}
((21, 0, 1), (21, 0, -2)) {((21, 0, 1),): ((1, 2048, 0, -1, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), -1)}
((3, 0, 5), (4, 0, 2)) {((2, 0, 2), (3, 0, 5), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.2', '172.16.22.7', -1, -1, -1, -1), 4), ((3, 0, 5), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 4), ((1, 0, 2), (3, 0, 5), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 4)}
((6, 0, 3), (8, 0, 1)) {((6, 0, 3), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.22.7', -1, -1, -1, -1), 2)}
((4, 0, 2), (8, 0, 1)) {((1, 0, 2), (3, 0, 5), (4, 0, 2), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.22.7', -1, -1, -1, -1), 2), ((4, 0, 2), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.22.7', -1, -1, -1, -1), 2)}
((3, 0, 6), (4, 0, 3)) {((4, 0, 3), (3, 0, 6), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2), ((3, 0, 6), (4, 0, 3)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2)}
((6, 0, 2), (7, 0, 2)) {((6, 0, 2), (7, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 3), ((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((6, 0, 2), (7, 0, 1)) {((6, 0, 2), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 2)}
((4, 0, 1), (8, 0, -3)) {((1, 0, 1), (4, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((8, 0, 1), (13, 0, 1)) {((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2), ((8, 0, 1), (13, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((17, 0, 2), (20, 0, 2)) {((16, 0, 4), (17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), 3)}
((17, 0, 3), (20, 0, 3)) {((17, 0, 3), (20, 0, 3)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2), ((20, 0, 3), (17, 0, 3), (20, 0, 3), (20, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2)}
((2, 0, 1), (2, 0, -2)) {((2, 0, 1),): ((1, 2048, 0, '172.16.55.1', -1, -1, -1, -1, -1), -1)}
((13, 0, 1), (16, 0, 3)) {((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1), (16, 0, 3), (16, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2), ((13, 0, 1), (16, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((17, 0, 1), (20, 0, 2)) {((16, 0, 4), (17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), 3)}
((20, 0, 3), (17, 0, 3)) {((20, 0, 3), (17, 0, 3)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2), ((17, 0, 3), (20, 0, 3), (17, 0, 3), (17, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2)}
((20, 0, 3), (20, 0, -4)) {((20, 0, 3), (17, 0, 3), (20, 0, 3), (20, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), -1)}
((4, 0, 4), (4, 0, -1)) {((4, 0, 4),): ((1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1), -1)}
((2, 0, 3), (2, 0, -2)) {((2, 0, 3),): ((1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), -1)}
((20, 0, 2), (21, 0, -3)) {((16, 0, 4), (17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), -1), ((16, 0, 4), (17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), -1)}
((2, 0, 2), (3, 0, 5)) {((2, 0, 2), (3, 0, 5)): ((-1, 2048, 0, '172.16.1.2', ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((2, 0, 2), (3, 0, 3)) {((2, 0, 2), (3, 0, 3)): ((-1, 2048, 0, '172.16.1.2', ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((7, 0, 1), (7, 0, -2)) {((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((20, 0, 1), (21, 0, 1)) {((20, 0, 1), (21, 0, 1)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), 4)}
((20, 0, 1), (21, 0, 3)) {((20, 0, 1), (21, 0, 3)): ((-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), 2)}
((20, 0, 1), (21, 0, 2)) {((20, 0, 1), (21, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.5.16', -1, -1, -1, -1), 3)}
((7, 0, 2), (7, 0, -2)) {((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((18, 0, 1), (18, 0, -1)) {((18, 0, 1),): ((1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), -1)}
((16, 0, 4), (17, 0, 2)) {((16, 0, 4), (17, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((16, 0, 4), (17, 0, 1)) {((16, 0, 4), (17, 0, 1)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 4)}
((16, 0, 3), (6, 0, 1)) {((16, 0, 3), (6, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((16, 0, 3), (16, 0, -4)) {((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1), (16, 0, 3), (16, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), -1)}
((16, 0, 2), (16, 0, -2)) {((16, 0, 2),): ((-1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), -1)}
((3, 0, 1), (6, 0, -3)) {((3, 0, 1),): ((1, 2048, 0, ('172.16.1.0', '255.255.255.0'), '172.16.5.17', -1, -1, -1, -1), -1)}
((1, 0, 2), (3, 0, 5)) {((1, 0, 2), (3, 0, 5)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 2)}
((1, 0, 2), (3, 0, 4)) {((1, 0, 2), (3, 0, 4)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((16, 0, 1), (16, 0, -2)) {((16, 0, 1),): ((1, 2048, 0, ('172.16.1.0', '255.255.255.0'), -1, -1, -1, -1, -1), -1)}
((21, 0, 2), (21, 0, -2)) {((21, 0, 2),): ((1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), -1)}

self.ft = 
1:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.21.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [4], (1, 2048, 0, ('172.16.21.0', '255.255.255.0'), ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
2:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.55.1', 'eth_type': 2048}), [OFPActionSetField(ipv4_src='172.16.55.2'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.55.1', -1, -1, -1, -1, -1), ('172.16.55.2', -1, -1, -1, -1, -1, {2})), 2: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.2.1', 'eth_type': 2048}), [OFPActionSetField(ipv4_src='172.16.1.2'), OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (1, 2048, 0, '172.16.2.1', -1, -1, -1, -1, -1), ('172.16.1.2', -1, -1, -1, -1, -1, {4})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'eth_type': 2048}), [OFPActionSetField(ipv4_src='172.16.5.16'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), ('172.16.5.16', -1, -1, -1, -1, -1, {2}))}}
3:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.1.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': '172.16.5.17'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [6], (1, 2048, 0, ('172.16.1.0', '255.255.255.0'), '172.16.5.17', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.3', 'eth_type': 2048, 'ipv4_dst': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, '172.16.1.3', ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (514, 2, OFPMatch(oxm_fields={'ipv4_src': ('172.16.1.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, ('172.16.1.0', '255.255.255.0'), ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 4: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.21.1', 'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [6], (1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 5: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, -1, ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 6: (512, 2, OFPMatch(oxm_fields={'in_port': 3, 'ipv4_src': '172.16.22.1', 'eth_type': 2048, 'ipv4_dst': '172.16.23.7'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (3, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
4:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.21.1', 'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [8], (1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 4, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [8], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 4, 'ipv4_src': '172.16.22.1', 'eth_type': 2048, 'ipv4_dst': '172.16.23.7'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [3], (4, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 4: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.21.2', 'eth_type': 2048, 'ipv4_dst': ('172.16.24.0', '255.255.255.0')}), [], [], (1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
6:{0: {1: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 2: (512, 4, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [7], (1, 2048, 0, -1, ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 3: (513, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3}))}}
7:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.21.1', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.21.1', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2}))}}
8:{0: {1: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.4', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=10,type=0)], [13], (-1, 2048, 0, '172.16.1.4', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {10}))}}
13:{0: {1: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [16], (-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2}))}}
16:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.1.0', '255.255.255.0'), 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [-2], (1, 2048, 0, ('172.16.1.0', '255.255.255.0'), -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.5.16'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [-2], (-1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 3, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [6], (3, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 4: (512, 3, OFPMatch(oxm_fields={'in_port': 4, 'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [17], (4, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 5: (513, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.5.16', 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [19], (-1, 2048, 0, '172.16.5.16', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 6: (514, 2, OFPMatch(oxm_fields={'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [19], (-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6}))}}
17:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [20], (2, 2048, 0, -1, ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [20], (2, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 3: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.35.17', 'eth_type': 2048, 'ipv4_dst': '172.16.37.21'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [20], (-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
18:{0: {1: (514, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [], [], (1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
20:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 5, 'ipv4_src': '172.16.35.17', 'eth_type': 2048, 'ipv4_dst': '172.16.37.21'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [17], (5, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6}))}}
21:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [-2], (1, 2048, 0, -1, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': '172.16.5.16'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [-2], (1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.5.18', 'eth_type': 2048, 'ipv4_dst': '172.16.7.21'}), [], [], (1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
Number of rules: [38, {1: 2, 2: 3, 3: 6, 4: 4, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]

self.lc_cfl_rules = 
16:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: [], 5: [(4, 'class Correlation1 (local conflicts)', (1, 4, 1))], 6: [(4, 'class Generalization1 (local conflicts)', (1, 3, 1)), (5, 'class Redundancy (local conflicts)', (0, 3, 0))]}}
1:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))]}}
3:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))], 3: [(1, 'class Generalization1 (local conflicts)', (1, 3, 1)), (2, 'class Redundancy (local conflicts)', (0, 3, 0))], 5: [(4, 'class Generalization1 (local conflicts)', (1, 3, 1))]}}
4:{0: {1: [(2, 'class Redundancy (local conflicts)', (2, 3, 0))], 2: []}}
21:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
6:{0: {3: [(2, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
7:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: []}}
20:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: []}}
17:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
Number of local conflicts by dpid: [15, {16: {'gen1': 1, 'red': 1, 'ove': 1, 'cor1': 1}, 1: {'cor1': 1}, 3: {'gen1': 2, 'red': 1, 'cor1': 1}, 4: {'red': 1}, 21: {'sha1': 1}, 6: {'sha1': 1}, 7: {'ove': 1}, 20: {'ove': 1}, 17: {'sha1': 1}}]
Number of local conflicts by class: [15, {'gen1': 3, 'red': 3, 'ove': 3, 'sha1': 3, 'cor1': 3}]

self.hc_cfl_rules = 
1:{'eplb': [((2, 0, 1), [[1], 2048, [6, 17], ['172.16.55.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]]), ((2, 0, 2), [[1], 2048, [6, 17], ['172.16.2.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]]), ((2, 0, 3), [[1], 2048, [6, 17], [('172.16.5.0', '255.255.255.0')], ['192.168.1.2'], [-1], [-1], [-1], [-1]])]}
2:{}
3:{}
Number of rules causing hidden conflicts by control app: {'eplb': 3}

self.dt_cfl_rules = 
1:[(((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1), (16, 0, 3), (16, 0, -4)), (-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1)), (((4, 0, 3), (3, 0, 6), (4, 0, 3), (4, 0, -4)), (-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1)), (((20, 0, 3), (17, 0, 3), (20, 0, 3), (20, 0, -4)), (-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1))]
2:[(((18, 0, 1),), (1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1)), (((4, 0, 4),), (1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1)), (((20, 0, 1), (21, 0, 3)), (-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1))]
3:[(((21, 0, 1),), (1, 2048, 0, -1, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1)), (((21, 0, 2),), (1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1)), (((16, 0, 1),), (1, 2048, 0, ('172.16.1.0', '255.255.255.0'), -1, -1, -1, -1, -1)), (((16, 0, 2),), (-1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1)), (((2, 0, 1),), (1, 2048, 0, '172.16.55.1', -1, -1, -1, -1, -1)), (((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 1)), (-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1)), (((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 2)), (-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1)), (((2, 0, 3),), (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1))]
4:[]
Number of distributed conflicts by class: {'loop': 3, 'drop': 3}

2022-06-05 19:44:20.182459
New rule is coming, number of existing rules: [38, {1: 2, 2: 3, 3: 6, 4: 4, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (1,0,3) to the rule database = 0.3209114074707031

2022-06-05 19:44:20.250573
New rule is coming, number of existing rules: [39, {1: 3, 2: 3, 3: 6, 4: 4, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (1,0,4) to the rule database = 0.36716461181640625

2022-06-05 19:44:20.328554
New rule is coming, number of existing rules: [40, {1: 4, 2: 3, 3: 6, 4: 4, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,7) to the rule database = 0.6728172302246094

2022-06-05 19:44:20.392975
New rule is coming, number of existing rules: [41, {1: 4, 2: 3, 3: 7, 4: 4, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,8) to the rule database = 0.6234645843505859

2022-06-05 19:44:20.456477
New rule is coming, number of existing rules: [42, {1: 4, 2: 3, 3: 8, 4: 4, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,5) to the rule database = 0.4229545593261719

2022-06-05 19:44:20.520497
New rule is coming, number of existing rules: [43, {1: 4, 2: 3, 3: 8, 4: 5, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,6) to the rule database = 0.48279762268066406

2022-06-05 19:44:20.586876
New rule is coming, number of existing rules: [44, {1: 4, 2: 3, 3: 8, 4: 6, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (5,0,1) to the rule database = 20.475387573242188

2022-06-05 19:44:20.671696
New rule is coming, number of existing rules: [45, {1: 4, 2: 3, 3: 8, 4: 6, 5: 1, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (5,0,2) to the rule database = 0.14472007751464844

2022-06-05 19:44:20.733573
New rule is coming, number of existing rules: [46, {1: 4, 2: 3, 3: 8, 4: 6, 5: 2, 6: 3, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (6,0,4) to the rule database = 0.40435791015625

2022-06-05 19:44:20.805471
New rule is coming, number of existing rules: [47, {1: 4, 2: 3, 3: 8, 4: 6, 5: 2, 6: 4, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (6,0,5) to the rule database = 0.4544258117675781

2022-06-05 19:44:20.864272
New rule is coming, number of existing rules: [48, {1: 4, 2: 3, 3: 8, 4: 6, 5: 2, 6: 5, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (2,0,4) to the rule database = 0.37026405334472656

2022-06-05 19:44:20.940056
New rule is coming, number of existing rules: [49, {1: 4, 2: 4, 3: 8, 4: 6, 5: 2, 6: 5, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,9) to the rule database = 2.8600692749023438

2022-06-05 19:44:20.999061
New rule is coming, number of existing rules: [50, {1: 4, 2: 4, 3: 9, 4: 6, 5: 2, 6: 5, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,7) to the rule database = 0.34356117248535156

2022-06-05 19:44:21.051545
New rule is coming, number of existing rules: [51, {1: 4, 2: 4, 3: 9, 4: 7, 5: 2, 6: 5, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (5,0,3) to the rule database = 0.1666545867919922

2022-06-05 19:44:21.097361
New rule is coming, number of existing rules: [52, {1: 4, 2: 4, 3: 9, 4: 7, 5: 3, 6: 5, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,10) to the rule database = 0.4298686981201172

2022-06-05 19:44:21.141362
New rule is coming, number of existing rules: [53, {1: 4, 2: 4, 3: 10, 4: 7, 5: 3, 6: 5, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,11) to the rule database = 1.6367435455322266

2022-06-05 19:44:21.178648
New rule is coming, number of existing rules: [54, {1: 4, 2: 4, 3: 11, 4: 7, 5: 3, 6: 5, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (5,0,4) to the rule database = 0.17333030700683594


2022-06-05 19:44:32.055031
Number of existing rules: [55, {1: 4, 2: 4, 3: 11, 4: 7, 5: 4, 6: 5, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
number of nodes in rule graph = 49
number of edges in rule graph = 46
number of rules to be removed = 0
number of rules to be added = 17
Time difference (ms) in checking hidden conflicts for rule (1,0,4) = 0.018358230590820312
Time difference (ms) in adding rule (1,0,4) to the rule graph = 6.003618240356445
Time difference (ms) in checking hidden conflicts for rule (3,0,7) = 0.0152587890625
Time difference (ms) in adding rule (3,0,7) to the rule graph = 14.178276062011719
Time difference (ms) in checking hidden conflicts for rule (3,0,8) = 0.013828277587890625
Time difference (ms) in adding rule (3,0,8) to the rule graph = 19.679546356201172
Time difference (ms) in checking hidden conflicts for rule (4,0,5) = 0.012636184692382812
Time difference (ms) in adding rule (4,0,5) to the rule graph = 5.902290344238281
Time difference (ms) in checking hidden conflicts for rule (4,0,6) = 0.011444091796875
Time difference (ms) in adding rule (4,0,6) to the rule graph = 11.378288269042969
Time difference (ms) in checking hidden conflicts for rule (5,0,1) = 0.011205673217773438
Time difference (ms) in checking hidden conflicts for rule (5,0,2) = 0.010967254638671875
Time difference (ms) in checking hidden conflicts for rule (6,0,4) = 0.010251998901367188
Time difference (ms) in adding rule (6,0,4) to the rule graph = 9.548425674438477
Time difference (ms) in checking hidden conflicts for rule (6,0,5) = 0.011682510375976562
Time difference (ms) in adding rule (6,0,5) to the rule graph = 8.889913558959961
Time difference (ms) in checking hidden conflicts for rule (2,0,4) = 0.15544891357421875
Time difference (ms) in adding rule (2,0,4) to the rule graph = 0.316619873046875
Time difference (ms) in checking hidden conflicts for rule (3,0,9) = 0.010728836059570312
Time difference (ms) in adding rule (3,0,9) to the rule graph = 19.406557083129883
Time difference (ms) in checking hidden conflicts for rule (4,0,7) = 0.011205673217773438
Time difference (ms) in adding rule (4,0,7) to the rule graph = 22.655487060546875
Time difference (ms) in checking hidden conflicts for rule (5,0,3) = 0.010967254638671875
Time difference (ms) in adding rule (5,0,3) to the rule graph = 9.773492813110352
Time difference (ms) in checking hidden conflicts for rule (3,0,10) = 0.011205673217773438
Time difference (ms) in adding rule (3,0,10) to the rule graph = 8.223533630371094
Time difference (ms) in checking hidden conflicts for rule (3,0,11) = 0.011920928955078125
Time difference (ms) in adding rule (3,0,11) to the rule graph = 3.5414695739746094
Time difference (ms) in checking hidden conflicts for rule (5,0,4) = 0.011682510375976562
Time difference (ms) in adding rule (5,0,4) to the rule graph = 2.6178359985351562
Time difference (ms) after this round of updating the rule graph = 142.11535453796387
Avarage time difference (ms) in removing 0 rules from rule graph = 0
Avarage time difference (ms) in adding 10 rules to rule graph = 11.795902252197266


2022-06-05 19:44:42.271899
number of nodes in rule graph = 67
number of edges in rule graph = 66
((21, 0, 3), (21, 0, -1)) {((20, 0, 1), (21, 0, 3)): ((-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), -1)}
((3, 0, 3), (4, 0, -3)) {((2, 0, 2), (3, 0, 3)): ((-1, 2048, 0, '172.16.1.2', ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), -1)}
((6, 0, 1), (8, 0, 1)) {((6, 0, 1), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2), ((16, 0, 3), (6, 0, 1), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((3, 0, 4), (6, 0, 3)) {((1, 0, 2), (3, 0, 4), (6, 0, 3)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3), ((3, 0, 4), (6, 0, 3)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((3, 0, 4), (6, 0, 2)) {((1, 0, 2), (3, 0, 4), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 4), ((3, 0, 4), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 4)}
((1, 0, 1), (4, 0, 1)) {((1, 0, 1), (4, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((1, 0, 1), (4, 0, 2)) {((1, 0, 1), (4, 0, 2)): ((-1, 2048, 0, ('172.16.21.0', '255.255.255.0'), '172.16.22.7', -1, -1, -1, -1), 4)}
((4, 0, 3), (4, 0, -4)) {((4, 0, 3), (3, 0, 6), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), -1)}
((4, 0, 3), (3, 0, 6)) {((4, 0, 3), (3, 0, 6)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2), ((3, 0, 6), (4, 0, 3), (3, 0, 6), (3, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2)}
((21, 0, 1), (21, 0, -2)) {((21, 0, 1),): ((1, 2048, 0, -1, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), -1)}
((3, 0, 5), (4, 0, 2)) {((2, 0, 2), (3, 0, 5), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.2', '172.16.22.7', -1, -1, -1, -1), 4), ((3, 0, 5), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 4), ((1, 0, 2), (3, 0, 5), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 4)}
((6, 0, 3), (8, 0, 1)) {((6, 0, 3), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.22.7', -1, -1, -1, -1), 2)}
((4, 0, 2), (8, 0, 1)) {((1, 0, 2), (3, 0, 5), (4, 0, 2), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.22.7', -1, -1, -1, -1), 2), ((4, 0, 2), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.22.7', -1, -1, -1, -1), 2)}
((3, 0, 8), (2, 0, -3)) {((1, 0, 4), (3, 0, 8)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), -1), ((2, 0, 2), (3, 0, 8)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.3', -1, -1, -1, -1), -1), ((5, 0, 2), (3, 0, 8)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), -1)}
((3, 0, 6), (4, 0, 3)) {((4, 0, 3), (3, 0, 6), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2), ((3, 0, 6), (4, 0, 3)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2)}
((6, 0, 2), (7, 0, 2)) {((6, 0, 2), (7, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 3), ((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((6, 0, 2), (7, 0, 1)) {((6, 0, 2), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 2)}
((4, 0, 1), (8, 0, -3)) {((1, 0, 1), (4, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((2, 0, 4), (2, 0, -2)) {((2, 0, 4),): ((1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1), -1)}
((3, 0, 7), (4, 0, 6)) {((1, 0, 4), (3, 0, 7), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 4), ((3, 0, 7), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 4)}
((8, 0, 1), (13, 0, 1)) {((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2), ((8, 0, 1), (13, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((6, 0, 5), (8, 0, 1)) {((6, 0, 5), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.3', -1, -1, -1, -1), 2)}
((3, 0, 9), (4, 0, 7)) {((3, 0, 9), (4, 0, 7)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((17, 0, 2), (20, 0, 2)) {((16, 0, 4), (17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), 3)}
((6, 0, 4), (8, 0, -3)) {((6, 0, 4),): ((1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1)}
((4, 0, 7), (4, 0, -4)) {((3, 0, 9), (4, 0, 7), (5, 0, 3), (3, 0, 10), (4, 0, 7), (4, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), -1)}
((4, 0, 7), (5, 0, 3)) {((3, 0, 9), (4, 0, 7), (5, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((3, 0, 10), (4, 0, 7), (5, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((4, 0, 7), (5, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((17, 0, 3), (20, 0, 3)) {((17, 0, 3), (20, 0, 3)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2), ((20, 0, 3), (17, 0, 3), (20, 0, 3), (20, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2)}
((4, 0, 6), (2, 0, -3)) {((5, 0, 1), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1), ((1, 0, 4), (3, 0, 7), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1)}
((2, 0, 1), (2, 0, -2)) {((2, 0, 1),): ((1, 2048, 0, '172.16.55.1', -1, -1, -1, -1, -1), -1)}
((3, 0, 10), (4, 0, 7)) {((3, 0, 9), (4, 0, 7), (5, 0, 3), (3, 0, 10), (4, 0, 7), (4, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((3, 0, 10), (4, 0, 7)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((13, 0, 1), (16, 0, 3)) {((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1), (16, 0, 3), (16, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2), ((13, 0, 1), (16, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((4, 0, 5), (2, 0, -3)) {((4, 0, 5),): ((1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1)}
((17, 0, 1), (20, 0, 2)) {((16, 0, 4), (17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), 3)}
((5, 0, 4), (5, 0, -1)) {((3, 0, 11), (5, 0, 4)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), -1)}
((20, 0, 3), (17, 0, 3)) {((20, 0, 3), (17, 0, 3)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2), ((17, 0, 3), (20, 0, 3), (17, 0, 3), (17, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2)}
((20, 0, 3), (20, 0, -4)) {((20, 0, 3), (17, 0, 3), (20, 0, 3), (20, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), -1)}
((4, 0, 4), (4, 0, -1)) {((4, 0, 4),): ((1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1), -1)}
((2, 0, 3), (2, 0, -2)) {((2, 0, 3),): ((1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), -1)}
((20, 0, 2), (21, 0, -3)) {((16, 0, 4), (17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), -1), ((16, 0, 4), (17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), -1)}
((2, 0, 2), (3, 0, 8)) {((2, 0, 2), (3, 0, 8)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.3', -1, -1, -1, -1), 2)}
((2, 0, 2), (3, 0, 5)) {((2, 0, 2), (3, 0, 5)): ((-1, 2048, 0, '172.16.1.2', ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((2, 0, 2), (3, 0, 3)) {((2, 0, 2), (3, 0, 3)): ((-1, 2048, 0, '172.16.1.2', ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((7, 0, 1), (7, 0, -2)) {((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((5, 0, 2), (3, 0, 8)) {((5, 0, 2), (3, 0, 8)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), 2)}
((20, 0, 1), (21, 0, 1)) {((20, 0, 1), (21, 0, 1)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), 4)}
((20, 0, 1), (21, 0, 3)) {((20, 0, 1), (21, 0, 3)): ((-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), 2)}
((20, 0, 1), (21, 0, 2)) {((20, 0, 1), (21, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.5.16', -1, -1, -1, -1), 3)}
((5, 0, 1), (4, 0, 2)) {((5, 0, 1), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.1', '172.16.22.7', -1, -1, -1, -1), 4)}
((5, 0, 1), (4, 0, 6)) {((5, 0, 1), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 4)}
((7, 0, 2), (7, 0, -2)) {((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((5, 0, 3), (3, 0, 10)) {((3, 0, 9), (4, 0, 7), (5, 0, 3), (3, 0, 10)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((3, 0, 10), (4, 0, 7), (5, 0, 3), (3, 0, 10), (3, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((5, 0, 3), (3, 0, 10)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((1, 0, 4), (3, 0, 8)) {((1, 0, 4), (3, 0, 8)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), 2)}
((1, 0, 4), (3, 0, 7)) {((1, 0, 4), (3, 0, 7)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 3)}
((18, 0, 1), (18, 0, -1)) {((18, 0, 1),): ((1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), -1)}
((16, 0, 4), (17, 0, 2)) {((16, 0, 4), (17, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((16, 0, 4), (17, 0, 1)) {((16, 0, 4), (17, 0, 1)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 4)}
((16, 0, 3), (6, 0, 1)) {((16, 0, 3), (6, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((16, 0, 3), (16, 0, -4)) {((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1), (16, 0, 3), (16, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), -1)}
((16, 0, 2), (16, 0, -2)) {((16, 0, 2),): ((-1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), -1)}
((3, 0, 1), (6, 0, -3)) {((3, 0, 1),): ((1, 2048, 0, ('172.16.1.0', '255.255.255.0'), '172.16.5.17', -1, -1, -1, -1), -1)}
((1, 0, 2), (3, 0, 5)) {((1, 0, 2), (3, 0, 5)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 2)}
((1, 0, 2), (3, 0, 4)) {((1, 0, 2), (3, 0, 4)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((3, 0, 11), (5, 0, 4)) {((3, 0, 11), (5, 0, 4)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), 2)}
((16, 0, 1), (16, 0, -2)) {((16, 0, 1),): ((1, 2048, 0, ('172.16.1.0', '255.255.255.0'), -1, -1, -1, -1, -1), -1)}
((21, 0, 2), (21, 0, -2)) {((21, 0, 2),): ((1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), -1)}

self.ft = 
1:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.21.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [4], (1, 2048, 0, ('172.16.21.0', '255.255.255.0'), ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.1', 'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [2], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 4: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
2:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.55.1', 'eth_type': 2048}), [OFPActionSetField(ipv4_src='172.16.55.2'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.55.1', -1, -1, -1, -1, -1), ('172.16.55.2', -1, -1, -1, -1, -1, {2})), 2: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.2.1', 'eth_type': 2048}), [OFPActionSetField(ipv4_src='172.16.1.2'), OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (1, 2048, 0, '172.16.2.1', -1, -1, -1, -1, -1), ('172.16.1.2', -1, -1, -1, -1, -1, {4})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'eth_type': 2048}), [OFPActionSetField(ipv4_src='172.16.5.16'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), ('172.16.5.16', -1, -1, -1, -1, -1, {2})), 4: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.1', 'eth_type': 2048}), [OFPActionSetField(ipv4_src='172.16.1.2'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1), ('172.16.1.2', -1, -1, -1, -1, -1, {2}))}}
3:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.1.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': '172.16.5.17'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [6], (1, 2048, 0, ('172.16.1.0', '255.255.255.0'), '172.16.5.17', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.3', 'eth_type': 2048, 'ipv4_dst': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, '172.16.1.3', ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (514, 2, OFPMatch(oxm_fields={'ipv4_src': ('172.16.1.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, ('172.16.1.0', '255.255.255.0'), ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 4: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.21.1', 'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [6], (1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 5: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, -1, ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 6: (512, 2, OFPMatch(oxm_fields={'in_port': 3, 'ipv4_src': '172.16.22.1', 'eth_type': 2048, 'ipv4_dst': '172.16.23.7'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (3, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 7: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.1', 'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [4], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 8: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [2], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 9: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.1.5'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 10: (514, 2, OFPMatch(oxm_fields={'in_port': 5, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.1.5'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (5, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 11: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.2', 'eth_type': 2048, 'ipv4_dst': '172.16.1.6'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [5], (1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5}))}}
4:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.21.1', 'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [8], (1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 4, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [8], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 4, 'ipv4_src': '172.16.22.1', 'eth_type': 2048, 'ipv4_dst': '172.16.23.7'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [3], (4, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 4: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.21.2', 'eth_type': 2048, 'ipv4_dst': ('172.16.24.0', '255.255.255.0')}), [], [], (1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set())), 5: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.1', 'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [2], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 6: (513, 4, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [2], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 7: (513, 2, OFPMatch(oxm_fields={'in_port': 4, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.1.5'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [5], (4, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5}))}}
5:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.1', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [4], (1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=1,type=0)], [3], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {1})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 2, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.1.5'}), [OFPActionOutput(len=16,max_len=65509,port=1,type=0)], [3], (2, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {1})), 4: (513, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.2', 'eth_type': 2048, 'ipv4_dst': '172.16.1.6'}), [], [], (1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
6:{0: {1: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 2: (512, 4, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [7], (1, 2048, 0, -1, ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 3: (513, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 4: (512, 4, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.1', 'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 5: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3}))}}
7:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.21.1', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.21.1', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2}))}}
8:{0: {1: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.4', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=10,type=0)], [13], (-1, 2048, 0, '172.16.1.4', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {10}))}}
13:{0: {1: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [16], (-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2}))}}
16:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.1.0', '255.255.255.0'), 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [-2], (1, 2048, 0, ('172.16.1.0', '255.255.255.0'), -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.5.16'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [-2], (-1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 3, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [6], (3, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 4: (512, 3, OFPMatch(oxm_fields={'in_port': 4, 'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [17], (4, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 5: (513, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.5.16', 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [19], (-1, 2048, 0, '172.16.5.16', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 6: (514, 2, OFPMatch(oxm_fields={'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [19], (-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6}))}}
17:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [20], (2, 2048, 0, -1, ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [20], (2, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 3: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.35.17', 'eth_type': 2048, 'ipv4_dst': '172.16.37.21'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [20], (-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
18:{0: {1: (514, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [], [], (1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
20:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 5, 'ipv4_src': '172.16.35.17', 'eth_type': 2048, 'ipv4_dst': '172.16.37.21'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [17], (5, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6}))}}
21:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [-2], (1, 2048, 0, -1, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': '172.16.5.16'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [-2], (1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.5.18', 'eth_type': 2048, 'ipv4_dst': '172.16.7.21'}), [], [], (1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
Number of rules: [55, {1: 4, 2: 4, 3: 11, 4: 7, 5: 4, 6: 5, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]

self.lc_cfl_rules = 
16:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: [], 5: [(4, 'class Correlation1 (local conflicts)', (1, 4, 1))], 6: [(4, 'class Generalization1 (local conflicts)', (1, 3, 1)), (5, 'class Redundancy (local conflicts)', (0, 3, 0))]}}
1:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))], 3: [(4, 'class Shadowing2 (local conflicts)', (2, 3, 1))], 4: []}}
3:{0: {8: [(7, 'class Generalization1 (local conflicts)', (1, 3, 1))], 2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))], 3: [(1, 'class Generalization1 (local conflicts)', (1, 3, 1)), (2, 'class Redundancy (local conflicts)', (0, 3, 0))], 5: [(4, 'class Generalization1 (local conflicts)', (1, 3, 1))]}}
4:{0: {1: [(2, 'class Redundancy (local conflicts)', (2, 3, 0))], 2: [], 5: [(6, 'class Redundancy (local conflicts)', (2, 3, 0))], 6: []}}
21:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
6:{0: {3: [(2, 'class Shadowing1 (local conflicts)', (1, 2, 1))], 5: [(4, 'class Overlap (local conflicts)', (1, 3, 0))]}}
7:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: []}}
20:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: []}}
17:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
5:{0: {2: [(1, 'class Correlation3 (local conflicts)', (0, 4, 1))]}}
Number of local conflicts by dpid: [20, {16: {'gen1': 1, 'red': 1, 'ove': 1, 'cor1': 1}, 1: {'sha2': 1, 'cor1': 1}, 3: {'gen1': 3, 'red': 1, 'cor1': 1}, 4: {'red': 2}, 21: {'sha1': 1}, 6: {'ove': 1, 'sha1': 1}, 7: {'ove': 1}, 20: {'ove': 1}, 17: {'sha1': 1}, 5: {'cor3': 1}}]
Number of local conflicts by class: [20, {'gen1': 4, 'red': 4, 'sha1': 3, 'ove': 4, 'cor3': 1, 'sha2': 1, 'cor1': 3}]

self.hc_cfl_rules = 
1:{'eplb': [((2, 0, 1), [[1], 2048, [6, 17], ['172.16.55.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]]), ((2, 0, 2), [[1], 2048, [6, 17], ['172.16.2.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]]), ((2, 0, 3), [[1], 2048, [6, 17], [('172.16.5.0', '255.255.255.0')], ['192.168.1.2'], [-1], [-1], [-1], [-1]]), ((2, 0, 4), [[1], 2048, [6, 17], ['172.16.1.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]])]}
2:{}
3:{}
Number of rules causing hidden conflicts by control app: {'eplb': 4}

self.dt_cfl_rules = 
1:[(((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1), (16, 0, 3), (16, 0, -4)), (-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1)), (((4, 0, 3), (3, 0, 6), (4, 0, 3), (4, 0, -4)), (-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1)), (((20, 0, 3), (17, 0, 3), (20, 0, 3), (20, 0, -4)), (-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1)), (((3, 0, 9), (4, 0, 7), (5, 0, 3), (3, 0, 10), (4, 0, 7), (4, 0, -4)), (-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1))]
2:[(((18, 0, 1),), (1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1)), (((4, 0, 4),), (1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1)), (((20, 0, 1), (21, 0, 3)), (-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1)), (((3, 0, 11), (5, 0, 4)), (-1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1))]
3:[(((21, 0, 1),), (1, 2048, 0, -1, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1)), (((21, 0, 2),), (1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1)), (((16, 0, 1),), (1, 2048, 0, ('172.16.1.0', '255.255.255.0'), -1, -1, -1, -1, -1)), (((16, 0, 2),), (-1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1)), (((2, 0, 1),), (1, 2048, 0, '172.16.55.1', -1, -1, -1, -1, -1)), (((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 1)), (-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1)), (((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 2)), (-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1)), (((2, 0, 3),), (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1)), (((2, 0, 4),), (1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1))]
4:[]
Number of distributed conflicts by class: {'loop': 4, 'drop': 4}

2022-06-05 19:45:01.312164
New rule is coming, number of existing rules: [55, {1: 4, 2: 4, 3: 11, 4: 7, 5: 4, 6: 5, 7: 2, 8: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (8,0,2) to the rule database = 0.2841949462890625

2022-06-05 19:45:01.376345
New rule is coming, number of existing rules: [56, {1: 4, 2: 4, 3: 11, 4: 7, 5: 4, 6: 5, 7: 2, 8: 2, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (8,0,3) to the rule database = 0.9198188781738281

2022-06-05 19:45:01.445017
New rule is coming, number of existing rules: [57, {1: 4, 2: 4, 3: 11, 4: 7, 5: 4, 6: 5, 7: 2, 8: 3, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (8,0,4) to the rule database = 1.9147396087646484

2022-06-05 19:45:01.513090
New rule is coming, number of existing rules: [58, {1: 4, 2: 4, 3: 11, 4: 7, 5: 4, 6: 5, 7: 2, 8: 4, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (7,0,3) to the rule database = 0.2319812774658203

2022-06-05 19:45:01.577994
New rule is coming, number of existing rules: [59, {1: 4, 2: 4, 3: 11, 4: 7, 5: 4, 6: 5, 7: 3, 8: 4, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (7,0,4) to the rule database = 0.4055500030517578

2022-06-05 19:45:01.647112
New rule is coming, number of existing rules: [60, {1: 4, 2: 4, 3: 11, 4: 7, 5: 4, 6: 5, 7: 4, 8: 4, 13: 1, 16: 6, 17: 3, 18: 1, 20: 3, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (20,0,4) to the rule database = 4.714488983154297

2022-06-05 19:45:01.791104
New rule is coming, number of existing rules: [61, {1: 4, 2: 4, 3: 11, 4: 7, 5: 4, 6: 5, 7: 4, 8: 4, 13: 1, 16: 6, 17: 3, 18: 1, 20: 4, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (2,0,5) to the rule database = 0.5381107330322266

2022-06-05 19:45:01.875824
New rule is coming, number of existing rules: [62, {1: 4, 2: 5, 3: 11, 4: 7, 5: 4, 6: 5, 7: 4, 8: 4, 13: 1, 16: 6, 17: 3, 18: 1, 20: 4, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (8,0,5) to the rule database = 1.3756752014160156

2022-06-05 19:45:01.939936
New rule is coming, number of existing rules: [63, {1: 4, 2: 5, 3: 11, 4: 7, 5: 4, 6: 5, 7: 4, 8: 5, 13: 1, 16: 6, 17: 3, 18: 1, 20: 4, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (20,0,5) to the rule database = 0.39458274841308594

2022-06-05 19:45:02.009190
New rule is coming, number of existing rules: [64, {1: 4, 2: 5, 3: 11, 4: 7, 5: 4, 6: 5, 7: 4, 8: 5, 13: 1, 16: 6, 17: 3, 18: 1, 20: 5, 21: 3}]
Time difference (ms) in checking local conflicts and adding new rule (9,0,1) to the rule database = 0.0553131103515625


2022-06-05 19:45:12.390062
Number of existing rules: [65, {1: 4, 2: 5, 3: 11, 4: 7, 5: 4, 6: 5, 7: 4, 8: 5, 9: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 5, 21: 3}]
number of nodes in rule graph = 67
number of edges in rule graph = 66
number of rules to be removed = 0
number of rules to be added = 10
Time difference (ms) in checking hidden conflicts for rule (8,0,2) = 0.016927719116210938
Time difference (ms) in adding rule (8,0,2) to the rule graph = 101.22179985046387
Time difference (ms) in checking hidden conflicts for rule (8,0,3) = 0.012636184692382812
Time difference (ms) in adding rule (8,0,3) to the rule graph = 32.392263412475586
Time difference (ms) in checking hidden conflicts for rule (8,0,4) = 0.011205673217773438
Time difference (ms) in adding rule (8,0,4) to the rule graph = 49.254417419433594
Time difference (ms) in checking hidden conflicts for rule (7,0,3) = 0.01239776611328125
Time difference (ms) in checking hidden conflicts for rule (7,0,4) = 0.010251998901367188
Time difference (ms) in checking hidden conflicts for rule (20,0,4) = 0.010251998901367188
Time difference (ms) in adding rule (20,0,4) to the rule graph = 37.39356994628906
Time difference (ms) in checking hidden conflicts for rule (2,0,5) = 0.43392181396484375
Time difference (ms) in adding rule (2,0,5) to the rule graph = 2.188444137573242
Time difference (ms) in checking hidden conflicts for rule (8,0,5) = 0.011444091796875
Time difference (ms) in adding rule (8,0,5) to the rule graph = 25.328874588012695
Time difference (ms) in checking hidden conflicts for rule (20,0,5) = 0.011444091796875
Time difference (ms) in checking hidden conflicts for rule (9,0,1) = 0.023603439331054688
Time difference (ms) in adding rule (9,0,1) to the rule graph = 2.790212631225586
Time difference (ms) after this round of updating the rule graph = 250.56958198547363
Avarage time difference (ms) in removing 0 rules from rule graph = 0
Avarage time difference (ms) in adding 7 rules to rule graph = 35.795654569353374


2022-06-05 19:45:22.735116
number of nodes in rule graph = 78
number of edges in rule graph = 87
((2, 0, 5), (2, 0, -2)) {((2, 0, 5),): ((1, 2048, 0, ('172.16.42.0', '255.255.255.0'), -1, -1, -1, -1, -1), -1)}
((7, 0, 3), (8, 0, 1)) {((7, 0, 3), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((7, 0, 3), (8, 0, 2)) {((7, 0, 3), (8, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((7, 0, 3), (8, 0, 3)) {((7, 0, 3), (8, 0, 3)): ((-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((7, 0, 3), (8, 0, 4)) {((7, 0, 3), (8, 0, 4)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((21, 0, 3), (21, 0, -1)) {((20, 0, 1), (21, 0, 3)): ((-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), -1)}
((3, 0, 3), (4, 0, -3)) {((2, 0, 2), (3, 0, 3)): ((-1, 2048, 0, '172.16.1.2', ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), -1)}
((8, 0, 5), (20, 0, 5)) {((20, 0, 5), (8, 0, 5), (20, 0, 5), (20, 0, -4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2), ((8, 0, 5), (20, 0, 5)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2)}
((6, 0, 1), (8, 0, 1)) {((6, 0, 1), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2), ((16, 0, 3), (6, 0, 1), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((3, 0, 4), (6, 0, 3)) {((1, 0, 2), (3, 0, 4), (6, 0, 3)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3), ((3, 0, 4), (6, 0, 3)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((3, 0, 4), (6, 0, 2)) {((1, 0, 2), (3, 0, 4), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 4), ((3, 0, 4), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 4)}
((1, 0, 1), (4, 0, 1)) {((1, 0, 1), (4, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((1, 0, 1), (4, 0, 2)) {((1, 0, 1), (4, 0, 2)): ((-1, 2048, 0, ('172.16.21.0', '255.255.255.0'), '172.16.22.7', -1, -1, -1, -1), 4)}
((4, 0, 3), (4, 0, -4)) {((4, 0, 3), (3, 0, 6), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), -1)}
((4, 0, 3), (3, 0, 6)) {((4, 0, 3), (3, 0, 6)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2), ((3, 0, 6), (4, 0, 3), (3, 0, 6), (3, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2)}
((21, 0, 1), (21, 0, -2)) {((21, 0, 1),): ((1, 2048, 0, -1, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), -1)}
((3, 0, 5), (4, 0, 2)) {((2, 0, 2), (3, 0, 5), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.2', '172.16.22.7', -1, -1, -1, -1), 4), ((3, 0, 5), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 4), ((1, 0, 2), (3, 0, 5), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 4)}
((8, 0, 3), (20, 0, 2)) {((8, 0, 3), (20, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 3), (8, 0, 3), (20, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 4), (8, 0, 3), (20, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 3)}
((8, 0, 3), (20, 0, 4)) {((8, 0, 3), (20, 0, 4)): ((-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((7, 0, 3), (8, 0, 3), (20, 0, 4)): ((-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((7, 0, 4), (8, 0, 3), (20, 0, 4)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 2)}
((6, 0, 3), (8, 0, 1)) {((6, 0, 3), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.22.7', -1, -1, -1, -1), 2)}
((4, 0, 2), (8, 0, 1)) {((1, 0, 2), (3, 0, 5), (4, 0, 2), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.22.7', -1, -1, -1, -1), 2), ((4, 0, 2), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.22.7', -1, -1, -1, -1), 2)}
((3, 0, 8), (2, 0, -3)) {((1, 0, 4), (3, 0, 8)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), -1), ((2, 0, 2), (3, 0, 8)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.3', -1, -1, -1, -1), -1), ((5, 0, 2), (3, 0, 8)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), -1)}
((3, 0, 6), (4, 0, 3)) {((4, 0, 3), (3, 0, 6), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2), ((3, 0, 6), (4, 0, 3)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2)}
((8, 0, 2), (20, 0, 2)) {((7, 0, 3), (8, 0, 2), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((8, 0, 2), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 4), (8, 0, 2), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((8, 0, 2), (20, 0, 4)) {((7, 0, 4), (8, 0, 2), (20, 0, 4)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2), ((7, 0, 3), (8, 0, 2), (20, 0, 4)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2), ((8, 0, 2), (20, 0, 4)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2)}
((6, 0, 2), (7, 0, 2)) {((6, 0, 2), (7, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 3), ((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((6, 0, 2), (7, 0, 1)) {((6, 0, 2), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 2)}
((4, 0, 1), (8, 0, -3)) {((1, 0, 1), (4, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((2, 0, 4), (2, 0, -2)) {((2, 0, 4),): ((1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1), -1)}
((3, 0, 7), (4, 0, 6)) {((1, 0, 4), (3, 0, 7), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 4), ((3, 0, 7), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 4)}
((8, 0, 1), (13, 0, 1)) {((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2), ((8, 0, 1), (13, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((6, 0, 5), (8, 0, 1)) {((6, 0, 5), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.3', -1, -1, -1, -1), 2)}
((3, 0, 9), (4, 0, 7)) {((3, 0, 9), (4, 0, 7)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((17, 0, 2), (20, 0, 2)) {((16, 0, 4), (17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), 3)}
((6, 0, 4), (8, 0, -3)) {((6, 0, 4),): ((1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1)}
((4, 0, 7), (4, 0, -4)) {((3, 0, 9), (4, 0, 7), (5, 0, 3), (3, 0, 10), (4, 0, 7), (4, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), -1)}
((4, 0, 7), (5, 0, 3)) {((3, 0, 9), (4, 0, 7), (5, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((3, 0, 10), (4, 0, 7), (5, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((4, 0, 7), (5, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((17, 0, 3), (20, 0, 3)) {((17, 0, 3), (20, 0, 3)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2), ((20, 0, 3), (17, 0, 3), (20, 0, 3), (20, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2)}
((4, 0, 6), (2, 0, -3)) {((5, 0, 1), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1), ((1, 0, 4), (3, 0, 7), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1)}
((2, 0, 1), (2, 0, -2)) {((2, 0, 1),): ((1, 2048, 0, '172.16.55.1', -1, -1, -1, -1, -1), -1)}
((3, 0, 10), (4, 0, 7)) {((3, 0, 9), (4, 0, 7), (5, 0, 3), (3, 0, 10), (4, 0, 7), (4, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((3, 0, 10), (4, 0, 7)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((13, 0, 1), (16, 0, 3)) {((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1), (16, 0, 3), (16, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2), ((13, 0, 1), (16, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((4, 0, 5), (2, 0, -3)) {((4, 0, 5),): ((1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1)}
((17, 0, 1), (20, 0, 2)) {((16, 0, 4), (17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), 3)}
((5, 0, 4), (5, 0, -1)) {((3, 0, 11), (5, 0, 4)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), -1)}
((20, 0, 3), (17, 0, 3)) {((20, 0, 3), (17, 0, 3)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2), ((17, 0, 3), (20, 0, 3), (17, 0, 3), (17, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), 2)}
((20, 0, 3), (20, 0, -4)) {((20, 0, 3), (17, 0, 3), (20, 0, 3), (20, 0, -4)): ((-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), -1)}
((4, 0, 4), (4, 0, -1)) {((4, 0, 4),): ((1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1), -1)}
((2, 0, 3), (2, 0, -2)) {((2, 0, 3),): ((1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), -1)}
((20, 0, 2), (21, 0, -3)) {((7, 0, 3), (8, 0, 3), (20, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), -1), ((7, 0, 3), (8, 0, 4), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), -1), ((7, 0, 4), (8, 0, 2), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), -1), ((7, 0, 3), (8, 0, 2), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), -1), ((7, 0, 4), (8, 0, 4), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), -1), ((16, 0, 4), (17, 0, 1), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), -1), ((16, 0, 4), (17, 0, 2), (20, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), -1), ((7, 0, 4), (8, 0, 3), (20, 0, 2)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), -1)}
((2, 0, 2), (3, 0, 8)) {((2, 0, 2), (3, 0, 8)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.3', -1, -1, -1, -1), 2)}
((2, 0, 2), (3, 0, 5)) {((2, 0, 2), (3, 0, 5)): ((-1, 2048, 0, '172.16.1.2', ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((2, 0, 2), (3, 0, 3)) {((2, 0, 2), (3, 0, 3)): ((-1, 2048, 0, '172.16.1.2', ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((7, 0, 1), (7, 0, -2)) {((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((5, 0, 2), (3, 0, 8)) {((5, 0, 2), (3, 0, 8)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), 2)}
((20, 0, 1), (21, 0, 1)) {((20, 0, 1), (21, 0, 1)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), 4)}
((20, 0, 1), (21, 0, 3)) {((20, 0, 1), (21, 0, 3)): ((-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), 2)}
((20, 0, 1), (21, 0, 2)) {((20, 0, 1), (21, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.5.16', -1, -1, -1, -1), 3)}
((5, 0, 1), (4, 0, 2)) {((5, 0, 1), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.1', '172.16.22.7', -1, -1, -1, -1), 4)}
((5, 0, 1), (4, 0, 6)) {((5, 0, 1), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 4)}
((7, 0, 2), (7, 0, -2)) {((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((5, 0, 3), (3, 0, 10)) {((3, 0, 9), (4, 0, 7), (5, 0, 3), (3, 0, 10)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((3, 0, 10), (4, 0, 7), (5, 0, 3), (3, 0, 10), (3, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((5, 0, 3), (3, 0, 10)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((1, 0, 4), (3, 0, 8)) {((1, 0, 4), (3, 0, 8)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), 2)}
((1, 0, 4), (3, 0, 7)) {((1, 0, 4), (3, 0, 7)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 3)}
((18, 0, 1), (18, 0, -1)) {((18, 0, 1),): ((1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), -1)}
((16, 0, 4), (17, 0, 2)) {((16, 0, 4), (17, 0, 2)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((16, 0, 4), (17, 0, 1)) {((16, 0, 4), (17, 0, 1)): ((-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 4)}
((20, 0, 5), (8, 0, 5)) {((8, 0, 5), (20, 0, 5), (8, 0, 5), (8, 0, -4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2), ((20, 0, 5), (8, 0, 5)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), 2)}
((20, 0, 5), (20, 0, -4)) {((20, 0, 5), (8, 0, 5), (20, 0, 5), (20, 0, -4)): ((-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), -1)}
((16, 0, 3), (6, 0, 1)) {((16, 0, 3), (6, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), 2)}
((16, 0, 3), (16, 0, -4)) {((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1), (16, 0, 3), (16, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), -1)}
((7, 0, 4), (8, 0, 1)) {((7, 0, 4), (8, 0, 1)): ((-1, 2048, 0, '172.16.1.4', '172.16.7.20', -1, -1, -1, -1), 2)}
((7, 0, 4), (8, 0, 2)) {((7, 0, 4), (8, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((7, 0, 4), (8, 0, 3)) {((7, 0, 4), (8, 0, 3)): ((-1, 2048, 0, '172.16.2.7', '172.16.7.20', -1, -1, -1, -1), 2)}
((7, 0, 4), (8, 0, 4)) {((7, 0, 4), (8, 0, 4)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2)}
((9, 0, 1), (9, 0, -1)) {((9, 0, 1),): ((1, 2048, 0, '172.16.7.21', '172.16.2.9', -1, -1, -1, -1), -1)}
((20, 0, 4), (21, 0, 1)) {((20, 0, 4), (21, 0, 1)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), 4)}
((20, 0, 4), (21, 0, 2)) {((20, 0, 4), (21, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.5.16', -1, -1, -1, -1), 3)}
((16, 0, 2), (16, 0, -2)) {((16, 0, 2),): ((-1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), -1)}
((8, 0, 4), (20, 0, 2)) {((7, 0, 4), (8, 0, 4), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((7, 0, 3), (8, 0, 4), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3), ((8, 0, 4), (20, 0, 2)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 3)}
((8, 0, 4), (20, 0, 4)) {((8, 0, 4), (20, 0, 4)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((7, 0, 3), (8, 0, 4), (20, 0, 4)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((7, 0, 4), (8, 0, 4), (20, 0, 4)): ((-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), 2)}
((3, 0, 1), (6, 0, -3)) {((3, 0, 1),): ((1, 2048, 0, ('172.16.1.0', '255.255.255.0'), '172.16.5.17', -1, -1, -1, -1), -1)}
((1, 0, 2), (3, 0, 5)) {((1, 0, 2), (3, 0, 5)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 2)}
((1, 0, 2), (3, 0, 4)) {((1, 0, 2), (3, 0, 4)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((3, 0, 11), (5, 0, 4)) {((3, 0, 11), (5, 0, 4)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), 2)}
((16, 0, 1), (16, 0, -2)) {((16, 0, 1),): ((1, 2048, 0, ('172.16.1.0', '255.255.255.0'), -1, -1, -1, -1, -1), -1)}
((21, 0, 2), (21, 0, -2)) {((21, 0, 2),): ((1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), -1)}

self.ft = 
1:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.21.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [4], (1, 2048, 0, ('172.16.21.0', '255.255.255.0'), ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.1', 'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [2], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 4: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
2:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.55.1', 'eth_type': 2048}), [OFPActionSetField(ipv4_src='172.16.55.2'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.55.1', -1, -1, -1, -1, -1), ('172.16.55.2', -1, -1, -1, -1, -1, {2})), 2: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.2.1', 'eth_type': 2048}), [OFPActionSetField(ipv4_src='172.16.1.2'), OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (1, 2048, 0, '172.16.2.1', -1, -1, -1, -1, -1), ('172.16.1.2', -1, -1, -1, -1, -1, {4})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'eth_type': 2048}), [OFPActionSetField(ipv4_src='172.16.5.16'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), ('172.16.5.16', -1, -1, -1, -1, -1, {2})), 4: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.1', 'eth_type': 2048}), [OFPActionSetField(ipv4_src='172.16.1.2'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1), ('172.16.1.2', -1, -1, -1, -1, -1, {2})), 5: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.42.0', '255.255.255.0'), 'eth_type': 2048}), [OFPActionSetField(ipv4_src='172.16.2.7'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, ('172.16.42.0', '255.255.255.0'), -1, -1, -1, -1, -1), ('172.16.2.7', -1, -1, -1, -1, -1, {2}))}}
3:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.1.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': '172.16.5.17'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [6], (1, 2048, 0, ('172.16.1.0', '255.255.255.0'), '172.16.5.17', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.3', 'eth_type': 2048, 'ipv4_dst': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, '172.16.1.3', ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (514, 2, OFPMatch(oxm_fields={'ipv4_src': ('172.16.1.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, ('172.16.1.0', '255.255.255.0'), ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 4: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.21.1', 'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [6], (1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 5: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, -1, ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 6: (512, 2, OFPMatch(oxm_fields={'in_port': 3, 'ipv4_src': '172.16.22.1', 'eth_type': 2048, 'ipv4_dst': '172.16.23.7'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (3, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 7: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.1', 'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [4], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 8: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [2], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 9: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.1.5'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 10: (514, 2, OFPMatch(oxm_fields={'in_port': 5, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.1.5'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (5, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 11: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.2', 'eth_type': 2048, 'ipv4_dst': '172.16.1.6'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [5], (1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5}))}}
4:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.21.1', 'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [8], (1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 4, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [8], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 4, 'ipv4_src': '172.16.22.1', 'eth_type': 2048, 'ipv4_dst': '172.16.23.7'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [3], (4, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 4: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.21.2', 'eth_type': 2048, 'ipv4_dst': ('172.16.24.0', '255.255.255.0')}), [], [], (1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set())), 5: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.1', 'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [2], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 6: (513, 4, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [2], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 7: (513, 2, OFPMatch(oxm_fields={'in_port': 4, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.1.5'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [5], (4, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5}))}}
5:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.1', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [4], (1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 2: (513, 2, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=1,type=0)], [3], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {1})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 2, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.1.5'}), [OFPActionOutput(len=16,max_len=65509,port=1,type=0)], [3], (2, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {1})), 4: (513, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.2', 'eth_type': 2048, 'ipv4_dst': '172.16.1.6'}), [], [], (1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
6:{0: {1: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 2: (512, 4, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': ('172.16.22.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [7], (1, 2048, 0, -1, ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 3: (513, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 4: (512, 4, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.1', 'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 5: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.1.3'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3}))}}
7:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.21.1', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.21.1', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.22.7'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 3: (512, 4, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (2, 2048, 0, -1, ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 4: (513, 3, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [8], (2, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
8:{0: {1: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.4', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=10,type=0)], [13], (-1, 2048, 0, '172.16.1.4', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {10})), 2: (512, 3, OFPMatch(oxm_fields={'in_port': 4, 'ipv4_src': ('172.16.2.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=8,type=0)], [20], (4, 2048, 0, ('172.16.2.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {8})), 3: (513, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.2.7', 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [20], (-1, 2048, 0, '172.16.2.7', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 4: (514, 2, OFPMatch(oxm_fields={'ipv4_src': ('172.16.2.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [20], (-1, 2048, 0, ('172.16.2.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 5: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.42.8', 'eth_type': 2048, 'ipv4_dst': '172.16.47.21'}), [OFPActionOutput(len=16,max_len=65509,port=8,type=0)], [20], (-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {8}))}}
9:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.7.21', 'eth_type': 2048, 'ipv4_dst': '172.16.2.9'}), [], [], (1, 2048, 0, '172.16.7.21', '172.16.2.9', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
13:{0: {1: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [16], (-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2}))}}
16:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.1.0', '255.255.255.0'), 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [-2], (1, 2048, 0, ('172.16.1.0', '255.255.255.0'), -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.5.16'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [-2], (-1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 3, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [6], (3, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 4: (512, 3, OFPMatch(oxm_fields={'in_port': 4, 'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [17], (4, 2048, 0, ('172.16.5.0', '255.255.255.0'), '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 5: (513, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.5.16', 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [19], (-1, 2048, 0, '172.16.5.16', ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 6: (514, 2, OFPMatch(oxm_fields={'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [19], (-1, 2048, 0, ('172.16.5.0', '255.255.255.0'), ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6}))}}
17:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': ('172.16.7.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [20], (2, 2048, 0, -1, ('172.16.7.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 2, 'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [20], (2, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 3: (512, 2, OFPMatch(oxm_fields={'ipv4_src': '172.16.35.17', 'eth_type': 2048, 'ipv4_dst': '172.16.37.21'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [20], (-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
18:{0: {1: (514, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.1.4', 'eth_type': 2048, 'ipv4_dst': '172.16.5.18'}), [], [], (1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
20:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.5.0', '255.255.255.0'), 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 2: (513, 3, OFPMatch(oxm_fields={'eth_type': 2048, 'ipv4_dst': '172.16.7.20'}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (-1, 2048, 0, -1, '172.16.7.20', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 5, 'ipv4_src': '172.16.35.17', 'eth_type': 2048, 'ipv4_dst': '172.16.37.21'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [17], (5, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 4: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': ('172.16.2.0', '255.255.255.0'), 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=9,type=0)], [21], (1, 2048, 0, ('172.16.2.0', '255.255.255.0'), -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {9})), 5: (513, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.42.8', 'eth_type': 2048, 'ipv4_dst': '172.16.47.21'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [8], (1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2}))}}
21:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': ('172.16.5.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [-2], (1, 2048, 0, -1, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_dst': '172.16.5.16'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [-2], (1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_src': '172.16.5.18', 'eth_type': 2048, 'ipv4_dst': '172.16.7.21'}), [], [], (1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
Number of rules: [65, {1: 4, 2: 5, 3: 11, 4: 7, 5: 4, 6: 5, 7: 4, 8: 5, 9: 1, 13: 1, 16: 6, 17: 3, 18: 1, 20: 5, 21: 3}]

self.lc_cfl_rules = 
16:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: [], 5: [(4, 'class Correlation1 (local conflicts)', (1, 4, 1))], 6: [(4, 'class Generalization1 (local conflicts)', (1, 3, 1)), (5, 'class Redundancy (local conflicts)', (0, 3, 0))]}}
1:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))], 3: [(4, 'class Shadowing2 (local conflicts)', (2, 3, 1))], 4: []}}
3:{0: {8: [(7, 'class Generalization1 (local conflicts)', (1, 3, 1))], 2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))], 3: [(1, 'class Generalization1 (local conflicts)', (1, 3, 1)), (2, 'class Redundancy (local conflicts)', (0, 3, 0))], 5: [(4, 'class Generalization1 (local conflicts)', (1, 3, 1))]}}
4:{0: {1: [(2, 'class Redundancy (local conflicts)', (2, 3, 0))], 2: [], 5: [(6, 'class Redundancy (local conflicts)', (2, 3, 0))], 6: []}}
21:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
6:{0: {3: [(2, 'class Shadowing1 (local conflicts)', (1, 2, 1))], 5: [(4, 'class Overlap (local conflicts)', (1, 3, 0))]}}
7:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: [], 4: [(3, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
8:{0: {3: [(2, 'class Correlation1 (local conflicts)', (1, 4, 1))], 4: [(2, 'class Generalization1 (local conflicts)', (1, 3, 1)), (3, 'class Redundancy (local conflicts)', (0, 3, 0))]}}
20:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: [], 4: [(2, 'class Overlap (local conflicts)', (1, 4, 0))]}}
17:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
5:{0: {2: [(1, 'class Correlation3 (local conflicts)', (0, 4, 1))]}}
Number of local conflicts by dpid: [25, {16: {'gen1': 1, 'red': 1, 'ove': 1, 'cor1': 1}, 1: {'sha2': 1, 'cor1': 1}, 3: {'gen1': 3, 'red': 1, 'cor1': 1}, 4: {'red': 2}, 21: {'sha1': 1}, 6: {'ove': 1, 'sha1': 1}, 7: {'ove': 1, 'sha1': 1}, 8: {'gen1': 1, 'red': 1, 'cor1': 1}, 20: {'ove': 2}, 17: {'sha1': 1}, 5: {'cor3': 1}}]
Number of local conflicts by class: [25, {'gen1': 5, 'red': 5, 'sha1': 4, 'ove': 5, 'cor3': 1, 'sha2': 1, 'cor1': 4}]

self.hc_cfl_rules = 
1:{'eplb': [((2, 0, 1), [[1], 2048, [6, 17], ['172.16.55.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]]), ((2, 0, 2), [[1], 2048, [6, 17], ['172.16.2.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]]), ((2, 0, 3), [[1], 2048, [6, 17], [('172.16.5.0', '255.255.255.0')], ['192.168.1.2'], [-1], [-1], [-1], [-1]]), ((2, 0, 4), [[1], 2048, [6, 17], ['172.16.1.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]]), ((2, 0, 5), [[1], 2048, [6, 17], [('172.16.42.0', '255.255.255.0')], ['192.168.1.2'], [-1], [-1], [-1], [-1]])]}
2:{}
3:{}
Number of rules causing hidden conflicts by control app: {'eplb': 5}

self.dt_cfl_rules = 
1:[(((16, 0, 3), (6, 0, 1), (8, 0, 1), (13, 0, 1), (16, 0, 3), (16, 0, -4)), (-1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1)), (((4, 0, 3), (3, 0, 6), (4, 0, 3), (4, 0, -4)), (-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1)), (((20, 0, 3), (17, 0, 3), (20, 0, 3), (20, 0, -4)), (-1, 2048, 0, '172.16.35.17', '172.16.37.21', -1, -1, -1, -1)), (((3, 0, 9), (4, 0, 7), (5, 0, 3), (3, 0, 10), (4, 0, 7), (4, 0, -4)), (-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1)), (((20, 0, 5), (8, 0, 5), (20, 0, 5), (20, 0, -4)), (-1, 2048, 0, '172.16.42.8', '172.16.47.21', -1, -1, -1, -1))]
2:[(((18, 0, 1),), (1, 2048, 0, '172.16.1.4', '172.16.5.18', -1, -1, -1, -1)), (((4, 0, 4),), (1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1)), (((20, 0, 1), (21, 0, 3)), (-1, 2048, 0, '172.16.5.18', '172.16.7.21', -1, -1, -1, -1)), (((3, 0, 11), (5, 0, 4)), (-1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1)), (((9, 0, 1),), (1, 2048, 0, '172.16.7.21', '172.16.2.9', -1, -1, -1, -1))]
3:[(((21, 0, 1),), (1, 2048, 0, -1, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1)), (((21, 0, 2),), (1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1)), (((16, 0, 1),), (1, 2048, 0, ('172.16.1.0', '255.255.255.0'), -1, -1, -1, -1, -1)), (((16, 0, 2),), (-1, 2048, 0, -1, '172.16.5.16', -1, -1, -1, -1)), (((2, 0, 1),), (1, 2048, 0, '172.16.55.1', -1, -1, -1, -1, -1)), (((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 1)), (-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1)), (((1, 0, 2), (3, 0, 4), (6, 0, 2), (7, 0, 2)), (-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1)), (((2, 0, 3),), (1, 2048, 0, ('172.16.5.0', '255.255.255.0'), -1, -1, -1, -1, -1)), (((2, 0, 4),), (1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1)), (((2, 0, 5),), (1, 2048, 0, ('172.16.42.0', '255.255.255.0'), -1, -1, -1, -1, -1))]
4:[]
Number of distributed conflicts by class: {'loop': 5, 'drop': 5}