


2022-06-05 18:30:21.248120
number of nodes in rule graph = 0
number of edges in rule graph = 0

self.ft = 
Number of rules: [0, {}]

self.lc_cfl_rules = 
Number of local conflicts by dpid: [0, {}]
Number of local conflicts by class: [0, {}]

self.hc_cfl_rules = 
1:{}
2:{}
3:{}
Number of rules causing hidden conflicts by control app: {}

self.dt_cfl_rules = 
1:[]
2:[]
3:[]
4:[]
Number of distributed conflicts by class: {'loop': 0, 'drop': 0}

2022-06-05 18:30:36.607730
New rule is coming, number of existing rules: [0, {}]
Time difference (ms) in checking local conflicts and adding new rule (1,0,1) to the rule database = 0.1354217529296875

2022-06-05 18:30:36.684429
New rule is coming, number of existing rules: [1, {1: 1}]
Time difference (ms) in checking local conflicts and adding new rule (1,0,2) to the rule database = 0.4756450653076172

2022-06-05 18:30:36.753725
New rule is coming, number of existing rules: [2, {1: 2}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,1) to the rule database = 5.930423736572266

2022-06-05 18:30:36.820538
New rule is coming, number of existing rules: [3, {1: 2, 3: 1}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,2) to the rule database = 2.5920867919921875

2022-06-05 18:30:36.884125
New rule is coming, number of existing rules: [4, {1: 2, 3: 2}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,1) to the rule database = 0.1087188720703125

2022-06-05 18:30:36.936366
New rule is coming, number of existing rules: [5, {1: 2, 3: 2, 4: 1}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,2) to the rule database = 0.1800060272216797

2022-06-05 18:30:37.003997
New rule is coming, number of existing rules: [6, {1: 2, 3: 2, 4: 2}]
Time difference (ms) in checking local conflicts and adding new rule (6,0,1) to the rule database = 0.1327991485595703

2022-06-05 18:30:37.066923
New rule is coming, number of existing rules: [7, {1: 2, 3: 2, 4: 2, 6: 1}]
Time difference (ms) in checking local conflicts and adding new rule (6,0,2) to the rule database = 0.32210350036621094

2022-06-05 18:30:37.137535
New rule is coming, number of existing rules: [8, {1: 2, 3: 2, 4: 2, 6: 2}]
Time difference (ms) in checking local conflicts and adding new rule (7,0,1) to the rule database = 1.8916130065917969

2022-06-05 18:30:37.202834
New rule is coming, number of existing rules: [9, {1: 2, 3: 2, 4: 2, 6: 2, 7: 1}]
Time difference (ms) in checking local conflicts and adding new rule (7,0,2) to the rule database = 0.16069412231445312

2022-06-05 18:30:37.272060
New rule is coming, number of existing rules: [10, {1: 2, 3: 2, 4: 2, 6: 2, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (2,0,1) to the rule database = 0.10061264038085938

2022-06-05 18:30:37.341615
New rule is coming, number of existing rules: [11, {1: 2, 2: 1, 3: 2, 4: 2, 6: 2, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,3) to the rule database = 2.3491382598876953

2022-06-05 18:30:37.412290
New rule is coming, number of existing rules: [12, {1: 2, 2: 1, 3: 3, 4: 2, 6: 2, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,3) to the rule database = 0.2720355987548828

2022-06-05 18:30:37.466317
New rule is coming, number of existing rules: [13, {1: 2, 2: 1, 3: 3, 4: 3, 6: 2, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,4) to the rule database = 0.16689300537109375


2022-06-05 18:30:48.286734
Number of existing rules: [14, {1: 2, 2: 1, 3: 3, 4: 4, 6: 2, 7: 2}]
number of nodes in rule graph = 0
number of edges in rule graph = 0
number of rules to be removed = 0
number of rules to be added = 14
Time difference (ms) in checking hidden conflicts for rule (1,0,1) = 0.016927719116210938
Time difference (ms) in adding rule (1,0,1) to the rule graph = 30.046939849853516
Time difference (ms) in checking hidden conflicts for rule (1,0,2) = 0.0133514404296875
Time difference (ms) in adding rule (1,0,2) to the rule graph = 12.099742889404297
Time difference (ms) in checking hidden conflicts for rule (3,0,1) = 0.012159347534179688
Time difference (ms) in adding rule (3,0,1) to the rule graph = 5.598545074462891
Time difference (ms) in checking hidden conflicts for rule (3,0,2) = 0.011444091796875
Time difference (ms) in adding rule (3,0,2) to the rule graph = 7.382631301879883
Time difference (ms) in checking hidden conflicts for rule (4,0,1) = 0.011205673217773438
Time difference (ms) in adding rule (4,0,1) to the rule graph = 1.5327930450439453
Time difference (ms) in checking hidden conflicts for rule (4,0,2) = 0.010728836059570312
Time difference (ms) in adding rule (4,0,2) to the rule graph = 5.94782829284668
Time difference (ms) in checking hidden conflicts for rule (6,0,1) = 0.011444091796875
Time difference (ms) in adding rule (6,0,1) to the rule graph = 17.720699310302734
Time difference (ms) in checking hidden conflicts for rule (6,0,2) = 0.011205673217773438
Time difference (ms) in adding rule (6,0,2) to the rule graph = 5.648612976074219
Time difference (ms) in checking hidden conflicts for rule (7,0,1) = 0.010967254638671875
Time difference (ms) in adding rule (7,0,1) to the rule graph = 1.9869804382324219
Time difference (ms) in checking hidden conflicts for rule (7,0,2) = 0.010967254638671875
Time difference (ms) in adding rule (7,0,2) to the rule graph = 2.078533172607422
Time difference (ms) in checking hidden conflicts for rule (2,0,1) = 0.3705024719238281
Time difference (ms) in checking hidden conflicts for rule (3,0,3) = 0.01049041748046875
Time difference (ms) in adding rule (3,0,3) to the rule graph = 21.832704544067383
Time difference (ms) in checking hidden conflicts for rule (4,0,3) = 0.010967254638671875
Time difference (ms) in checking hidden conflicts for rule (4,0,4) = 0.010251998901367188
Time difference (ms) in adding rule (4,0,4) to the rule graph = 6.238698959350586
Time difference (ms) after this round of updating the rule graph = 118.11470985412598
Avarage time difference (ms) in removing 0 rules from rule graph = 0
Avarage time difference (ms) in adding 10 rules to rule graph = 9.0043306350708


2022-06-05 18:30:58.459650
number of nodes in rule graph = 17
number of edges in rule graph = 16
((3, 0, 2), (4, 0, 2)) {((3, 0, 2), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 4), ((2, 0, 1), (3, 0, 2), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.2', '172.16.22.7', -1, -1, -1, -1), 4), ((1, 0, 2), (3, 0, 2), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 4)}
((4, 0, 4), (4, 0, -1)) {((4, 0, 4),): ((1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1), -1)}
((3, 0, 3), (4, 0, 3)) {((3, 0, 3), (4, 0, 3)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2), ((4, 0, 3), (3, 0, 3), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2)}
((6, 0, 1), (7, 0, 2)) {((6, 0, 1), (7, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 3), ((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((6, 0, 1), (7, 0, 1)) {((6, 0, 1), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 2)}
((7, 0, 1), (7, 0, -2)) {((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((1, 0, 1), (4, 0, 1)) {((1, 0, 1), (4, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((1, 0, 1), (4, 0, 2)) {((1, 0, 1), (4, 0, 2)): ((-1, 2048, 0, ('172.16.21.0', '255.255.255.0'), '172.16.22.7', -1, -1, -1, -1), 4)}
((4, 0, 3), (4, 0, -4)) {((4, 0, 3), (3, 0, 3), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), -1)}
((4, 0, 3), (3, 0, 3)) {((4, 0, 3), (3, 0, 3)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2), ((3, 0, 3), (4, 0, 3), (3, 0, 3), (3, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2)}
((7, 0, 2), (7, 0, -2)) {((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((2, 0, 1), (3, 0, 2)) {((2, 0, 1), (3, 0, 2)): ((-1, 2048, 0, '172.16.1.2', ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((3, 0, 1), (6, 0, 1)) {((3, 0, 1), (6, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 4), ((1, 0, 2), (3, 0, 1), (6, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 4)}
((3, 0, 1), (6, 0, 2)) {((1, 0, 2), (3, 0, 1), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3), ((3, 0, 1), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((1, 0, 2), (3, 0, 2)) {((1, 0, 2), (3, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 2)}
((1, 0, 2), (3, 0, 1)) {((1, 0, 2), (3, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}

self.ft = 
1:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': ('172.16.22.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_src': ('172.16.21.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [4], (1, 2048, 0, ('172.16.21.0', '255.255.255.0'), ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 2: (513, 2, OFPMatch(oxm_fields={'ipv4_dst': '172.16.22.7', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
2:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.2.1'}), [OFPActionSetField(ipv4_src='172.16.1.2'), OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (1, 2048, 0, '172.16.2.1', -1, -1, -1, -1, -1), ('172.16.1.2', -1, -1, -1, -1, -1, {4}))}}
3:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': '172.16.22.7', 'eth_type': 2048, 'ipv4_src': '172.16.21.1'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [6], (1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 2, OFPMatch(oxm_fields={'ipv4_dst': ('172.16.22.0', '255.255.255.0'), 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, -1, ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 3, 'ipv4_dst': '172.16.23.7', 'eth_type': 2048, 'ipv4_src': '172.16.22.1'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (3, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
4:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': '172.16.22.7', 'eth_type': 2048, 'ipv4_src': '172.16.21.1'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [8], (1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 4, OFPMatch(oxm_fields={'ipv4_dst': '172.16.22.7', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [8], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 4, 'ipv4_dst': '172.16.23.7', 'eth_type': 2048, 'ipv4_src': '172.16.22.1'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [3], (4, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 4: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': ('172.16.24.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_src': '172.16.21.2'}), [], [], (1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
6:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': ('172.16.22.0', '255.255.255.0'), 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [7], (1, 2048, 0, -1, ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': '172.16.22.7', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3}))}}
7:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.21.1'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.21.1', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 2: (513, 3, OFPMatch(oxm_fields={'ipv4_dst': '172.16.22.7', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2}))}}
Number of rules: [14, {1: 2, 2: 1, 3: 3, 4: 4, 6: 2, 7: 2}]

self.lc_cfl_rules = 
1:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))]}}
3:{0: {2: [(1, 'class Generalization1 (local conflicts)', (1, 3, 1))]}}
4:{0: {1: [(2, 'class Redundancy (local conflicts)', (2, 3, 0))], 2: []}}
6:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))]}}
7:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: []}}
Number of local conflicts by dpid: [5, {1: {'cor1': 1}, 3: {'gen1': 1}, 4: {'red': 1}, 6: {'sha1': 1}, 7: {'ove': 1}}]
Number of local conflicts by class: [5, {'cor1': 1, 'red': 1, 'ove': 1, 'sha1': 1, 'gen1': 1}]

self.hc_cfl_rules = 
1:{'eplb': [((2, 0, 1), [[1], 2048, [6, 17], ['172.16.2.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]])]}
2:{}
3:{}
Number of rules causing hidden conflicts by control app: {'eplb': 1}

self.dt_cfl_rules = 
1:[(((4, 0, 3), (3, 0, 3), (4, 0, 3), (4, 0, -4)), (-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1))]
2:[(((4, 0, 4),), (1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1))]
3:[(((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 1)), (-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1)), (((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 2)), (-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1))]
4:[]
Number of distributed conflicts by class: {'loop': 1, 'drop': 1}

2022-06-05 18:31:12.601808
New rule is coming, number of existing rules: [14, {1: 2, 2: 1, 3: 3, 4: 4, 6: 2, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (1,0,3) to the rule database = 5.822896957397461

2022-06-05 18:31:12.684857
New rule is coming, number of existing rules: [15, {1: 3, 2: 1, 3: 3, 4: 4, 6: 2, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (1,0,4) to the rule database = 0.3972053527832031

2022-06-05 18:31:12.759851
New rule is coming, number of existing rules: [16, {1: 4, 2: 1, 3: 3, 4: 4, 6: 2, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,4) to the rule database = 2.9778480529785156

2022-06-05 18:31:12.833348
New rule is coming, number of existing rules: [17, {1: 4, 2: 1, 3: 4, 4: 4, 6: 2, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,5) to the rule database = 0.4315376281738281

2022-06-05 18:31:12.907638
New rule is coming, number of existing rules: [18, {1: 4, 2: 1, 3: 5, 4: 4, 6: 2, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,5) to the rule database = 0.5028247833251953

2022-06-05 18:31:12.956840
New rule is coming, number of existing rules: [19, {1: 4, 2: 1, 3: 5, 4: 5, 6: 2, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,6) to the rule database = 0.46944618225097656

2022-06-05 18:31:13.028736
New rule is coming, number of existing rules: [20, {1: 4, 2: 1, 3: 5, 4: 6, 6: 2, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (5,0,1) to the rule database = 0.09918212890625

2022-06-05 18:31:13.096159
New rule is coming, number of existing rules: [21, {1: 4, 2: 1, 3: 5, 4: 6, 5: 1, 6: 2, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (5,0,2) to the rule database = 0.13136863708496094

2022-06-05 18:31:13.171596
New rule is coming, number of existing rules: [22, {1: 4, 2: 1, 3: 5, 4: 6, 5: 2, 6: 2, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (6,0,3) to the rule database = 0.39076805114746094

2022-06-05 18:31:13.252258
New rule is coming, number of existing rules: [23, {1: 4, 2: 1, 3: 5, 4: 6, 5: 2, 6: 3, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (6,0,4) to the rule database = 0.37360191345214844

2022-06-05 18:31:13.326917
New rule is coming, number of existing rules: [24, {1: 4, 2: 1, 3: 5, 4: 6, 5: 2, 6: 4, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (2,0,2) to the rule database = 0.19025802612304688

2022-06-05 18:31:13.379873
New rule is coming, number of existing rules: [25, {1: 4, 2: 2, 3: 5, 4: 6, 5: 2, 6: 4, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,6) to the rule database = 1.7604827880859375

2022-06-05 18:31:13.415475
New rule is coming, number of existing rules: [26, {1: 4, 2: 2, 3: 6, 4: 6, 5: 2, 6: 4, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (4,0,7) to the rule database = 0.3490447998046875

2022-06-05 18:31:13.461574
New rule is coming, number of existing rules: [27, {1: 4, 2: 2, 3: 6, 4: 7, 5: 2, 6: 4, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (5,0,3) to the rule database = 1.657724380493164

2022-06-05 18:31:13.508668
New rule is coming, number of existing rules: [28, {1: 4, 2: 2, 3: 6, 4: 7, 5: 3, 6: 4, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,7) to the rule database = 0.2028942108154297

2022-06-05 18:31:13.553102
New rule is coming, number of existing rules: [29, {1: 4, 2: 2, 3: 7, 4: 7, 5: 3, 6: 4, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (3,0,8) to the rule database = 0.7843971252441406

2022-06-05 18:31:13.591997
New rule is coming, number of existing rules: [30, {1: 4, 2: 2, 3: 8, 4: 7, 5: 3, 6: 4, 7: 2}]
Time difference (ms) in checking local conflicts and adding new rule (5,0,4) to the rule database = 0.16689300537109375


2022-06-05 18:31:24.510678
Number of existing rules: [31, {1: 4, 2: 2, 3: 8, 4: 7, 5: 4, 6: 4, 7: 2}]
number of nodes in rule graph = 17
number of edges in rule graph = 16
number of rules to be removed = 0
number of rules to be added = 17
Time difference (ms) in checking hidden conflicts for rule (1,0,4) = 0.017881393432617188
Time difference (ms) in adding rule (1,0,4) to the rule graph = 17.96555519104004
Time difference (ms) in checking hidden conflicts for rule (3,0,4) = 0.01430511474609375
Time difference (ms) in adding rule (3,0,4) to the rule graph = 11.525154113769531
Time difference (ms) in checking hidden conflicts for rule (3,0,5) = 0.013589859008789062
Time difference (ms) in adding rule (3,0,5) to the rule graph = 6.220579147338867
Time difference (ms) in checking hidden conflicts for rule (4,0,5) = 0.012159347534179688
Time difference (ms) in adding rule (4,0,5) to the rule graph = 2.418041229248047
Time difference (ms) in checking hidden conflicts for rule (4,0,6) = 0.01239776611328125
Time difference (ms) in adding rule (4,0,6) to the rule graph = 7.920980453491211
Time difference (ms) in checking hidden conflicts for rule (5,0,1) = 0.011682510375976562
Time difference (ms) in checking hidden conflicts for rule (5,0,2) = 0.010967254638671875
Time difference (ms) in checking hidden conflicts for rule (6,0,3) = 0.010251998901367188
Time difference (ms) in adding rule (6,0,3) to the rule graph = 1.0747909545898438
Time difference (ms) in checking hidden conflicts for rule (6,0,4) = 0.020503997802734375
Time difference (ms) in adding rule (6,0,4) to the rule graph = 0.45228004455566406
Time difference (ms) in checking hidden conflicts for rule (2,0,2) = 0.2942085266113281
Time difference (ms) in adding rule (2,0,2) to the rule graph = 0.91552734375
Time difference (ms) in checking hidden conflicts for rule (3,0,6) = 0.010967254638671875
Time difference (ms) in adding rule (3,0,6) to the rule graph = 7.056713104248047
Time difference (ms) in checking hidden conflicts for rule (4,0,7) = 0.010967254638671875
Time difference (ms) in adding rule (4,0,7) to the rule graph = 25.272846221923828
Time difference (ms) in checking hidden conflicts for rule (5,0,3) = 0.010728836059570312
Time difference (ms) in adding rule (5,0,3) to the rule graph = 13.124465942382812
Time difference (ms) in checking hidden conflicts for rule (3,0,7) = 0.010728836059570312
Time difference (ms) in adding rule (3,0,7) to the rule graph = 4.714488983154297
Time difference (ms) in checking hidden conflicts for rule (3,0,8) = 0.010967254638671875
Time difference (ms) in adding rule (3,0,8) to the rule graph = 1.371145248413086
Time difference (ms) in checking hidden conflicts for rule (5,0,4) = 0.010967254638671875
Time difference (ms) in adding rule (5,0,4) to the rule graph = 0.5102157592773438
Time difference (ms) after this round of updating the rule graph = 100.54278373718262
Avarage time difference (ms) in removing 0 rules from rule graph = 0
Avarage time difference (ms) in adding 10 rules to rule graph = 8.082246780395508


2022-06-05 18:31:34.653867
number of nodes in rule graph = 34
number of edges in rule graph = 34
((3, 0, 2), (4, 0, 2)) {((3, 0, 2), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 4), ((2, 0, 1), (3, 0, 2), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.2', '172.16.22.7', -1, -1, -1, -1), 4), ((1, 0, 2), (3, 0, 2), (4, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 4)}
((5, 0, 4), (5, 0, -1)) {((3, 0, 8), (5, 0, 4)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), -1)}
((4, 0, 4), (4, 0, -1)) {((4, 0, 4),): ((1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1), -1)}
((3, 0, 3), (4, 0, 3)) {((3, 0, 3), (4, 0, 3)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2), ((4, 0, 3), (3, 0, 3), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2)}
((6, 0, 1), (7, 0, 2)) {((6, 0, 1), (7, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 3), ((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((6, 0, 1), (7, 0, 1)) {((6, 0, 1), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), 2), ((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 2)}
((2, 0, 2), (2, 0, -2)) {((2, 0, 2),): ((1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1), -1)}
((7, 0, 1), (7, 0, -2)) {((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((3, 0, 4), (4, 0, 6)) {((1, 0, 4), (3, 0, 4), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 4), ((3, 0, 4), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 4)}
((1, 0, 1), (4, 0, 1)) {((1, 0, 1), (4, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((1, 0, 1), (4, 0, 2)) {((1, 0, 1), (4, 0, 2)): ((-1, 2048, 0, ('172.16.21.0', '255.255.255.0'), '172.16.22.7', -1, -1, -1, -1), 4)}
((4, 0, 3), (4, 0, -4)) {((4, 0, 3), (3, 0, 3), (4, 0, 3), (4, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), -1)}
((4, 0, 3), (3, 0, 3)) {((4, 0, 3), (3, 0, 3)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2), ((3, 0, 3), (4, 0, 3), (3, 0, 3), (3, 0, -4)): ((-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), 2)}
((3, 0, 7), (4, 0, 7)) {((3, 0, 6), (4, 0, 7), (5, 0, 3), (3, 0, 7), (4, 0, 7), (4, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((3, 0, 7), (4, 0, 7)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((7, 0, 2), (7, 0, -2)) {((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), -1)}
((3, 0, 5), (2, 0, -3)) {((1, 0, 4), (3, 0, 5)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), -1), ((5, 0, 2), (3, 0, 5)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), -1), ((2, 0, 1), (3, 0, 5)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.3', -1, -1, -1, -1), -1)}
((5, 0, 2), (3, 0, 5)) {((5, 0, 2), (3, 0, 5)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), 2)}
((5, 0, 1), (4, 0, 2)) {((5, 0, 1), (4, 0, 2)): ((-1, 2048, 0, '172.16.1.1', '172.16.22.7', -1, -1, -1, -1), 4)}
((5, 0, 1), (4, 0, 6)) {((5, 0, 1), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 4)}
((1, 0, 4), (3, 0, 5)) {((1, 0, 4), (3, 0, 5)): ((-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), 2)}
((1, 0, 4), (3, 0, 4)) {((1, 0, 4), (3, 0, 4)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), 3)}
((3, 0, 6), (4, 0, 7)) {((3, 0, 6), (4, 0, 7)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((3, 0, 8), (5, 0, 4)) {((3, 0, 8), (5, 0, 4)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), 2)}
((4, 0, 7), (4, 0, -4)) {((3, 0, 6), (4, 0, 7), (5, 0, 3), (3, 0, 7), (4, 0, 7), (4, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), -1)}
((4, 0, 7), (5, 0, 3)) {((3, 0, 6), (4, 0, 7), (5, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((4, 0, 7), (5, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((3, 0, 7), (4, 0, 7), (5, 0, 3)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}
((4, 0, 6), (2, 0, -3)) {((1, 0, 4), (3, 0, 4), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1), ((5, 0, 1), (4, 0, 6)): ((-1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1)}
((2, 0, 1), (3, 0, 2)) {((2, 0, 1), (3, 0, 2)): ((-1, 2048, 0, '172.16.1.2', ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), 2)}
((2, 0, 1), (3, 0, 5)) {((2, 0, 1), (3, 0, 5)): ((-1, 2048, 0, '172.16.1.2', '172.16.1.3', -1, -1, -1, -1), 2)}
((3, 0, 1), (6, 0, 1)) {((3, 0, 1), (6, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 4), ((1, 0, 2), (3, 0, 1), (6, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 4)}
((3, 0, 1), (6, 0, 2)) {((1, 0, 2), (3, 0, 1), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3), ((3, 0, 1), (6, 0, 2)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((1, 0, 2), (3, 0, 2)) {((1, 0, 2), (3, 0, 2)): ((-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), 2)}
((1, 0, 2), (3, 0, 1)) {((1, 0, 2), (3, 0, 1)): ((-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), 3)}
((4, 0, 5), (2, 0, -3)) {((4, 0, 5),): ((1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), -1)}
((5, 0, 3), (3, 0, 7)) {((3, 0, 7), (4, 0, 7), (5, 0, 3), (3, 0, 7), (3, 0, -4)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((3, 0, 6), (4, 0, 7), (5, 0, 3), (3, 0, 7)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2), ((5, 0, 3), (3, 0, 7)): ((-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), 2)}

self.ft = 
1:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': ('172.16.22.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_src': ('172.16.21.0', '255.255.255.0')}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [4], (1, 2048, 0, ('172.16.21.0', '255.255.255.0'), ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5})), 2: (513, 2, OFPMatch(oxm_fields={'ipv4_dst': '172.16.22.7', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': '172.16.1.3', 'eth_type': 2048, 'ipv4_src': '172.16.1.1'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [2], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 4: (513, 3, OFPMatch(oxm_fields={'ipv4_dst': '172.16.1.3', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4}))}}
2:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.2.1'}), [OFPActionSetField(ipv4_src='172.16.1.2'), OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [3], (1, 2048, 0, '172.16.2.1', -1, -1, -1, -1, -1), ('172.16.1.2', -1, -1, -1, -1, -1, {4})), 2: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.1.1'}), [OFPActionSetField(ipv4_src='172.16.1.2'), OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1), ('172.16.1.2', -1, -1, -1, -1, -1, {2}))}}
3:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': '172.16.22.7', 'eth_type': 2048, 'ipv4_src': '172.16.21.1'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [6], (1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 2, OFPMatch(oxm_fields={'ipv4_dst': ('172.16.22.0', '255.255.255.0'), 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (-1, 2048, 0, -1, ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 3: (512, 2, OFPMatch(oxm_fields={'in_port': 3, 'ipv4_dst': '172.16.23.7', 'eth_type': 2048, 'ipv4_src': '172.16.22.1'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (3, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 4: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': '172.16.1.3', 'eth_type': 2048, 'ipv4_src': '172.16.1.1'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [4], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 5: (513, 2, OFPMatch(oxm_fields={'ipv4_dst': '172.16.1.3', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [2], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 6: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': '172.16.1.5', 'eth_type': 2048, 'ipv4_src': '172.16.1.4'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 7: (514, 2, OFPMatch(oxm_fields={'in_port': 5, 'ipv4_dst': '172.16.1.5', 'eth_type': 2048, 'ipv4_src': '172.16.1.4'}), [OFPActionOutput(len=16,max_len=65509,port=4,type=0)], [4], (5, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {4})), 8: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': '172.16.1.6', 'eth_type': 2048, 'ipv4_src': '172.16.1.2'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [5], (1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5}))}}
4:{0: {1: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': '172.16.22.7', 'eth_type': 2048, 'ipv4_src': '172.16.21.1'}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [8], (1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 2: (513, 4, OFPMatch(oxm_fields={'ipv4_dst': '172.16.22.7', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=6,type=0)], [8], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {6})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 4, 'ipv4_dst': '172.16.23.7', 'eth_type': 2048, 'ipv4_src': '172.16.22.1'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [3], (4, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 4: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': ('172.16.24.0', '255.255.255.0'), 'eth_type': 2048, 'ipv4_src': '172.16.21.2'}), [], [], (1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set())), 5: (512, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': '172.16.1.3', 'eth_type': 2048, 'ipv4_src': '172.16.1.1'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [2], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 6: (513, 4, OFPMatch(oxm_fields={'ipv4_dst': '172.16.1.3', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [2], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 7: (513, 2, OFPMatch(oxm_fields={'in_port': 4, 'ipv4_dst': '172.16.1.5', 'eth_type': 2048, 'ipv4_src': '172.16.1.4'}), [OFPActionOutput(len=16,max_len=65509,port=5,type=0)], [5], (4, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {5}))}}
5:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.1.1'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [4], (1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 2: (513, 2, OFPMatch(oxm_fields={'ipv4_dst': '172.16.1.3', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=1,type=0)], [3], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {1})), 3: (513, 2, OFPMatch(oxm_fields={'in_port': 2, 'ipv4_dst': '172.16.1.5', 'eth_type': 2048, 'ipv4_src': '172.16.1.4'}), [OFPActionOutput(len=16,max_len=65509,port=1,type=0)], [3], (2, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {1})), 4: (513, 2, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': '172.16.1.6', 'eth_type': 2048, 'ipv4_src': '172.16.1.2'}), [], [], (1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, set()))}}
6:{0: {1: (512, 4, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': ('172.16.22.0', '255.255.255.0'), 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [7], (1, 2048, 0, -1, ('172.16.22.0', '255.255.255.0'), -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 2: (513, 3, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': '172.16.22.7', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 3: (512, 4, OFPMatch(oxm_fields={'in_port': 1, 'ipv4_dst': '172.16.1.3', 'eth_type': 2048, 'ipv4_src': '172.16.1.1'}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (1, 2048, 0, '172.16.1.1', '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3})), 4: (513, 3, OFPMatch(oxm_fields={'ipv4_dst': '172.16.1.3', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=3,type=0)], [8], (-1, 2048, 0, -1, '172.16.1.3', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {3}))}}
7:{0: {1: (512, 2, OFPMatch(oxm_fields={'in_port': 1, 'eth_type': 2048, 'ipv4_src': '172.16.21.1'}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (1, 2048, 0, '172.16.21.1', -1, -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2})), 2: (513, 3, OFPMatch(oxm_fields={'ipv4_dst': '172.16.22.7', 'eth_type': 2048}), [OFPActionOutput(len=16,max_len=65509,port=2,type=0)], [-2], (-1, 2048, 0, -1, '172.16.22.7', -1, -1, -1, -1), (-1, -1, -1, -1, -1, -1, {2}))}}
Number of rules: [31, {1: 4, 2: 2, 3: 8, 4: 7, 5: 4, 6: 4, 7: 2}]

self.lc_cfl_rules = 
1:{0: {2: [(1, 'class Correlation1 (local conflicts)', (1, 4, 1))], 3: [(4, 'class Shadowing2 (local conflicts)', (2, 3, 1))], 4: []}}
3:{0: {2: [(1, 'class Generalization1 (local conflicts)', (1, 3, 1))], 5: [(4, 'class Generalization1 (local conflicts)', (1, 3, 1))]}}
4:{0: {1: [(2, 'class Redundancy (local conflicts)', (2, 3, 0))], 2: [], 5: [(6, 'class Redundancy (local conflicts)', (2, 3, 0))], 6: []}}
5:{0: {2: [(1, 'class Correlation3 (local conflicts)', (0, 4, 1))]}}
6:{0: {2: [(1, 'class Shadowing1 (local conflicts)', (1, 2, 1))], 4: [(3, 'class Overlap (local conflicts)', (1, 3, 0))]}}
7:{0: {1: [(2, 'class Overlap (local conflicts)', (2, 4, 0))], 2: []}}
Number of local conflicts by dpid: [10, {1: {'sha2': 1, 'cor1': 1}, 3: {'gen1': 2}, 4: {'red': 2}, 5: {'cor3': 1}, 6: {'ove': 1, 'sha1': 1}, 7: {'ove': 1}}]
Number of local conflicts by class: [10, {'cor3': 1, 'ove': 2, 'sha1': 1, 'gen1': 2, 'sha2': 1, 'cor1': 1, 'red': 2}]

self.hc_cfl_rules = 
1:{'eplb': [((2, 0, 1), [[1], 2048, [6, 17], ['172.16.2.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]]), ((2, 0, 2), [[1], 2048, [6, 17], ['172.16.1.1'], ['192.168.1.2'], [-1], [-1], [-1], [-1]])]}
2:{}
3:{}
Number of rules causing hidden conflicts by control app: {'eplb': 2}

self.dt_cfl_rules = 
1:[(((4, 0, 3), (3, 0, 3), (4, 0, 3), (4, 0, -4)), (-1, 2048, 0, '172.16.22.1', '172.16.23.7', -1, -1, -1, -1)), (((3, 0, 6), (4, 0, 7), (5, 0, 3), (3, 0, 7), (4, 0, 7), (4, 0, -4)), (-1, 2048, 0, '172.16.1.4', '172.16.1.5', -1, -1, -1, -1))]
2:[(((4, 0, 4),), (1, 2048, 0, '172.16.21.2', ('172.16.24.0', '255.255.255.0'), -1, -1, -1, -1)), (((3, 0, 8), (5, 0, 4)), (-1, 2048, 0, '172.16.1.2', '172.16.1.6', -1, -1, -1, -1))]
3:[(((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 1)), (-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1)), (((1, 0, 2), (3, 0, 1), (6, 0, 1), (7, 0, 2)), (-1, 2048, 0, '172.16.21.1', '172.16.22.7', -1, -1, -1, -1)), (((2, 0, 2),), (1, 2048, 0, '172.16.1.1', -1, -1, -1, -1, -1))]
4:[]
Number of distributed conflicts by class: {'loop': 2, 'drop': 2}